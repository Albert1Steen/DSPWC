const buttons = document.querySelectorAll(".menu-button");

function scrollToBottom() {
    window.scrollTo(0, document.body.scrollHeight);
}
  function scrollToTop() {
    window.scrollTo(0, 0);
}

buttons.forEach(button => {
  button.addEventListener("click", event => {
    switch (event.target.textContent) {
        case "Home":
            window.location.href = "file:///C:/VSCode/DysonSphereProgram/Sandbox/!HomePage/HomePage.html";
            break;
        case "Low Tier":
            window.location.href = "file:///C:/VSCode/DysonSphereProgram/Sandbox/1Low-Tier/Low-Tier.html";
            break;
        case "Mid Tier":
            window.location.href = "file:///C:/VSCode/DysonSphereProgram/Sandbox/2Mid-Tier/Mid-Tier.html";
            break;
        case "High Tier":
            window.location.href = "file:///C:/VSCode/DysonSphereProgram/Sandbox/3High-Tier/High-Tier.html";
            break;
        case "Science":
            window.location.href = "file:///C:/VSCode/DysonSphereProgram/Sandbox/4Science/Science.html";
            break;
        case "Buildings":
            window.location.href = "file:///C:/VSCode/DysonSphereProgram/Sandbox/5Buildings/Buildings.html";
            break;
      }
  });
});

function calculateTotal(){
    var Po1 = document.getElementById("Po1").value;
    var Po2 = document.getElementById("Po2").value;
    var Po3 = document.getElementById("Po3").value;
    var Be1 = document.getElementById("Be1").value;
    var Be2 = document.getElementById("Be2").value;
    var Be3 = document.getElementById("Be3").value;
    var Spl = document.getElementById("Spl").value;
    var Stc = document.getElementById("Stc").value;
    var Sp = document.getElementById("Sp").value;
    var So1 = document.getElementById("So1").value;
    var So2 = document.getElementById("So2").value;
    var So3 = document.getElementById("So3").value;
    var As1 = document.getElementById("As1").value;
    var As2 = document.getElementById("As2").value;
    var As3 = document.getElementById("As3").value;
    var Sm1 = document.getElementById("Sm1").value;
    var Sm2 = document.getElementById("Sm2").value;
    var Cp1 = document.getElementById("Cp1").value;
    var Cp2 = document.getElementById("Cp2").value;
    var Fr = document.getElementById("Fr").value;
    var Pa = document.getElementById("Pa").value;
    var MaX = document.getElementById("MaX").value;
    var Mi1 = document.getElementById("Mi1").value;
    var Mi2 = document.getElementById("Mi2").value;
    var Pu = document.getElementById("Pu").value;
    var OiE = document.getElementById("OiE").value;
    var OiR = document.getElementById("OiR").value;
    var Ex = document.getElementById("Ex").value;
    var Ra = document.getElementById("Ra").value;
    var Rai = document.getElementById("Rai").value;
    var Ve = document.getElementById("Ve").value;
    var Ar = document.getElementById("Ar").value;
    var LoDi = document.getElementById("LoDi").value;
    var PlL = document.getElementById("PlL").value;
    var In = document.getElementById("In").value;
    var Or = document.getElementById("Or").value;
    var Wi = document.getElementById("Wi").value;
    var ThP = document.getElementById("ThP").value;
    var Sol = document.getElementById("Sol").value;
    var Ac = document.getElementById("Ac").value;
    var Geo = document.getElementById("Geo").value;
    var Mi = document.getElementById("Mi").value;
    var St1 = document.getElementById("St1").value;
    var St2 = document.getElementById("St2").value;
    var StL = document.getElementById("StL").value;

    // Set recipes, amount of machines are time of recipe (recipe takes 3 seconds, it takes 3 machines for 1 output/s)
    // Set recipes, resource is per 1 item output (1 iron ore for 1 iron ingot, 3 iron ingot for 1 steel)
    // set the recipe for Power pole mk1
    var Po1_M = Po1 * 1;
     var Po1_Ir = Po1 * 2;
     var Po1_Ir_M = Po1_Ir * 1;
      var Po1_Ir_Ore = Po1_Ir * 1;
     var Po1_MaC = Po1 * 1;
     var Po1_MaC_M = Po1_MaC * 0.5;
      var Po1_MaC_Ma = Po1_MaC * 1;
      var Po1_MaC_Ma_M = Po1_MaC_Ma * 1.5;
       var Po1_MaC_Ma_Ore = Po1_MaC_Ma * 1;
      var Po1_MaC_Co = Po1_MaC * 0.5;
      var Po1_MaC_Co_M = Po1_MaC_Co * 1;
       var Po1_MaC_Co_Ore = Po1_MaC_Co * 1;
    // set the recipe for Power pole mk2
    var Po2_M = Po2 * 3;
     var Po2_Po1 = Po2 * 1;
     var Po2_Po1_M = Po2_Po1 * 1;
      var Po2_Po1_Ir = Po2_Po1 * 2;
      var Po2_Po1_Ir_M = Po2_Po1_Ir * 1;
       var Po2_Po1_Ir_Ore = Po2_Po1_Ir * 1;
      var Po2_Po1_MaC = Po2_Po1 * 1;
      var Po2_Po1_MaC_M = Po2_Po1_MaC * 0.5;
       var Po2_Po1_MaC_Ma = Po2_Po1_MaC * 1;
       var Po2_Po1_MaC_Ma_M = Po2_Po1_MaC_Ma * 1.5;
        var Po2_Po1_MaC_Ma_Ore = Po2_Po1_MaC_Ma * 1;
       var Po2_Po1_MaC_Co = Po2_Po1_MaC * 0.5;
       var Po2_Po1_MaC_Co_M = Po2_Po1_MaC_Co * 1;
        var Po2_Po1_MaC_Co_Ore = Po2_Po1_MaC_Co * 1;
     var Po2_PlE = Po2 * 3;
     var Po2_PlE_M = Po2_PlE * 2;
      var Po2_PlE_MaC = Po2_PlE * 4;
      var Po2_PlE_MaC_M = Po2_PlE_MaC * 0.5;
       var Po2_PlE_MaC_Ma = Po2_PlE_MaC * 1;
       var Po2_PlE_MaC_Ma_M = Po2_PlE_MaC_Ma * 1.5;
        var Po2_PlE_MaC_Ma_Ore = Po2_PlE_MaC_Ma * 1;
       var Po2_PlE_MaC_Co = Po2_PlE_MaC * 0.5;
       var Po2_PlE_MaC_Co_M = Po2_PlE_MaC_Co * 1;
        var Po2_PlE_MaC_Co_Ore = Po2_PlE_MaC_Co * 1;
      var Po2_PlE_Pr = Po2_PlE * 2;
      var Po2_PlE_Pr_M = Po2_PlE_Pr * 1;
       var Po2_PlE_Pr_Gl = Po2_PlE_Pr * 1.5;
       var Po2_PlE_Pr_Gl_M = Po2_PlE_Pr_Gl * 2; 
        var Po2_PlE_Pr_Gl_Ore = Po2_PlE_Pr_Gl * 2;
    // set the recipe for Power pole mk3
    var Po3_M = Po3 * 5;
     var Po3_Po2 = Po3 * 1;
     var Po3_Po2_M = Po3_Po2 * 3;
      var Po3_Po2_Po1 = Po3_Po2 * 1;
      var Po3_Po2_Po1_M = Po3_Po2_Po1 * 1;
       var Po3_Po2_Po1_Ir = Po3_Po2_Po1 * 2;
       var Po3_Po2_Po1_Ir_M = Po3_Po2_Po1_Ir * 1;
        var Po3_Po2_Po1_Ir_Ore = Po3_Po2_Po1_Ir * 1;
       var Po3_Po2_Po1_MaC = Po3_Po2_Po1 * 1;
       var Po3_Po2_Po1_MaC_M = Po3_Po2_Po1_MaC * 0.5;
        var Po3_Po2_Po1_MaC_Ma = Po3_Po2_Po1_MaC * 1;
        var Po3_Po2_Po1_MaC_Ma_M = Po3_Po2_Po1_MaC_Ma * 1.5;
         var Po3_Po2_Po1_MaC_Ma_Ore = Po3_Po2_Po1_MaC_Ma * 1;
        var Po3_Po2_Po1_MaC_Co = Po3_Po2_Po1_MaC * 0.5;
        var Po3_Po2_Po1_MaC_Co_M = Po3_Po2_Po1_MaC_Co * 1;
         var Po3_Po2_Po1_MaC_Co_Ore = Po3_Po2_Po1_MaC_Co * 1;
      var Po3_Po2_PlE = Po3_Po2 * 3;
      var Po3_Po2_PlE_M = Po3_Po2_PlE * 2;
       var Po3_Po2_PlE_MaC = Po3_Po2_PlE * 4;
       var Po3_Po2_PlE_MaC_M = Po3_Po2_PlE_MaC * 0.5;
        var Po3_Po2_PlE_MaC_Ma = Po3_Po2_PlE_MaC * 1;
        var Po3_Po2_PlE_MaC_Ma_M = Po3_Po2_PlE_MaC_Ma * 1.5;
         var Po3_Po2_PlE_MaC_Ma_Ore = Po3_Po2_PlE_MaC_Ma * 1;
        var Po3_Po2_PlE_MaC_Co = Po3_Po2_PlE_MaC * 0.5;
        var Po3_Po2_PlE_MaC_Co_M = Po3_Po2_PlE_MaC_Co * 1;
         var Po3_Po2_PlE_MaC_Co_Ore = Po3_Po2_PlE_MaC_Co * 1;
       var Po3_Po2_PlE_Pr = Po3_Po2_PlE * 2;
       var Po3_Po2_PlE_Pr_M = Po3_Po2_PlE_Pr * 1;
        var Po3_Po2_PlE_Pr_Gl = Po3_Po2_PlE_Pr * 1.5;
        var Po3_Po2_PlE_Pr_Gl_M = Po3_Po2_PlE_Pr_Gl * 2; 
         var Po3_Po2_PlE_Pr_Gl_Ore = Po3_Po2_PlE_Pr_Gl * 2;
     var Po3_El = Po3 * 10;
     var Po3_El_M = Po3_El *3;
      var Po3_El_Tu = Po3_El * 2;
      var Po3_El_Tu_M = Po3_El_Tu * 2;
      var Po3_El_Tu_Mo = Po3_El_Tu * 2;
      var Po3_El_Tu_Mo_M = Po3_El_Tu_Mo * 2;
       var Po3_El_Tu_Mo_Ir = Po3_El_Tu_Mo * 2;
       var Po3_El_Tu_Mo_Ir_M = Po3_El_Tu_Mo_Ir * 1;
        var Po3_El_Tu_Mo_Ir_Ore = Po3_El_Tu_Mo_Ir * 1;
       var Po3_El_Tu_Mo_Ge = Po3_El_Tu_Mo;
       var Po3_El_Tu_Mo_Ge_M = Po3_El_Tu_Mo_Ge * 1;
        var Po3_El_Tu_Mo_Ge_Ir = Po3_El_Tu_Mo_Ge *1;
        var Po3_El_Tu_Mo_Ge_Ir_M = Po3_El_Tu_Mo_Ge_Ir * 1;
         var Po3_El_Tu_Mo_Ge_Ir_Ore = Po3_El_Tu_Mo_Ge_Ir * 1;
       var Po3_El_Tu_Mo_MaC = Po3_El_Tu_Mo;
       var Po3_El_Tu_Mo_MaC_M = Po3_El_Tu_Mo_MaC * 0.5;
        var Po3_El_Tu_Mo_MaC_Ma = Po3_El_Tu_Mo_MaC * 1;
        var Po3_El_Tu_Mo_MaC_Ma_M = Po3_El_Tu_Mo_MaC_Ma * 1.5;
         var Po3_El_Tu_Mo_MaC_Ma_Ore = Po3_El_Tu_Mo_MaC_Ma * 1;
        var Po3_El_Tu_Mo_MaC_Co = Po3_El_Tu_Mo_MaC * 0.5;
        var Po3_El_Tu_Mo_MaC_Co_M = Po3_El_Tu_Mo_MaC_Co * 1;
         var Po3_El_Tu_Mo_MaC_Co_Ore = Po3_El_Tu_Mo_MaC_Co * 1;
      var Po3_El_Tu_MaC = Po3_El_Tu * 2;
      var Po3_El_Tu_MaC_M = Po3_El_Tu_MaC * 0.5;
       var Po3_El_Tu_MaC_Ma = Po3_El_Tu_MaC * 1;
       var Po3_El_Tu_MaC_Ma_M = Po3_El_Tu_MaC_Ma * 1.5;
        var Po3_El_Tu_MaC_Ma_Ore = Po3_El_Tu_MaC_Ma * 1;
       var Po3_El_Tu_MaC_Co = Po3_El_Tu_MaC * 0.5;
       var Po3_El_Tu_MaC_Co_M = Po3_El_Tu_MaC_Co * 1;
        var Po3_El_Tu_MaC_Co_Ore = Po3_El_Tu_MaC_Co * 1;
      var Po3_El_Ma = Po3_El * 3;
      var Po3_El_Ma_M = Po3_El_Ma * 1.5;
       var Po3_El_Ma_Ore = Po3_El_Ma *1;
      var Po3_El_GrR = Po3_El * 1;
      var Po3_El_GrR_M = Po3_El_GrR * 2;
       var Po3_El_GrR_Ore = Po3_El_GrR * 2;
     var Po3_FrM = Po3 * 2;
      var Po3_FrM_M = Po3_FrM * 6;
      var Po3_FrM_Ca = Po3_FrM * 4;
      var Po3_FrM_Ca_M = Po3_FrM_Ca * 2;
       var Po3_FrM_Ca_Spi = Po3_FrM_Ca * 3;
      var Po3_FrM_TiA = Po3_FrM * 1;
      var Po3_FrM_TiA_M = Po3_FrM_TiA * 3;
       var Po3_FrM_TiA_Ti = Po3_FrM_TiA;
       var Po3_FrM_TiA_Ti_M = Po3_FrM_TiA_Ti * 2;
        var Po3_FrM_TiA_Ti_Ore = Po3_FrM_TiA_Ti * 2;
       var Po3_FrM_TiA_St = Po3_FrM_TiA;
       var Po3_FrM_TiA_St_M = Po3_FrM_TiA_St * 3;
        var Po3_FrM_TiA_St_Ir = Po3_FrM_TiA_St * 3;
        var Po3_FrM_TiA_St_Ir_M = Po3_FrM_TiA_St_Ir;
         var Po3_FrM_TiA_St_Ir_Ore = Po3_FrM_TiA_St_Ir;
       var Po3_FrM_TiA_Su = Po3_FrM_TiA * 2;
      var Po3_FrM_Si = Po3_FrM * 1;
      var Po3_FrM_Si_M = Po3_FrM_Si * 2;
       var Po3_FrM_Si_Ore = Po3_FrM_Si * 2;
    // set the recipe for Belt mk1
    var Be1_M = Be1 * 1/3;
     var Be1_Ir = Be1 * 2/3;
     var Be1_Ir_M = Be1_Ir * 1;
      var Be1_Ir_Ore = Be1_Ir * 1;
     var Be1_Ge = Be1 * 1/3;
     var Be1_Ge_M = Be1_Ge * 1;
      var Be1_Ge_Ir = Be1_Ge *1;
      var Be1_Ge_Ir_M = Be1_Ge_Ir * 1;
       var Be1_Ge_Ir_Ore = Be1_Ge_Ir * 1;
    // set the recipe for Belt mk2
    var Be2_M = Be2 * 1/3;
     var Be2_Be1 = Be2 * 1;
     var Be2_Be1_M = Be2_Be1 * 1/3;
      var Be2_Be1_Ir = Be2_Be1 * 2/3;
      var Be2_Be1_Ir_M = Be2_Be1_Ir * 1;
       var Be2_Be1_Ir_Ore = Be2_Be1_Ir * 1;
      var Be2_Be1_Ge = Be2_Be1 * 1/3;
      var Be2_Be1_Ge_M = Be2_Be1_Ge * 1;
       var Be2_Be1_Ge_Ir = Be2_Be1_Ge *1;
       var Be2_Be1_Ge_Ir_M = Be2_Be1_Ge_Ir * 1;
        var Be2_Be1_Ge_Ir_Ore = Be2_Be1_Ge_Ir * 1;
     var Be2_Tu = Be2 * 1/3;
     var Be2_Tu_M = Be2_Tu * 2;
      var Be2_Tu_Mo = Be2_Tu * 2;
      var Be2_Tu_Mo_M = Be2_Tu_Mo * 2;
       var Be2_Tu_Mo_Ir = Be2_Tu_Mo * 2;
       var Be2_Tu_Mo_Ir_M = Be2_Tu_Mo_Ir * 1;
        var Be2_Tu_Mo_Ir_Ore = Be2_Tu_Mo_Ir * 1;
       var Be2_Tu_Mo_Ge = Be2_Tu_Mo;
       var Be2_Tu_Mo_Ge_M = Be2_Tu_Mo_Ge * 1;
        var Be2_Tu_Mo_Ge_Ir = Be2_Tu_Mo_Ge *1;
        var Be2_Tu_Mo_Ge_Ir_M = Be2_Tu_Mo_Ge_Ir * 1;
         var Be2_Tu_Mo_Ge_Ir_Ore = Be2_Tu_Mo_Ge_Ir * 1;
       var Be2_Tu_Mo_MaC = Be2_Tu_Mo;
       var Be2_Tu_Mo_MaC_M = Be2_Tu_Mo_MaC * 0.5;
        var Be2_Tu_Mo_MaC_Ma = Be2_Tu_Mo_MaC * 1;
        var Be2_Tu_Mo_MaC_Ma_M = Be2_Tu_Mo_MaC_Ma * 1.5;
         var Be2_Tu_Mo_MaC_Ma_Ore = Be2_Tu_Mo_MaC_Ma * 1;
        var Be2_Tu_Mo_MaC_Co = Be2_Tu_Mo_MaC * 0.5;
        var Be2_Tu_Mo_MaC_Co_M = Be2_Tu_Mo_MaC_Co * 1;
         var Be2_Tu_Mo_MaC_Co_Ore = Be2_Tu_Mo_MaC_Co * 1;
      var Be2_Tu_MaC = Be2_Tu * 2;
      var Be2_Tu_MaC_M = Be2_Tu_MaC * 0.5;
       var Be2_Tu_MaC_Ma = Be2_Tu_MaC * 1;
       var Be2_Tu_MaC_Ma_M = Be2_Tu_MaC_Ma * 1.5;
        var Be2_Tu_MaC_Ma_Ore = Be2_Tu_MaC_Ma * 1;
       var Be2_Tu_MaC_Co = Be2_Tu_MaC * 0.5;
       var Be2_Tu_MaC_Co_M = Be2_Tu_MaC_Co * 1;
        var Be2_Tu_MaC_Co_Ore = Be2_Tu_MaC_Co * 1;
    // set the recipe for Belt mk3
    var Be3_M = Be3 * 1/3;
     var Be3_Be2 = Be3 * 1;
     var Be3_Be2_M = Be3_Be2 * 1/3;
      var Be3_Be2_Be1 = Be3_Be2 * 1;
      var Be3_Be2_Be1_M = Be3_Be2_Be1 * 1/3;
       var Be3_Be2_Be1_Ir = Be3_Be2_Be1 * 2/3;
       var Be3_Be2_Be1_Ir_M = Be3_Be2_Be1_Ir * 1;
        var Be3_Be2_Be1_Ir_Ore = Be3_Be2_Be1_Ir * 1;
       var Be3_Be2_Be1_Ge = Be3_Be2_Be1 * 1/3;
       var Be3_Be2_Be1_Ge_M = Be3_Be2_Be1_Ge * 1;
        var Be3_Be2_Be1_Ge_Ir = Be3_Be2_Be1_Ge *1;
        var Be3_Be2_Be1_Ge_Ir_M = Be3_Be2_Be1_Ge_Ir * 1;
         var Be3_Be2_Be1_Ge_Ir_Ore = Be3_Be2_Be1_Ge_Ir * 1;
      var Be3_Be2_Tu = Be3_Be2 * 1/3;
      var Be3_Be2_Tu_M = Be3_Be2_Tu * 2;
       var Be3_Be2_Tu_Mo = Be3_Be2_Tu * 2;
       var Be3_Be2_Tu_Mo_M = Be3_Be2_Tu_Mo * 2;
        var Be3_Be2_Tu_Mo_Ir = Be3_Be2_Tu_Mo * 2;
        var Be3_Be2_Tu_Mo_Ir_M = Be3_Be2_Tu_Mo_Ir * 1;
         var Be3_Be2_Tu_Mo_Ir_Ore = Be3_Be2_Tu_Mo_Ir * 1;
        var Be3_Be2_Tu_Mo_Ge = Be3_Be2_Tu_Mo;
        var Be3_Be2_Tu_Mo_Ge_M = Be3_Be2_Tu_Mo_Ge * 1;
         var Be3_Be2_Tu_Mo_Ge_Ir = Be3_Be2_Tu_Mo_Ge *1;
         var Be3_Be2_Tu_Mo_Ge_Ir_M = Be3_Be2_Tu_Mo_Ge_Ir * 1;
          var Be3_Be2_Tu_Mo_Ge_Ir_Ore = Be3_Be2_Tu_Mo_Ge_Ir * 1;
        var Be3_Be2_Tu_Mo_MaC = Be3_Be2_Tu_Mo;
        var Be3_Be2_Tu_Mo_MaC_M = Be3_Be2_Tu_Mo_MaC * 0.5;
         var Be3_Be2_Tu_Mo_MaC_Ma = Be3_Be2_Tu_Mo_MaC * 1;
         var Be3_Be2_Tu_Mo_MaC_Ma_M = Be3_Be2_Tu_Mo_MaC_Ma * 1.5;
          var Be3_Be2_Tu_Mo_MaC_Ma_Ore = Be3_Be2_Tu_Mo_MaC_Ma * 1;
         var Be3_Be2_Tu_Mo_MaC_Co = Be3_Be2_Tu_Mo_MaC * 0.5;
         var Be3_Be2_Tu_Mo_MaC_Co_M = Be3_Be2_Tu_Mo_MaC_Co * 1;
          var Be3_Be2_Tu_Mo_MaC_Co_Ore = Be3_Be2_Tu_Mo_MaC_Co * 1;
       var Be3_Be2_Tu_MaC = Be3_Be2_Tu * 2;
       var Be3_Be2_Tu_MaC_M = Be3_Be2_Tu_MaC * 0.5;
        var Be3_Be2_Tu_MaC_Ma = Be3_Be2_Tu_MaC * 1;
        var Be3_Be2_Tu_MaC_Ma_M = Be3_Be2_Tu_MaC_Ma * 1.5;
         var Be3_Be2_Tu_MaC_Ma_Ore = Be3_Be2_Tu_MaC_Ma * 1;
        var Be3_Be2_Tu_MaC_Co = Be3_Be2_Tu_MaC * 0.5;
        var Be3_Be2_Tu_MaC_Co_M = Be3_Be2_Tu_MaC_Co * 1;
         var Be3_Be2_Tu_MaC_Co_Ore = Be3_Be2_Tu_MaC_Co * 1;
     var Be3_El = Be3 * 1/3;
     var Be3_El_M = Be3_El *3;
      var Be3_El_Tu = Be3_El * 2;
      var Be3_El_Tu_M = Be3_El_Tu * 2;
      var Be3_El_Tu_Mo = Be3_El_Tu * 2;
      var Be3_El_Tu_Mo_M = Be3_El_Tu_Mo * 2;
       var Be3_El_Tu_Mo_Ir = Be3_El_Tu_Mo * 2;
       var Be3_El_Tu_Mo_Ir_M = Be3_El_Tu_Mo_Ir * 1;
        var Be3_El_Tu_Mo_Ir_Ore = Be3_El_Tu_Mo_Ir * 1;
       var Be3_El_Tu_Mo_Ge = Be3_El_Tu_Mo;
       var Be3_El_Tu_Mo_Ge_M = Be3_El_Tu_Mo_Ge * 1;
        var Be3_El_Tu_Mo_Ge_Ir = Be3_El_Tu_Mo_Ge *1;
        var Be3_El_Tu_Mo_Ge_Ir_M = Be3_El_Tu_Mo_Ge_Ir * 1;
         var Be3_El_Tu_Mo_Ge_Ir_Ore = Be3_El_Tu_Mo_Ge_Ir * 1;
       var Be3_El_Tu_Mo_MaC = Be3_El_Tu_Mo;
       var Be3_El_Tu_Mo_MaC_M = Be3_El_Tu_Mo_MaC * 0.5;
        var Be3_El_Tu_Mo_MaC_Ma = Be3_El_Tu_Mo_MaC * 1;
        var Be3_El_Tu_Mo_MaC_Ma_M = Be3_El_Tu_Mo_MaC_Ma * 1.5;
         var Be3_El_Tu_Mo_MaC_Ma_Ore = Be3_El_Tu_Mo_MaC_Ma * 1;
        var Be3_El_Tu_Mo_MaC_Co = Be3_El_Tu_Mo_MaC * 0.5;
        var Be3_El_Tu_Mo_MaC_Co_M = Be3_El_Tu_Mo_MaC_Co * 1;
         var Be3_El_Tu_Mo_MaC_Co_Ore = Be3_El_Tu_Mo_MaC_Co * 1;
      var Be3_El_Tu_MaC = Be3_El_Tu * 2;
      var Be3_El_Tu_MaC_M = Be3_El_Tu_MaC * 0.5;
       var Be3_El_Tu_MaC_Ma = Be3_El_Tu_MaC * 1;
       var Be3_El_Tu_MaC_Ma_M = Be3_El_Tu_MaC_Ma * 1.5;
        var Be3_El_Tu_MaC_Ma_Ore = Be3_El_Tu_MaC_Ma * 1;
       var Be3_El_Tu_MaC_Co = Be3_El_Tu_MaC * 0.5;
       var Be3_El_Tu_MaC_Co_M = Be3_El_Tu_MaC_Co * 1;
        var Be3_El_Tu_MaC_Co_Ore = Be3_El_Tu_MaC_Co * 1;
      var Be3_El_Ma = Be3_El * 3;
      var Be3_El_Ma_M = Be3_El_Ma * 1.5;
       var Be3_El_Ma_Ore = Be3_El_Ma *1;
      var Be3_El_GrR = Be3_El * 1;
      var Be3_El_GrR_M = Be3_El_GrR * 2;
       var Be3_El_GrR_Ore = Be3_El_GrR * 2;
     var Be3_Gr = Be3 * 1/3;
     var Be3_Gr_M = Be3_Gr * 1;
      var Be3_Gr_Hy = Be3_Gr * 0.5; //Extra
      var Be3_Gr_Fi = Be3_Gr * 1;
    // set the recipe for Splitter
    var Spl_M = Spl * 2;
     var Spl_Ir = Spl * 3;
     var Spl_Ir_M = Spl_Ir * 1;
      var Spl_Ir_Ore = Spl_Ir * 1;
     var Spl_Ge = Spl * 2;
     var Spl_Ge_M = Spl_Ge * 1;
      var Spl_Ge_Ir = Spl_Ge *1;
      var Spl_Ge_Ir_M = Spl_Ge_Ir * 1;
       var Spl_Ge_Ir_Ore = Spl_Ge_Ir * 1;
     var Spl_Ci = Spl * 1;
     var Spl_Ci_M = Spl_Ci * 0.5;
      var Spl_Ci_Ir = Spl_Ci * 1;
      var Spl_Ci_Ir_M = Spl_Ci_Ir * 1;
       var Spl_Ci_Ir_Ore = Spl_Ci_Ir * 1;        
      var Spl_Ci_Co = Spl_Ci * 0.5;
      var Spl_Ci_Co_M = Spl_Ci_Co * 1;
       var Spl_Ci_Co_Ore = Spl_Ci_Co * 1;
    // set the recipe for Stacker
    var Stc_M = Stc * 4;
     var Stc_Ge = Stc * 4;
     var Stc_Ge_M = Stc_Ge * 1;
      var Stc_Ge_Ir = Stc_Ge *1;
      var Stc_Ge_Ir_M = Stc_Ge_Ir * 1;
       var Stc_Ge_Ir_Ore = Stc_Ge_Ir * 1;
     var Stc_St = Stc * 3;
     var Stc_St_M = Stc_St * 3;
      var Stc_St_Ir = Stc_St * 3;
      var Stc_St_Ir_M = Stc_St_Ir;
       var Stc_St_Ir_Ore = Stc_St_Ir;
     var Stc_El = Stc * 1;
     var Stc_El_M = Stc_El *3;
      var Stc_El_Tu = Stc_El * 2;
      var Stc_El_Tu_M = Stc_El_Tu * 2;
      var Stc_El_Tu_Mo = Stc_El_Tu * 2;
      var Stc_El_Tu_Mo_M = Stc_El_Tu_Mo * 2;
       var Stc_El_Tu_Mo_Ir = Stc_El_Tu_Mo * 2;
       var Stc_El_Tu_Mo_Ir_M = Stc_El_Tu_Mo_Ir * 1;
        var Stc_El_Tu_Mo_Ir_Ore = Stc_El_Tu_Mo_Ir * 1;
       var Stc_El_Tu_Mo_Ge = Stc_El_Tu_Mo;
       var Stc_El_Tu_Mo_Ge_M = Stc_El_Tu_Mo_Ge * 1;
        var Stc_El_Tu_Mo_Ge_Ir = Stc_El_Tu_Mo_Ge *1;
        var Stc_El_Tu_Mo_Ge_Ir_M = Stc_El_Tu_Mo_Ge_Ir * 1;
         var Stc_El_Tu_Mo_Ge_Ir_Ore = Stc_El_Tu_Mo_Ge_Ir * 1;
       var Stc_El_Tu_Mo_MaC = Stc_El_Tu_Mo;
       var Stc_El_Tu_Mo_MaC_M = Stc_El_Tu_Mo_MaC * 0.5;
        var Stc_El_Tu_Mo_MaC_Ma = Stc_El_Tu_Mo_MaC * 1;
        var Stc_El_Tu_Mo_MaC_Ma_M = Stc_El_Tu_Mo_MaC_Ma * 1.5;
         var Stc_El_Tu_Mo_MaC_Ma_Ore = Stc_El_Tu_Mo_MaC_Ma * 1;
        var Stc_El_Tu_Mo_MaC_Co = Stc_El_Tu_Mo_MaC * 0.5;
        var Stc_El_Tu_Mo_MaC_Co_M = Stc_El_Tu_Mo_MaC_Co * 1;
         var Stc_El_Tu_Mo_MaC_Co_Ore = Stc_El_Tu_Mo_MaC_Co * 1;
      var Stc_El_Tu_MaC = Stc_El_Tu * 2;
      var Stc_El_Tu_MaC_M = Stc_El_Tu_MaC * 0.5;
       var Stc_El_Tu_MaC_Ma = Stc_El_Tu_MaC * 1;
       var Stc_El_Tu_MaC_Ma_M = Stc_El_Tu_MaC_Ma * 1.5;
        var Stc_El_Tu_MaC_Ma_Ore = Stc_El_Tu_MaC_Ma * 1;
       var Stc_El_Tu_MaC_Co = Stc_El_Tu_MaC * 0.5;
       var Stc_El_Tu_MaC_Co_M = Stc_El_Tu_MaC_Co * 1;
        var Stc_El_Tu_MaC_Co_Ore = Stc_El_Tu_MaC_Co * 1;
      var Stc_El_Ma = Stc_El * 3;
      var Stc_El_Ma_M = Stc_El_Ma * 1.5;
       var Stc_El_Ma_Ore = Stc_El_Ma *1;
      var Stc_El_GrR = Stc_El * 1;
      var Stc_El_GrR_M = Stc_El_GrR * 2;
       var Stc_El_GrR_Ore = Stc_El_GrR * 2;
     var Stc_Pro = Stc * 2;
     var Stc_Pro_M = Stc_Pro * 3;
      var Stc_Pro_Ci = Stc_Pro * 2;
      var Stc_Pro_Ci_M = Stc_Pro_Ci * 0.5;
       var Stc_Pro_Ci_Ir = Stc_Pro_Ci * 1;
       var Stc_Pro_Ci_Ir_M = Stc_Pro_Ci_Ir * 1;
        var Stc_Pro_Ci_Ir_Ore = Stc_Pro_Ci_Ir * 1;        
       var Stc_Pro_Ci_Co = Stc_Pro_Ci * 0.5;
       var Stc_Pro_Ci_Co_M = Stc_Pro_Ci_Co * 1;
        var Stc_Pro_Ci_Co_Ore = Stc_Pro_Ci_Co * 1;
      var Stc_Pro_My = Stc_Pro * 2;
      var Stc_Pro_My_M = Stc_Pro_My * 2;
       var Stc_Pro_My_Si = Stc_Pro_My * 2;
       var Stc_Pro_My_Si_M = Stc_Pro_My_Si * 2;
        var Stc_Pro_My_Si_Ore = Stc_Pro_My_Si * 2;        
       var Stc_Pro_My_Co = Stc_Pro_My * 1;
       var Stc_Pro_My_Co_M = Stc_Pro_My_Co * 1;
        var Stc_Pro_My_Co_Ore = Stc_Pro_My_Co * 1;
    // set the recipe for Spray coater
    var Sp_M = Sp * 3;
     var Sp_St = Sp * 4;
     var Sp_St_M = Sp_St * 3;
      var Sp_St_Ir = Sp_St * 3;
      var Sp_St_Ir_M = Sp_St_Ir;
       var Sp_St_Ir_Ore = Sp_St_Ir;
     var Sp_PlE = Sp * 2;
     var Sp_PlE_M = Sp_PlE * 2;
      var Sp_PlE_MaC = Sp_PlE * 4;
      var Sp_PlE_MaC_M = Sp_PlE_MaC * 0.5;
       var Sp_PlE_MaC_Ma = Sp_PlE_MaC * 1;
       var Sp_PlE_MaC_Ma_M = Sp_PlE_MaC_Ma * 1.5;
        var Sp_PlE_MaC_Ma_Ore = Sp_PlE_MaC_Ma * 1;
       var Sp_PlE_MaC_Co = Sp_PlE_MaC * 0.5;
       var Sp_PlE_MaC_Co_M = Sp_PlE_MaC_Co * 1;
        var Sp_PlE_MaC_Co_Ore = Sp_PlE_MaC_Co * 1;
      var Sp_PlE_Pr = Sp_PlE * 2;
      var Sp_PlE_Pr_M = Sp_PlE_Pr * 1;
       var Sp_PlE_Pr_Gl = Sp_PlE_Pr * 1.5;
       var Sp_PlE_Pr_Gl_M = Sp_PlE_Pr_Gl * 2; 
        var Sp_PlE_Pr_Gl_Ore = Sp_PlE_Pr_Gl * 2;
      var Sp_Ci = Sp * 2;
     var Sp_Ci_M = Sp_Ci * 0.5;
      var Sp_Ci_Ir = Sp_Ci * 1;
      var Sp_Ci_Ir_M = Sp_Ci_Ir * 1;
       var Sp_Ci_Ir_Ore = Sp_Ci_Ir * 1;        
      var Sp_Ci_Co = Sp_Ci * 0.5;
      var Sp_Ci_Co_M = Sp_Ci_Co * 1;
       var Sp_Ci_Co_Ore = Sp_Ci_Co * 1;
     var Sp_My = Sp * 2;
     var Sp_My_M = Sp_My * 2;
      var Sp_My_Si = Sp_My * 2;
      var Sp_My_Si_M = Sp_My_Si * 2;
       var Sp_My_Si_Ore = Sp_My_Si * 2;        
      var Sp_My_Co = Sp_My * 1;
      var Sp_My_Co_M = Sp_My_Co * 1;
       var Sp_My_Co_Ore = Sp_My_Co * 1;
    // set the recipe for Sorter mk1
    var So1_M = So1 * 1;
     var So1_Ir = So1 * 1;
     var So1_Ir_M = So1_Ir * 1;
      var So1_Ir_Ore = So1_Ir * 1;
     var So1_Ci = So1 * 1;
     var So1_Ci_M = So1_Ci * 0.5;
      var So1_Ci_Ir = So1_Ci * 1;
      var So1_Ci_Ir_M = So1_Ci_Ir * 1;
       var So1_Ci_Ir_Ore = So1_Ci_Ir * 1;        
      var So1_Ci_Co = So1_Ci * 0.5;
      var So1_Ci_Co_M = So1_Ci_Co * 1;
       var So1_Ci_Co_Ore = So1_Ci_Co * 1; 
    // set the recipe for Sorter mk2
    var So2_M = So2 * 1/2;
     var So2_So1 = So2 * 1;
     var So2_So1_M = So2_So1 * 1;
      var So2_So1_Ir = So2_So1 * 1;
      var So2_So1_Ir_M = So2_So1_Ir * 1;
       var So2_So1_Ir_Ore = So2_So1_Ir * 1;
      var So2_So1_Ci = So2_So1 * 1;
      var So2_So1_Ci_M = So2_So1_Ci * 0.5;
       var So2_So1_Ci_Ir = So2_So1_Ci * 1;
       var So2_So1_Ci_Ir_M = So2_So1_Ci_Ir * 1;
        var So2_So1_Ci_Ir_Ore = So2_So1_Ci_Ir * 1;        
       var So2_So1_Ci_Co = So2_So1_Ci * 0.5;
       var So2_So1_Ci_Co_M = So2_So1_Ci_Co * 1;
        var So2_So1_Ci_Co_Ore = So2_So1_Ci_Co * 1; 
     var So2_Mo = So2 * 1/2;
     var So2_Mo_M = So2_Mo * 2;
      var So2_Mo_Ir = So2_Mo * 2;
      var So2_Mo_Ir_M = So2_Mo_Ir * 1;
       var So2_Mo_Ir_Ore = So2_Mo_Ir * 1;
      var So2_Mo_Ge = So2_Mo;
      var So2_Mo_Ge_M = So2_Mo_Ge * 1;
       var So2_Mo_Ge_Ir = So2_Mo_Ge *1;
       var So2_Mo_Ge_Ir_M = So2_Mo_Ge_Ir * 1;
        var So2_Mo_Ge_Ir_Ore = So2_Mo_Ge_Ir * 1;
      var So2_Mo_MaC = So2_Mo;
      var So2_Mo_MaC_M = So2_Mo_MaC * 0.5;
       var So2_Mo_MaC_Ma = So2_Mo_MaC * 1;
       var So2_Mo_MaC_Ma_M = So2_Mo_MaC_Ma * 1.5;
        var So2_Mo_MaC_Ma_Ore = So2_Mo_MaC_Ma * 1;
       var So2_Mo_MaC_Co = So2_Mo_MaC * 0.5;
       var So2_Mo_MaC_Co_M = So2_Mo_MaC_Co * 1;
        var So2_Mo_MaC_Co_Ore = So2_Mo_MaC_Co * 1;
    // set the recipe for Sorter mk3
    var So3_M = So3 * 1;
     var So3_So2 = So3 * 1;
     var So3_So2_M = So3_So2 * 1/2;
      var So3_So2_So1 = So3_So2 * 1;
      var So3_So2_So1_M = So3_So2_So1 * 1;
       var So3_So2_So1_Ir = So3_So2_So1 * 1;
       var So3_So2_So1_Ir_M = So3_So2_So1_Ir * 1;
        var So3_So2_So1_Ir_Ore = So3_So2_So1_Ir * 1;
       var So3_So2_So1_Ci = So3_So2_So1 * 1;
       var So3_So2_So1_Ci_M = So3_So2_So1_Ci * 0.5;
        var So3_So2_So1_Ci_Ir = So3_So2_So1_Ci * 1;
        var So3_So2_So1_Ci_Ir_M = So3_So2_So1_Ci_Ir * 1;
         var So3_So2_So1_Ci_Ir_Ore = So3_So2_So1_Ci_Ir * 1;        
        var So3_So2_So1_Ci_Co = So3_So2_So1_Ci * 0.5;
        var So3_So2_So1_Ci_Co_M = So3_So2_So1_Ci_Co * 1;
         var So3_So2_So1_Ci_Co_Ore = So3_So2_So1_Ci_Co * 1; 
      var So3_So2_Mo = So3_So2 * 1/2;
      var So3_So2_Mo_M = So3_So2_Mo * 2;
       var So3_So2_Mo_Ir = So3_So2_Mo * 2;
       var So3_So2_Mo_Ir_M = So3_So2_Mo_Ir * 1;
        var So3_So2_Mo_Ir_Ore = So3_So2_Mo_Ir * 1;
       var So3_So2_Mo_Ge = So3_So2_Mo;
       var So3_So2_Mo_Ge_M = So3_So2_Mo_Ge * 1;
        var So3_So2_Mo_Ge_Ir = So3_So2_Mo_Ge *1;
        var So3_So2_Mo_Ge_Ir_M = So3_So2_Mo_Ge_Ir * 1;
         var So3_So2_Mo_Ge_Ir_Ore = So3_So2_Mo_Ge_Ir * 1;
       var So3_So2_Mo_MaC = So3_So2_Mo;
       var So3_So2_Mo_MaC_M = So3_So2_Mo_MaC * 0.5;
        var So3_So2_Mo_MaC_Ma = So3_So2_Mo_MaC * 1;
        var So3_So2_Mo_MaC_Ma_M = So3_So2_Mo_MaC_Ma * 1.5;
         var So3_So2_Mo_MaC_Ma_Ore = So3_So2_Mo_MaC_Ma * 1;
        var So3_So2_Mo_MaC_Co = So3_So2_Mo_MaC * 0.5;
        var So3_So2_Mo_MaC_Co_M = So3_So2_Mo_MaC_Co * 1;
         var So3_So2_Mo_MaC_Co_Ore = So3_So2_Mo_MaC_Co * 1;
     var So3_Tu = So3 * 1/2;
     var So3_Tu_M = So3_Tu * 2;
      var So3_Tu_Mo = So3_Tu * 2;
      var So3_Tu_Mo_M = So3_Tu_Mo * 2;
       var So3_Tu_Mo_Ir = So3_Tu_Mo * 2;
       var So3_Tu_Mo_Ir_M = So3_Tu_Mo_Ir * 1;
        var So3_Tu_Mo_Ir_Ore = So3_Tu_Mo_Ir * 1;
       var So3_Tu_Mo_Ge = So3_Tu_Mo;
       var So3_Tu_Mo_Ge_M = So3_Tu_Mo_Ge * 1;
        var So3_Tu_Mo_Ge_Ir = So3_Tu_Mo_Ge *1;
        var So3_Tu_Mo_Ge_Ir_M = So3_Tu_Mo_Ge_Ir * 1;
         var So3_Tu_Mo_Ge_Ir_Ore = So3_Tu_Mo_Ge_Ir * 1;
       var So3_Tu_Mo_MaC = So3_Tu_Mo;
       var So3_Tu_Mo_MaC_M = So3_Tu_Mo_MaC * 0.5;
        var So3_Tu_Mo_MaC_Ma = So3_Tu_Mo_MaC * 1;
        var So3_Tu_Mo_MaC_Ma_M = So3_Tu_Mo_MaC_Ma * 1.5;
         var So3_Tu_Mo_MaC_Ma_Ore = So3_Tu_Mo_MaC_Ma * 1;
        var So3_Tu_Mo_MaC_Co = So3_Tu_Mo_MaC * 0.5;
        var So3_Tu_Mo_MaC_Co_M = So3_Tu_Mo_MaC_Co * 1;
         var So3_Tu_Mo_MaC_Co_Ore = So3_Tu_Mo_MaC_Co * 1;
      var So3_Tu_MaC = So3_Tu * 2;
      var So3_Tu_MaC_M = So3_Tu_MaC * 0.5;
       var So3_Tu_MaC_Ma = So3_Tu_MaC * 1;
       var So3_Tu_MaC_Ma_M = So3_Tu_MaC_Ma * 1.5;
        var So3_Tu_MaC_Ma_Ore = So3_Tu_MaC_Ma * 1;
       var So3_Tu_MaC_Co = So3_Tu_MaC * 0.5;
       var So3_Tu_MaC_Co_M = So3_Tu_MaC_Co * 1;
        var So3_Tu_MaC_Co_Ore = So3_Tu_MaC_Co * 1;
    // set the recipe for Assembler mk1
    var As1_M = As1 * 2;
     var As1_Ir = As1 * 4;
     var As1_Ir_M = As1_Ir * 1;
      var As1_Ir_Ore = As1_Ir * 1;
     var As1_Ge = As1 * 8;
     var As1_Ge_M = As1_Ge * 1;
      var As1_Ge_Ir = As1_Ge *1;
      var As1_Ge_Ir_M = As1_Ge_Ir * 1;
       var As1_Ge_Ir_Ore = As1_Ge_Ir * 1;
     var As1_Ci = As1 * 4;
     var As1_Ci_M = As1_Ci * 0.5;
      var As1_Ci_Ir = As1_Ci * 1;
      var As1_Ci_Ir_M = As1_Ci_Ir * 1;
       var As1_Ci_Ir_Ore = As1_Ci_Ir * 1;        
      var As1_Ci_Co = As1_Ci * 0.5;
      var As1_Ci_Co_M = As1_Ci_Co * 1;
       var As1_Ci_Co_Ore = As1_Ci_Co * 1;
    // set the recipe for Assembler mk2
    var As2_M = As2 * 3;
     var As2_As1 = As2 * 1;
     var As2_As1_M = As2_As1 * 2;
      var As2_As1_Ir = As2_As1 * 4;
      var As2_As1_Ir_M = As2_As1_Ir * 1;
       var As2_As1_Ir_Ore = As2_As1_Ir * 1;
      var As2_As1_Ge = As2_As1 * 8;
      var As2_As1_Ge_M = As2_As1_Ge * 1;
       var As2_As1_Ge_Ir = As2_As1_Ge *1;
       var As2_As1_Ge_Ir_M = As2_As1_Ge_Ir * 1;
        var As2_As1_Ge_Ir_Ore = As2_As1_Ge_Ir * 1;
      var As2_As1_Ci = As2_As1 * 4;
      var As2_As1_Ci_M = As2_As1_Ci * 0.5;
       var As2_As1_Ci_Ir = As2_As1_Ci * 1;
       var As2_As1_Ci_Ir_M = As2_As1_Ci_Ir * 1;
        var As2_As1_Ci_Ir_Ore = As2_As1_Ci_Ir * 1;        
       var As2_As1_Ci_Co = As2_As1_Ci * 0.5;
       var As2_As1_Ci_Co_M = As2_As1_Ci_Co * 1;
        var As2_As1_Ci_Co_Ore = As2_As1_Ci_Co * 1;
     var As2_Gr = As2 * 8;
     var As2_Gr_M = As2_Gr * 1;
      var As2_Gr_Hy = As2_Gr * 0.5; //EXTRA
      var As2_Gr_Fi = As2_Gr * 1;
     var As2_Pro = As2 * 4;
     var As2_Pro_M = As2_Pro * 3;
      var As2_Pro_Ci = As2_Pro * 2;
      var As2_Pro_Ci_M = As2_Pro_Ci * 0.5;
       var As2_Pro_Ci_Ir = As2_Pro_Ci * 1;
       var As2_Pro_Ci_Ir_M = As2_Pro_Ci_Ir * 1;
        var As2_Pro_Ci_Ir_Ore = As2_Pro_Ci_Ir * 1;        
       var As2_Pro_Ci_Co = As2_Pro_Ci * 0.5;
       var As2_Pro_Ci_Co_M = As2_Pro_Ci_Co * 1;
        var As2_Pro_Ci_Co_Ore = As2_Pro_Ci_Co * 1;
      var As2_Pro_My = As2_Pro * 2;
      var As2_Pro_My_M = As2_Pro_My * 2;
       var As2_Pro_My_Si = As2_Pro_My * 2;
       var As2_Pro_My_Si_M = As2_Pro_My_Si * 2;
        var As2_Pro_My_Si_Ore = As2_Pro_My_Si * 2;        
       var As2_Pro_My_Co = As2_Pro_My * 1;
       var As2_Pro_My_Co_M = As2_Pro_My_Co * 1;
        var As2_Pro_My_Co_Ore = As2_Pro_My_Co * 1;
    // set the recipe for Assembler mk3
    var As3_M = As3 * 4;
     var As3_As2 = As3 * 1;
     var As3_As2_M = As3_As2 * 3;
      var As3_As2_As1 = As3_As2 * 1;
      var As3_As2_As1_M = As3_As2_As1 * 2;
       var As3_As2_As1_Ir = As3_As2_As1 * 4;
       var As3_As2_As1_Ir_M = As3_As2_As1_Ir * 1;
        var As3_As2_As1_Ir_Ore = As3_As2_As1_Ir * 1;
       var As3_As2_As1_Ge = As3_As2_As1 * 8;
       var As3_As2_As1_Ge_M = As3_As2_As1_Ge * 1;
        var As3_As2_As1_Ge_Ir = As3_As2_As1_Ge *1;
        var As3_As2_As1_Ge_Ir_M = As3_As2_As1_Ge_Ir * 1;
         var As3_As2_As1_Ge_Ir_Ore = As3_As2_As1_Ge_Ir * 1;
       var As3_As2_As1_Ci = As3_As2_As1 * 4;
       var As3_As2_As1_Ci_M = As3_As2_As1_Ci * 0.5;
        var As3_As2_As1_Ci_Ir = As3_As2_As1_Ci * 1;
        var As3_As2_As1_Ci_Ir_M = As3_As2_As1_Ci_Ir * 1;
         var As3_As2_As1_Ci_Ir_Ore = As3_As2_As1_Ci_Ir * 1;        
        var As3_As2_As1_Ci_Co = As3_As2_As1_Ci * 0.5;
        var As3_As2_As1_Ci_Co_M = As3_As2_As1_Ci_Co * 1;
         var As3_As2_As1_Ci_Co_Ore = As3_As2_As1_Ci_Co * 1;
      var As3_As2_Gr = As3_As2 * 8;
      var As3_As2_Gr_M = As3_As2_Gr * 1;
       var As3_As2_Gr_Hy = As3_As2_Gr * 0.5; //EXTRA
       var As3_As2_Gr_Fi = As3_As2_Gr * 1;
      var As3_As2_Pro = As3_As2 * 4;
      var As3_As2_Pro_M = As3_As2_Pro * 3;
       var As3_As2_Pro_Ci = As3_As2_Pro * 2;
       var As3_As2_Pro_Ci_M = As3_As2_Pro_Ci * 0.5;
        var As3_As2_Pro_Ci_Ir = As3_As2_Pro_Ci * 1;
        var As3_As2_Pro_Ci_Ir_M = As3_As2_Pro_Ci_Ir * 1;
         var As3_As2_Pro_Ci_Ir_Ore = As3_As2_Pro_Ci_Ir * 1;        
        var As3_As2_Pro_Ci_Co = As3_As2_Pro_Ci * 0.5;
        var As3_As2_Pro_Ci_Co_M = As3_As2_Pro_Ci_Co * 1;
         var As3_As2_Pro_Ci_Co_Ore = As3_As2_Pro_Ci_Co * 1;
       var As3_As2_Pro_My = As3_As2_Pro * 2;
       var As3_As2_Pro_My_M = As3_As2_Pro_My * 2;
        var As3_As2_Pro_My_Si = As3_As2_Pro_My * 2;
        var As3_As2_Pro_My_Si_M = As3_As2_Pro_My_Si * 2;
         var As3_As2_Pro_My_Si_Ore = As3_As2_Pro_My_Si * 2;        
        var As3_As2_Pro_My_Co = As3_As2_Pro_My * 1;
        var As3_As2_Pro_My_Co_M = As3_As2_Pro_My_Co * 1;
         var As3_As2_Pro_My_Co_Ore = As3_As2_Pro_My_Co * 1;
     var As3_Pa = As3 * 8;
     var As3_Pa_M = As3_Pa *8;
      var As3_Pa_Gr = As3_Pa * 2;
      var As3_Pa_Gr_M = As3_Pa_Gr * 1;
       var As3_Pa_Gr_Hy = As3_Pa_Gr * 0.5; 
       var As3_Pa_Gr_Fi = As3_Pa_Gr * 1;
      var As3_Pa_SiC = As3_Pa * 2;
      var As3_Pa_SiC_M = As3_Pa_SiC * 0.75;
       var As3_Pa_SiC_Ore = As3_Pa_SiC * 0.5;
      var As3_Pa_Pl = As3_Pa * 1;
      var As3_Pa_Pl_M = As3_Pa_Pl * 3;
       var As3_Pa_Pl_GrR = As3_Pa_Pl;
       var As3_Pa_Pl_GrR_M = As3_Pa_Pl_GrR * 2;
        var As3_Pa_Pl_GrR_Ore = As3_Pa_Pl_GrR * 2;
       var As3_Pa_Pl_LiO = As3_Pa_Pl * 2;
       var As3_Pa_Pl_LiO_M = As3_Pa_Pl_LiO * 4/3;
        var As3_Pa_Pl_LiO_Ore = As3_Pa_Pl_LiO * 1/3;
         var As3_Pa_Pl_LiO_Hy = As3_Pa_Pl_LiO * 1/3;
         var As3_Pa_Pl_LiO_LiO = As3_Pa_Pl_LiO * 2/3;
         var As3_Pa_Pl_LiO_LiO_M = As3_Pa_Pl_LiO_LiO * 2;
          var As3_Pa_Pl_LiO_LiO_CrO = As3_Pa_Pl_LiO_LiO;
     var As3_Qu = As3 * 2;
     var As3_Qu_M = As3_Qu * 6;
      var As3_Qu_Pro = As3_Qu * 2;
      var As3_Qu_Pro_M = As3_Qu_Pro * 3;
       var As3_Qu_Pro_Ci = As3_Qu_Pro * 2;
       var As3_Qu_Pro_Ci_M = As3_Qu_Pro_Ci * 0.5;
        var As3_Qu_Pro_Ci_Ir = As3_Qu_Pro_Ci * 1;
        var As3_Qu_Pro_Ci_Ir_M = As3_Qu_Pro_Ci_Ir * 1;
         var As3_Qu_Pro_Ci_Ir_Ore = As3_Qu_Pro_Ci_Ir * 1;        
        var As3_Qu_Pro_Ci_Co = As3_Qu_Pro_Ci * 0.5;
        var As3_Qu_Pro_Ci_Co_M = As3_Qu_Pro_Ci_Co * 1;
         var As3_Qu_Pro_Ci_Co_Ore = As3_Qu_Pro_Ci_Co * 1;
       var As3_Qu_Pro_My = As3_Qu_Pro * 2;
       var As3_Qu_Pro_My_M = As3_Qu_Pro_My * 2;
        var As3_Qu_Pro_My_Si = As3_Qu_Pro_My * 2;
        var As3_Qu_Pro_My_Si_M = As3_Qu_Pro_My_Si * 2;
         var As3_Qu_Pro_My_Si_Ore = As3_Qu_Pro_My_Si * 2;        
        var As3_Qu_Pro_My_Co = As3_Qu_Pro_My * 1;
        var As3_Qu_Pro_My_Co_M = As3_Qu_Pro_My_Co * 1;
         var As3_Qu_Pro_My_Co_Ore = As3_Qu_Pro_My_Co * 1;
      var As3_Qu_PlF = As3_Qu * 2;
      var As3_Qu_PlF_M = As3_Qu_PlF * 12;
       var As3_Qu_PlF_TiG = As3_Qu_PlF * 2;
       var As3_Qu_PlF_TiG_M = As3_Qu_PlF_TiG * 2.5;
        var As3_Qu_PlF_TiG_Gl = As3_Qu_PlF_TiG * 1;
        var As3_Qu_PlF_TiG_Gl_M = As3_Qu_PlF_TiG_Gl * 2;
         var As3_Qu_PlF_TiG_Gl_Ore = As3_Qu_PlF_TiG_Gl * 2;
        var As3_Qu_PlF_TiG_Ti = As3_Qu_PlF_TiG;
        var As3_Qu_PlF_TiG_Ti_M = As3_Qu_PlF_TiG_Ti * 2
         var As3_Qu_PlF_TiG_Ti_Ore = As3_Qu_PlF_TiG_Ti * 2;
        var As3_Qu_PlF_TiG_Wa = As3_Qu_PlF_TiG * 1;
       var As3_Qu_PlF_Cas = As3_Qu_PlF * 1;
       var As3_Qu_PlF_Cas_M = As3_Qu_PlF_Cas * 4;
        var As3_Qu_PlF_Cas_Opt = As3_Qu_PlF_Cas * 8;
        var As3_Qu_PlF_Cas_Gr = As3_Qu_PlF_Cas * 2;
        var As3_Qu_PlF_Cas_Gr_Hy = As3_Qu_PlF_Cas_Gr * 0.5;
        var As3_Qu_PlF_Cas_Gr_M = As3_Qu_PlF_Cas_Gr * 1;
         var As3_Qu_PlF_Cas_Gr_Fi = As3_Qu_PlF_Cas_Gr * 1;
        var As3_Qu_PlF_Cas_Hy = As3_Qu_PlF_Cas * 10;
    // set the recipe for Smelter mk1
    var Sm1_M = Sm1 * 3;
     var Sm1_Ir = Sm1 * 4;
     var Sm1_Ir_M = Sm1_Ir * 1;
      var Sm1_Ir_Ore = Sm1_Ir * 1;
     var Sm1_Br = Sm1 * 2;
     var Sm1_Br_M = Sm1_Br * 1;
      var Sm1_Br_Ore = Sm1_Br * 1;
     var Sm1_Ci = Sm1 * 4;
     var Sm1_Ci_M = Sm1_Ci * 0.5;
      var Sm1_Ci_Ir = Sm1_Ci * 1;
      var Sm1_Ci_Ir_M = Sm1_Ci_Ir * 1;
       var Sm1_Ci_Ir_Ore = Sm1_Ci_Ir * 1;        
      var Sm1_Ci_Co = Sm1_Ci * 0.5;
      var Sm1_Ci_Co_M = Sm1_Ci_Co * 1;
       var Sm1_Ci_Co_Ore = Sm1_Ci_Co * 1;
     var Sm1_MaC = Sm1 * 2;
     var Sm1_MaC_M = Sm1_MaC * 0.5;
      var Sm1_MaC_Ma = Sm1_MaC * 1;
      var Sm1_MaC_Ma_M = Sm1_MaC_Ma * 1.5;
       var Sm1_MaC_Ma_Ore = Sm1_MaC_Ma * 1;
      var Sm1_MaC_Co = Sm1_MaC * 0.5;
      var Sm1_MaC_Co_M = Sm1_MaC_Co * 1;
       var Sm1_MaC_Co_Ore = Sm1_MaC_Co * 1;
    // set the recipe for Smelter mk2
    var Sm2_M = Sm2 * 5;
     var Sm2_Sm1 = Sm2 * 1;
     var Sm2_Sm1_M = Sm2_Sm1 * 3;
      var Sm2_Sm1_Ir = Sm2_Sm1 * 4;
      var Sm2_Sm1_Ir_M = Sm2_Sm1_Ir * 1;
       var Sm2_Sm1_Ir_Ore = Sm2_Sm1_Ir * 1;
       var Sm2_Sm1_Br = Sm2_Sm1 * 2;
        var Sm2_Sm1_Br_M = Sm2_Sm1_Br * 1;
         var Sm2_Sm1_Br_Ore = Sm2_Sm1_Br * 1;
      var Sm2_Sm1_Ci = Sm2_Sm1 * 4;
      var Sm2_Sm1_Ci_M = Sm2_Sm1_Ci * 0.5;
       var Sm2_Sm1_Ci_Ir = Sm2_Sm1_Ci * 1;
       var Sm2_Sm1_Ci_Ir_M = Sm2_Sm1_Ci_Ir * 1;
        var Sm2_Sm1_Ci_Ir_Ore = Sm2_Sm1_Ci_Ir * 1;        
       var Sm2_Sm1_Ci_Co = Sm2_Sm1_Ci * 0.5;
       var Sm2_Sm1_Ci_Co_M = Sm2_Sm1_Ci_Co * 1;
        var Sm2_Sm1_Ci_Co_Ore = Sm2_Sm1_Ci_Co * 1;
      var Sm2_Sm1_MaC = Sm2_Sm1 * 2;
      var Sm2_Sm1_MaC_M = Sm2_Sm1_MaC * 0.5;
       var Sm2_Sm1_MaC_Ma = Sm2_Sm1_MaC * 1;
       var Sm2_Sm1_MaC_Ma_M = Sm2_Sm1_MaC_Ma * 1.5;
        var Sm2_Sm1_MaC_Ma_Ore = Sm2_Sm1_MaC_Ma * 1;
       var Sm2_Sm1_MaC_Co = Sm2_Sm1_MaC * 0.5;
       var Sm2_Sm1_MaC_Co_M = Sm2_Sm1_MaC_Co * 1;
        var Sm2_Sm1_MaC_Co_Ore = Sm2_Sm1_MaC_Co * 1;
     var Sm2_FrM = Sm2 * 5;
     var Sm2_FrM_M = Sm2_FrM * 6;
      var Sm2_FrM_Ca = Sm2_FrM * 4;
      var Sm2_FrM_Ca_M = Sm2_FrM_Ca * 2;
       var Sm2_FrM_Ca_Spi = Sm2_FrM_Ca * 3;
      var Sm2_FrM_TiA = Sm2_FrM * 1;
      var Sm2_FrM_TiA_M = Sm2_FrM_TiA * 3;
       var Sm2_FrM_TiA_Ti = Sm2_FrM_TiA;
       var Sm2_FrM_TiA_Ti_M = Sm2_FrM_TiA_Ti * 2;
        var Sm2_FrM_TiA_Ti_Ore = Sm2_FrM_TiA_Ti * 2;
       var Sm2_FrM_TiA_St = Sm2_FrM_TiA;
       var Sm2_FrM_TiA_St_M = Sm2_FrM_TiA_St * 3;
        var Sm2_FrM_TiA_St_Ir = Sm2_FrM_TiA_St * 3;
        var Sm2_FrM_TiA_St_Ir_M = Sm2_FrM_TiA_St_Ir;
         var Sm2_FrM_TiA_St_Ir_Ore = Sm2_FrM_TiA_St_Ir;
       var Sm2_FrM_TiA_Su = Sm2_FrM_TiA * 2;
      var Sm2_FrM_Si = Sm2_FrM * 1;
      var Sm2_FrM_Si_M = Sm2_FrM_Si * 2;
       var Sm2_FrM_Si_Ore = Sm2_FrM_Si * 2;
     var Sm2_PlF = Sm2 * 4;
     var Sm2_PlF_M = Sm2_PlF * 12;
      var Sm2_PlF_TiG = Sm2_PlF * 2;
      var Sm2_PlF_TiG_M = Sm2_PlF_TiG * 2.5;
       var Sm2_PlF_TiG_Gl = Sm2_PlF_TiG * 1;
       var Sm2_PlF_TiG_Gl_M = Sm2_PlF_TiG_Gl * 2;
        var Sm2_PlF_TiG_Gl_Ore = Sm2_PlF_TiG_Gl * 2;
       var Sm2_PlF_TiG_Ti = Sm2_PlF_TiG;
       var Sm2_PlF_TiG_Ti_M = Sm2_PlF_TiG_Ti * 2
        var Sm2_PlF_TiG_Ti_Ore = Sm2_PlF_TiG_Ti * 2;
       var Sm2_PlF_TiG_Wa = Sm2_PlF_TiG * 1;
      var Sm2_PlF_Cas = Sm2_PlF * 1;
      var Sm2_PlF_Cas_M = Sm2_PlF_Cas * 4;
       var Sm2_PlF_Cas_Opt = Sm2_PlF_Cas * 8;
       var Sm2_PlF_Cas_Gr = Sm2_PlF_Cas * 2;
       var Sm2_PlF_Cas_Gr_Hy = Sm2_PlF_Cas_Gr * 0.5;
       var Sm2_PlF_Cas_Gr_M = Sm2_PlF_Cas_Gr * 1;
        var Sm2_PlF_Cas_Gr_Fi = Sm2_PlF_Cas_Gr * 1;
       var Sm2_PlF_Cas_Hy = Sm2_PlF_Cas * 10;
     var Sm2_Un = Sm2 * 15;
    // set the recipe for Chemical plant mk1
    var Cp1_M = Cp1 * 5;
     var Cp1_St = Cp1 * 8;
     var Cp1_St_M = Cp1_St * 3;
      var Cp1_St_Ir = Cp1_St * 3;
      var Cp1_St_Ir_M = Cp1_St_Ir;
       var Cp1_St_Ir_Ore = Cp1_St_Ir;
     var Cp1_Br = Cp1 * 8;
     var Cp1_Br_M = Cp1_Br * 1;
      var Cp1_Br_Ore = Cp1_Br * 1;
     var Cp1_Gl = Cp1 * 8;
     var Cp1_Gl_M = Cp1_Gl * 2;
      var Cp1_Gl_Ore = Cp1_Gl * 2;
     var Cp1_Ci = Cp1 * 2;
     var Cp1_Ci_M = Cp1_Ci * 0.5;
      var Cp1_Ci_Ir = Cp1_Ci * 1;
      var Cp1_Ci_Ir_M = Cp1_Ci_Ir * 1;
       var Cp1_Ci_Ir_Ore = Cp1_Ci_Ir * 1;        
      var Cp1_Ci_Co = Cp1_Ci * 0.5;
      var Cp1_Ci_Co_M = Cp1_Ci_Co * 1;
       var Cp1_Ci_Co_Ore = Cp1_Ci_Co * 1;
    // set the recipe for Chemical plant mk2
    var Cp2_M = Cp2 * 10;
     var Cp2_Cp1 = Cp2 * 1;
     var Cp2_Cp1_M = Cp2_Cp1 * 5;
     var Cp2_Cp1_St = Cp2_Cp1 * 8;
     var Cp2_Cp1_St_M = Cp2_Cp1_St * 3;
      var Cp2_Cp1_St_Ir = Cp2_Cp1_St * 3;
      var Cp2_Cp1_St_Ir_M = Cp2_Cp1_St_Ir;
       var Cp2_Cp1_St_Ir_Ore = Cp2_Cp1_St_Ir;
     var Cp2_Cp1_Br = Cp2_Cp1 * 8;
     var Cp2_Cp1_Br_M = Cp2_Cp1_Br * 1;
      var Cp2_Cp1_Br_Ore = Cp2_Cp1_Br * 1;
     var Cp2_Cp1_Gl = Cp2_Cp1 * 8;
     var Cp2_Cp1_Gl_M = Cp2_Cp1_Gl * 2;
      var Cp2_Cp1_Gl_Ore = Cp2_Cp1_Gl * 2;
     var Cp2_Cp1_Ci = Cp2_Cp1 * 2;
     var Cp2_Cp1_Ci_M = Cp2_Cp1_Ci * 0.5;
      var Cp2_Cp1_Ci_Ir = Cp2_Cp1_Ci * 1;
      var Cp2_Cp1_Ci_Ir_M = Cp2_Cp1_Ci_Ir * 1;
       var Cp2_Cp1_Ci_Ir_Ore = Cp2_Cp1_Ci_Ir * 1;        
      var Cp2_Cp1_Ci_Co = Cp2_Cp1_Ci * 0.5;
      var Cp2_Cp1_Ci_Co_M = Cp2_Cp1_Ci_Co * 1;
       var Cp2_Cp1_Ci_Co_Ore = Cp2_Cp1_Ci_Co * 1;
     var Cp2_TiG = Cp2 * 10;
     var Cp2_TiG_M = Cp2_TiG * 2.5;
     var Cp2_TiG_Gl = Cp2_TiG;
     var Cp2_TiG_Gl_M = Cp2_TiG_Gl * 2;
      var Cp2_TiG_Gl_Ore = Cp2_TiG_Gl * 2;
     var Cp2_TiG_Ti = Cp2_TiG;
     var Cp2_TiG_Ti_M = Cp2_TiG_Ti * 2
      var Cp2_TiG_Ti_Ore = Cp2_TiG_Ti * 2;
     var Cp2_TiG_Wa = Cp2_TiG;
     var Cp2_StM = Cp2 * 3;
     var Cp2_StM_M = Cp2_StM * 8;
     var Cp2_StM_Par = Cp2_StM * 2;
     var Cp2_StM_Par_M = Cp2_StM_Par * 4;
     var Cp2_StM_Par_Tu = Cp2_StM_Par * 2;
     var Cp2_StM_Par_Tu_M = Cp2_StM_Par_Tu * 2;
      var Cp2_StM_Par_Tu_Mo = Cp2_StM_Par_Tu * 2;
      var Cp2_StM_Par_Tu_Mo_M = Cp2_StM_Par_Tu_Mo * 2;
       var Cp2_StM_Par_Tu_Mo_Ir = Cp2_StM_Par_Tu_Mo * 2;
       var Cp2_StM_Par_Tu_Mo_Ir_M = Cp2_StM_Par_Tu_Mo_Ir * 1;
        var Cp2_StM_Par_Tu_Mo_Ir_Ore = Cp2_StM_Par_Tu_Mo_Ir * 1;
       var Cp2_StM_Par_Tu_Mo_Ge = Cp2_StM_Par_Tu_Mo;
       var Cp2_StM_Par_Tu_Mo_Ge_M = Cp2_StM_Par_Tu_Mo_Ge * 1;
        var Cp2_StM_Par_Tu_Mo_Ge_Ir = Cp2_StM_Par_Tu_Mo_Ge *1;
        var Cp2_StM_Par_Tu_Mo_Ge_Ir_M = Cp2_StM_Par_Tu_Mo_Ge_Ir * 1;
         var Cp2_StM_Par_Tu_Mo_Ge_Ir_Ore = Cp2_StM_Par_Tu_Mo_Ge_Ir * 1;
       var Cp2_StM_Par_Tu_Mo_MaC = Cp2_StM_Par_Tu_Mo;
       var Cp2_StM_Par_Tu_Mo_MaC_M = Cp2_StM_Par_Tu_Mo_MaC * 0.5;
        var Cp2_StM_Par_Tu_Mo_MaC_Ma = Cp2_StM_Par_Tu_Mo_MaC * 1;
        var Cp2_StM_Par_Tu_Mo_MaC_Ma_M = Cp2_StM_Par_Tu_Mo_MaC_Ma * 1.5;
         var Cp2_StM_Par_Tu_Mo_MaC_Ma_Ore = Cp2_StM_Par_Tu_Mo_MaC_Ma * 1;
        var Cp2_StM_Par_Tu_Mo_MaC_Co = Cp2_StM_Par_Tu_Mo_MaC * 0.5;
        var Cp2_StM_Par_Tu_Mo_MaC_Co_M = Cp2_StM_Par_Tu_Mo_MaC_Co * 1;
         var Cp2_StM_Par_Tu_Mo_MaC_Co_Ore = Cp2_StM_Par_Tu_Mo_MaC_Co * 1;
      var Cp2_StM_Par_Tu_MaC = Cp2_StM_Par_Tu * 2;
      var Cp2_StM_Par_Tu_MaC_M = Cp2_StM_Par_Tu_MaC * 0.5;
       var Cp2_StM_Par_Tu_MaC_Ma = Cp2_StM_Par_Tu_MaC * 1;
       var Cp2_StM_Par_Tu_MaC_Ma_M = Cp2_StM_Par_Tu_MaC_Ma * 1.5;
        var Cp2_StM_Par_Tu_MaC_Ma_Ore = Cp2_StM_Par_Tu_MaC_Ma * 1;
       var Cp2_StM_Par_Tu_MaC_Co = Cp2_StM_Par_Tu_MaC * 0.5;
       var Cp2_StM_Par_Tu_MaC_Co_M = Cp2_StM_Par_Tu_MaC_Co * 1;
        var Cp2_StM_Par_Tu_MaC_Co_Ore = Cp2_StM_Par_Tu_MaC_Co * 1;
     var Cp2_StM_Par_Co = Cp2_StM_Par * 2;
     var Cp2_StM_Par_Co_M = Cp2_StM_Par_Co * 1;      
      var Cp2_StM_Par_Co_Ore = Cp2_StM_Par_Co * 1;
     var Cp2_StM_Par_Gr = Cp2_StM_Par * 2;
     var Cp2_StM_Par_Gr_M = Cp2_StM_Par_Gr * 1;
     var Cp2_StM_Par_Gr_Hy = Cp2_StM_Par_Gr * 0.5;
      var Cp2_StM_Par_Gr_Fi = Cp2_StM_Par_Gr * 1;
     var Cp2_StM_Ir = Cp2_StM * 2;
     var Cp2_StM_Ir_M = Cp2_StM_Ir * 1;
      var Cp2_StM_Ir_Ore = Cp2_StM_Ir * 1;
     var Cp2_StM_De = Cp2_StM * 10;
     var Cp2_Qu = Cp2 * 3;
     var Cp2_Qu_M = Cp2_Qu * 6;
     var Cp2_Qu_Pro = Cp2_Qu * 2;
     var Cp2_Qu_Pro_M = Cp2_Qu_Pro * 3;
      var Cp2_Qu_Pro_Ci = Cp2_Qu_Pro * 2;
      var Cp2_Qu_Pro_Ci_M = Cp2_Qu_Pro_Ci * 0.5;
       var Cp2_Qu_Pro_Ci_Ir = Cp2_Qu_Pro_Ci * 1;
       var Cp2_Qu_Pro_Ci_Ir_M = Cp2_Qu_Pro_Ci_Ir * 1;
        var Cp2_Qu_Pro_Ci_Ir_Ore = Cp2_Qu_Pro_Ci_Ir * 1;        
       var Cp2_Qu_Pro_Ci_Co = Cp2_Qu_Pro_Ci * 0.5;
       var Cp2_Qu_Pro_Ci_Co_M = Cp2_Qu_Pro_Ci_Co * 1;
        var Cp2_Qu_Pro_Ci_Co_Ore = Cp2_Qu_Pro_Ci_Co * 1;
      var Cp2_Qu_Pro_My = Cp2_Qu_Pro * 2;
      var Cp2_Qu_Pro_My_M = Cp2_Qu_Pro_My * 2;
       var Cp2_Qu_Pro_My_Si = Cp2_Qu_Pro_My * 2;
       var Cp2_Qu_Pro_My_Si_M = Cp2_Qu_Pro_My_Si * 2;
        var Cp2_Qu_Pro_My_Si_Ore = Cp2_Qu_Pro_My_Si * 2;        
       var Cp2_Qu_Pro_My_Co = Cp2_Qu_Pro_My * 1;
       var Cp2_Qu_Pro_My_Co_M = Cp2_Qu_Pro_My_Co * 1;
        var Cp2_Qu_Pro_My_Co_Ore = Cp2_Qu_Pro_My_Co * 1;
     var Cp2_Qu_PlF = Cp2_Qu * 2;
     var Cp2_Qu_PlF_M = Cp2_Qu_PlF * 12;
      var Cp2_Qu_PlF_TiG = Cp2_Qu_PlF * 2;
      var Cp2_Qu_PlF_TiG_M = Cp2_Qu_PlF_TiG * 2.5;
       var Cp2_Qu_PlF_TiG_Gl = Cp2_Qu_PlF_TiG * 1;
       var Cp2_Qu_PlF_TiG_Gl_M = Cp2_Qu_PlF_TiG_Gl * 2;
        var Cp2_Qu_PlF_TiG_Gl_Ore = Cp2_Qu_PlF_TiG_Gl * 2;
       var Cp2_Qu_PlF_TiG_Ti = Cp2_Qu_PlF_TiG;
       var Cp2_Qu_PlF_TiG_Ti_M = Cp2_Qu_PlF_TiG_Ti * 2
        var Cp2_Qu_PlF_TiG_Ti_Ore = Cp2_Qu_PlF_TiG_Ti * 2;
       var Cp2_Qu_PlF_TiG_Wa = Cp2_Qu_PlF_TiG * 1;
      var Cp2_Qu_PlF_Cas = Cp2_Qu_PlF * 1;
      var Cp2_Qu_PlF_Cas_M = Cp2_Qu_PlF_Cas * 4;
       var Cp2_Qu_PlF_Cas_Opt = Cp2_Qu_PlF_Cas * 8;
       var Cp2_Qu_PlF_Cas_Gr = Cp2_Qu_PlF_Cas * 2;
       var Cp2_Qu_PlF_Cas_Gr_Hy = Cp2_Qu_PlF_Cas_Gr * 0.5;
       var Cp2_Qu_PlF_Cas_Gr_M = Cp2_Qu_PlF_Cas_Gr * 1;
        var Cp2_Qu_PlF_Cas_Gr_Fi = Cp2_Qu_PlF_Cas_Gr * 1;
       var Cp2_Qu_PlF_Cas_Hy = Cp2_Qu_PlF_Cas * 10;
    // set the recipe for Fractionator
    var Fr_M = Fr * 3;
     var Fr_St = Fr * 8;
     var Fr_St_M = Fr_St * 3;
      var Fr_St_Ir = Fr_St * 3;
      var Fr_St_Ir_M = Fr_St_Ir;
       var Fr_St_Ir_Ore = Fr_St_Ir;
     var Fr_Br = Fr * 4;
     var Fr_Br_M = Fr_Br * 1;
      var Fr_Br_Ore = Fr_Br * 1;
     var Fr_Gl = Fr * 4;
     var Fr_Gl_M = Fr_Gl * 2;
      var Fr_Gl_Ore = Fr_Gl * 2;
     var Fr_Pro = Fr * 1;
     var Fr_Pro_M = Fr_Pro * 3;
      var Fr_Pro_Ci = Fr_Pro * 2;
      var Fr_Pro_Ci_M = Fr_Pro_Ci * 0.5;
       var Fr_Pro_Ci_Ir = Fr_Pro_Ci * 1;
       var Fr_Pro_Ci_Ir_M = Fr_Pro_Ci_Ir * 1;
        var Fr_Pro_Ci_Ir_Ore = Fr_Pro_Ci_Ir * 1;        
       var Fr_Pro_Ci_Co = Fr_Pro_Ci * 0.5;
       var Fr_Pro_Ci_Co_M = Fr_Pro_Ci_Co * 1;
        var Fr_Pro_Ci_Co_Ore = Fr_Pro_Ci_Co * 1;
      var Fr_Pro_My = Fr_Pro * 2;
      var Fr_Pro_My_M = Fr_Pro_My * 2;
       var Fr_Pro_My_Si = Fr_Pro_My * 2;
       var Fr_Pro_My_Si_M = Fr_Pro_My_Si * 2;
        var Fr_Pro_My_Si_Ore = Fr_Pro_My_Si * 2;        
       var Fr_Pro_My_Co = Fr_Pro_My * 1;
       var Fr_Pro_My_Co_M = Fr_Pro_My_Co * 1;
        var Fr_Pro_My_Co_Ore = Fr_Pro_My_Co * 1;
    // set the recipe for Particle collider
    var Pa_M = Pa * 15;
     var Pa_TiA = Pa * 20;
     var Pa_TiA_M = Pa_TiA * 3;
     var Pa_TiA_Ti = Pa_TiA;
     var Pa_TiA_Ti_M = Pa_TiA_Ti * 2;
      var Pa_TiA_Ti_Ore = Pa_TiA_Ti * 2;
     var Pa_TiA_St = Pa_TiA;
     var Pa_TiA_St_M = Pa_TiA_St * 3;
      var Pa_TiA_St_Ir = Pa_TiA_St * 3;
      var Pa_TiA_St_Ir_M = Pa_TiA_St_Ir;
       var Pa_TiA_St_Ir_Ore = Pa_TiA_St_Ir;
     var Pa_TiA_Su = Pa_TiA * 2;
     var Pa_FrM = Pa * 20;
     var Pa_FrM_M = Pa_FrM * 6;
     var Pa_FrM_Ca = Pa_FrM * 4;
     var Pa_FrM_Ca_M = Pa_FrM_Ca * 2;
      var Pa_FrM_Ca_Spi = Pa_FrM_Ca * 3;
     var Pa_FrM_TiA = Pa_FrM * 1;
     var Pa_FrM_TiA_M = Pa_FrM_TiA * 3;
      var Pa_FrM_TiA_Ti = Pa_FrM_TiA;
      var Pa_FrM_TiA_Ti_M = Pa_FrM_TiA_Ti * 2;
       var Pa_FrM_TiA_Ti_Ore = Pa_FrM_TiA_Ti * 2;
      var Pa_FrM_TiA_St = Pa_FrM_TiA;
      var Pa_FrM_TiA_St_M = Pa_FrM_TiA_St * 3;
       var Pa_FrM_TiA_St_Ir = Pa_FrM_TiA_St * 3;
       var Pa_FrM_TiA_St_Ir_M = Pa_FrM_TiA_St_Ir;
        var Pa_FrM_TiA_St_Ir_Ore = Pa_FrM_TiA_St_Ir;
      var Pa_FrM_TiA_Su = Pa_FrM_TiA * 2;
     var Pa_FrM_Si = Pa_FrM * 1;
     var Pa_FrM_Si_M = Pa_FrM_Si * 2;
      var Pa_FrM_Si_Ore = Pa_FrM_Si * 2;
     var Pa_El = Pa * 25;
     var Pa_El_M = Pa_El *3;
     var Pa_El_Tu = Pa_El * 2;
     var Pa_El_Tu_M = Pa_El_Tu * 2;
     var Pa_El_Tu_Mo = Pa_El_Tu * 2;
     var Pa_El_Tu_Mo_M = Pa_El_Tu_Mo * 2;
      var Pa_El_Tu_Mo_Ir = Pa_El_Tu_Mo * 2;
      var Pa_El_Tu_Mo_Ir_M = Pa_El_Tu_Mo_Ir * 1;
       var Pa_El_Tu_Mo_Ir_Ore = Pa_El_Tu_Mo_Ir * 1;
      var Pa_El_Tu_Mo_Ge = Pa_El_Tu_Mo;
      var Pa_El_Tu_Mo_Ge_M = Pa_El_Tu_Mo_Ge * 1;
       var Pa_El_Tu_Mo_Ge_Ir = Pa_El_Tu_Mo_Ge *1;
       var Pa_El_Tu_Mo_Ge_Ir_M = Pa_El_Tu_Mo_Ge_Ir * 1;
        var Pa_El_Tu_Mo_Ge_Ir_Ore = Pa_El_Tu_Mo_Ge_Ir * 1;
      var Pa_El_Tu_Mo_MaC = Pa_El_Tu_Mo;
      var Pa_El_Tu_Mo_MaC_M = Pa_El_Tu_Mo_MaC * 0.5;
       var Pa_El_Tu_Mo_MaC_Ma = Pa_El_Tu_Mo_MaC * 1;
       var Pa_El_Tu_Mo_MaC_Ma_M = Pa_El_Tu_Mo_MaC_Ma * 1.5;
        var Pa_El_Tu_Mo_MaC_Ma_Ore = Pa_El_Tu_Mo_MaC_Ma * 1;
       var Pa_El_Tu_Mo_MaC_Co = Pa_El_Tu_Mo_MaC * 0.5;
       var Pa_El_Tu_Mo_MaC_Co_M = Pa_El_Tu_Mo_MaC_Co * 1;
        var Pa_El_Tu_Mo_MaC_Co_Ore = Pa_El_Tu_Mo_MaC_Co * 1;
     var Pa_El_Tu_MaC = Pa_El_Tu * 2;
     var Pa_El_Tu_MaC_M = Pa_El_Tu_MaC * 0.5;
      var Pa_El_Tu_MaC_Ma = Pa_El_Tu_MaC * 1;
      var Pa_El_Tu_MaC_Ma_M = Pa_El_Tu_MaC_Ma * 1.5;
       var Pa_El_Tu_MaC_Ma_Ore = Pa_El_Tu_MaC_Ma * 1;
      var Pa_El_Tu_MaC_Co = Pa_El_Tu_MaC * 0.5;
      var Pa_El_Tu_MaC_Co_M = Pa_El_Tu_MaC_Co * 1;
       var Pa_El_Tu_MaC_Co_Ore = Pa_El_Tu_MaC_Co * 1;
     var Pa_El_Ma = Pa_El * 3;
     var Pa_El_Ma_M = Pa_El_Ma * 1.5;
      var Pa_El_Ma_Ore = Pa_El_Ma *1;
     var Pa_El_GrR = Pa_El * 1;
     var Pa_El_GrR_M = Pa_El_GrR * 2;
      var Pa_El_GrR_Ore = Pa_El_GrR * 2;
     var Pa_Gr = Pa * 10;
     var Pa_Gr_M = Pa_Gr * 1;
      var Pa_Gr_Hy = Pa_Gr * 0.5; //EXTRA
      var Pa_Gr_Fi = Pa_Gr * 1;
     var Pa_Pro = Pa * 8;
     var Pa_Pro_M = Pa_Pro * 3;
     var Pa_Pro_Ci = Pa_Pro * 2;
     var Pa_Pro_Ci_M = Pa_Pro_Ci * 0.5;
      var Pa_Pro_Ci_Ir = Pa_Pro_Ci * 1;
      var Pa_Pro_Ci_Ir_M = Pa_Pro_Ci_Ir * 1;
       var Pa_Pro_Ci_Ir_Ore = Pa_Pro_Ci_Ir * 1;        
      var Pa_Pro_Ci_Co = Pa_Pro_Ci * 0.5;
      var Pa_Pro_Ci_Co_M = Pa_Pro_Ci_Co * 1;
       var Pa_Pro_Ci_Co_Ore = Pa_Pro_Ci_Co * 1;
     var Pa_Pro_My = Pa_Pro * 2;
     var Pa_Pro_My_M = Pa_Pro_My * 2;
      var Pa_Pro_My_Si = Pa_Pro_My * 2;
      var Pa_Pro_My_Si_M = Pa_Pro_My_Si * 2;
       var Pa_Pro_My_Si_Ore = Pa_Pro_My_Si * 2;        
      var Pa_Pro_My_Co = Pa_Pro_My * 1;
      var Pa_Pro_My_Co_M = Pa_Pro_My_Co * 1;
       var Pa_Pro_My_Co_Ore = Pa_Pro_My_Co * 1;
    // set the recipe for Matrix lab
    var MaX_M = MaX * 3;
     var MaX_Ir = MaX * 8;
     var MaX_Ir_M = MaX_Ir * 1;
      var MaX_Ir_Ore = MaX_Ir * 1;
     var MaX_Gl = MaX * 4;
     var MaX_Gl_M = MaX_Gl * 2;
      var MaX_Gl_Ore = MaX_Gl * 2;
     var MaX_Ci = MaX * 4; 
     var MaX_Ci_M = MaX_Ci * 0.5;
      var MaX_Ci_Ir = MaX_Ci * 1;
      var MaX_Ci_Ir_M = MaX_Ci_Ir * 1;
       var MaX_Ci_Ir_Ore = MaX_Ci_Ir * 1;        
      var MaX_Ci_Co = MaX_Ci * 0.5;
      var MaX_Ci_Co_M = MaX_Ci_Co * 1;
       var MaX_Ci_Co_Ore = MaX_Ci_Co * 1;
     var MaX_MaC = MaX * 4;
     var MaX_MaC_M = MaX_MaC * 0.5;
      var MaX_MaC_Ma = MaX_MaC * 1;
      var MaX_MaC_Ma_M = MaX_MaC_Ma * 1.5;
       var MaX_MaC_Ma_Ore = MaX_MaC_Ma * 1;
      var MaX_MaC_Co = MaX_MaC * 0.5;
      var MaX_MaC_Co_M = MaX_MaC_Co * 1;
       var MaX_MaC_Co_Ore = MaX_MaC_Co * 1;
    // set the recipe for Miner mk1
    var Mi1_M = Mi1 * 3;
     var Mi1_Ir = Mi1 * 4;
     var Mi1_Ir_M = Mi1_Ir * 1;
      var Mi1_Ir_Ore = Mi1_Ir * 1;
     var Mi1_Ci = Mi1 * 2;
     var Mi1_Ci_M = Mi1_Ci * 0.5;
      var Mi1_Ci_Ir = Mi1_Ci * 1;
      var Mi1_Ci_Ir_M = Mi1_Ci_Ir * 1;
       var Mi1_Ci_Ir_Ore = Mi1_Ci_Ir * 1;        
      var Mi1_Ci_Co = Mi1_Ci * 0.5;
      var Mi1_Ci_Co_M = Mi1_Ci_Co * 1;
       var Mi1_Ci_Co_Ore = Mi1_Ci_Co * 1;
     var Mi1_MaC = Mi1 * 2;
     var Mi1_MaC_M = Mi1_MaC * 0.5;
      var Mi1_MaC_Ma = Mi1_MaC * 1;
      var Mi1_MaC_Ma_M = Mi1_MaC_Ma * 1.5;
       var Mi1_MaC_Ma_Ore = Mi1_MaC_Ma * 1;
      var Mi1_MaC_Co = Mi1_MaC * 0.5;
      var Mi1_MaC_Co_M = Mi1_MaC_Co * 1;
       var Mi1_MaC_Co_Ore = Mi1_MaC_Co * 1;
     var Mi1_Ge = Mi1 * 2;
     var Mi1_Ge_M = Mi1_Ge * 1;
      var Mi1_Ge_Ir = Mi1_Ge *1;
      var Mi1_Ge_Ir_M = Mi1_Ge_Ir * 1;
       var Mi1_Ge_Ir_Ore = Mi1_Ge_Ir * 1;
    // set the recipe for Miner mk2
    var Mi2_M = Mi2 * 20;
     var Mi2_TiA = Mi2 * 20;
     var Mi2_TiA_M = Mi2_TiA * 3;
     var Mi2_TiA_Ti = Mi2_TiA;
     var Mi2_TiA_Ti_M = Mi2_TiA_Ti * 2;
      var Mi2_TiA_Ti_Ore = Mi2_TiA_Ti * 2;
     var Mi2_TiA_St = Mi2_TiA;
     var Mi2_TiA_St_M = Mi2_TiA_St * 3;
      var Mi2_TiA_St_Ir = Mi2_TiA_St * 3;
      var Mi2_TiA_St_Ir_M = Mi2_TiA_St_Ir;
       var Mi2_TiA_St_Ir_Ore = Mi2_TiA_St_Ir;
     var Mi2_TiA_Su = Mi2_TiA * 2;
     var Mi2_FrM = Mi2 * 10;
     var Mi2_FrM_M = Mi2_FrM * 6;
     var Mi2_FrM_Ca = Mi2_FrM * 4;
     var Mi2_FrM_Ca_M = Mi2_FrM_Ca * 2;
      var Mi2_FrM_Ca_Spi = Mi2_FrM_Ca * 3;
     var Mi2_FrM_TiA = Mi2_FrM * 1;
     var Mi2_FrM_TiA_M = Mi2_FrM_TiA * 3;
      var Mi2_FrM_TiA_Ti = Mi2_FrM_TiA;
      var Mi2_FrM_TiA_Ti_M = Mi2_FrM_TiA_Ti * 2;
       var Mi2_FrM_TiA_Ti_Ore = Mi2_FrM_TiA_Ti * 2;
      var Mi2_FrM_TiA_St = Mi2_FrM_TiA;
      var Mi2_FrM_TiA_St_M = Mi2_FrM_TiA_St * 3;
       var Mi2_FrM_TiA_St_Ir = Mi2_FrM_TiA_St * 3;
       var Mi2_FrM_TiA_St_Ir_M = Mi2_FrM_TiA_St_Ir;
        var Mi2_FrM_TiA_St_Ir_Ore = Mi2_FrM_TiA_St_Ir;
      var Mi2_FrM_TiA_Su = Mi2_FrM_TiA * 2;
     var Mi2_FrM_Si = Mi2_FrM * 1;
     var Mi2_FrM_Si_M = Mi2_FrM_Si * 2;
      var Mi2_FrM_Si_Ore = Mi2_FrM_Si * 2;
     var Mi2_El = Mi2 * 10;
     var Mi2_El_M = Mi2_El *3;
     var Mi2_El_Tu = Mi2_El * 2;
     var Mi2_El_Tu_M = Mi2_El_Tu * 2;
     var Mi2_El_Tu_Mo = Mi2_El_Tu * 2;
     var Mi2_El_Tu_Mo_M = Mi2_El_Tu_Mo * 2;
      var Mi2_El_Tu_Mo_Ir = Mi2_El_Tu_Mo * 2;
      var Mi2_El_Tu_Mo_Ir_M = Mi2_El_Tu_Mo_Ir * 1;
       var Mi2_El_Tu_Mo_Ir_Ore = Mi2_El_Tu_Mo_Ir * 1;
      var Mi2_El_Tu_Mo_Ge = Mi2_El_Tu_Mo;
      var Mi2_El_Tu_Mo_Ge_M = Mi2_El_Tu_Mo_Ge * 1;
       var Mi2_El_Tu_Mo_Ge_Ir = Mi2_El_Tu_Mo_Ge *1;
       var Mi2_El_Tu_Mo_Ge_Ir_M = Mi2_El_Tu_Mo_Ge_Ir * 1;
        var Mi2_El_Tu_Mo_Ge_Ir_Ore = Mi2_El_Tu_Mo_Ge_Ir * 1;
      var Mi2_El_Tu_Mo_MaC = Mi2_El_Tu_Mo;
      var Mi2_El_Tu_Mo_MaC_M = Mi2_El_Tu_Mo_MaC * 0.5;
       var Mi2_El_Tu_Mo_MaC_Ma = Mi2_El_Tu_Mo_MaC * 1;
       var Mi2_El_Tu_Mo_MaC_Ma_M = Mi2_El_Tu_Mo_MaC_Ma * 1.5;
        var Mi2_El_Tu_Mo_MaC_Ma_Ore = Mi2_El_Tu_Mo_MaC_Ma * 1;
       var Mi2_El_Tu_Mo_MaC_Co = Mi2_El_Tu_Mo_MaC * 0.5;
       var Mi2_El_Tu_Mo_MaC_Co_M = Mi2_El_Tu_Mo_MaC_Co * 1;
        var Mi2_El_Tu_Mo_MaC_Co_Ore = Mi2_El_Tu_Mo_MaC_Co * 1;
     var Mi2_El_Tu_MaC = Mi2_El_Tu * 2;
     var Mi2_El_Tu_MaC_M = Mi2_El_Tu_MaC * 0.5;
      var Mi2_El_Tu_MaC_Ma = Mi2_El_Tu_MaC * 1;
      var Mi2_El_Tu_MaC_Ma_M = Mi2_El_Tu_MaC_Ma * 1.5;
       var Mi2_El_Tu_MaC_Ma_Ore = Mi2_El_Tu_MaC_Ma * 1;
      var Mi2_El_Tu_MaC_Co = Mi2_El_Tu_MaC * 0.5;
      var Mi2_El_Tu_MaC_Co_M = Mi2_El_Tu_MaC_Co * 1;
       var Mi2_El_Tu_MaC_Co_Ore = Mi2_El_Tu_MaC_Co * 1;
     var Mi2_El_Ma = Mi2_El * 3;
     var Mi2_El_Ma_M = Mi2_El_Ma * 1.5;
      var Mi2_El_Ma_Ore = Mi2_El_Ma *1;
     var Mi2_El_GrR = Mi2_El * 1;
     var Mi2_El_GrR_M = Mi2_El_GrR * 2;
      var Mi2_El_GrR_Ore = Mi2_El_GrR * 2;
     var Mi2_Qu = Mi2 * 4;
     var Mi2_Qu_M = Mi2_Qu * 6;
     var Mi2_Qu_Pro = Mi2_Qu * 2;
     var Mi2_Qu_Pro_M = Mi2_Qu_Pro * 3;
      var Mi2_Qu_Pro_Ci = Mi2_Qu_Pro * 2;
      var Mi2_Qu_Pro_Ci_M = Mi2_Qu_Pro_Ci * 0.5;
       var Mi2_Qu_Pro_Ci_Ir = Mi2_Qu_Pro_Ci * 1;
       var Mi2_Qu_Pro_Ci_Ir_M = Mi2_Qu_Pro_Ci_Ir * 1;
        var Mi2_Qu_Pro_Ci_Ir_Ore = Mi2_Qu_Pro_Ci_Ir * 1;        
       var Mi2_Qu_Pro_Ci_Co = Mi2_Qu_Pro_Ci * 0.5;
       var Mi2_Qu_Pro_Ci_Co_M = Mi2_Qu_Pro_Ci_Co * 1;
        var Mi2_Qu_Pro_Ci_Co_Ore = Mi2_Qu_Pro_Ci_Co * 1;
      var Mi2_Qu_Pro_My = Mi2_Qu_Pro * 2;
      var Mi2_Qu_Pro_My_M = Mi2_Qu_Pro_My * 2;
       var Mi2_Qu_Pro_My_Si = Mi2_Qu_Pro_My * 2;
       var Mi2_Qu_Pro_My_Si_M = Mi2_Qu_Pro_My_Si * 2;
        var Mi2_Qu_Pro_My_Si_Ore = Mi2_Qu_Pro_My_Si * 2;        
       var Mi2_Qu_Pro_My_Co = Mi2_Qu_Pro_My * 1;
       var Mi2_Qu_Pro_My_Co_M = Mi2_Qu_Pro_My_Co * 1;
        var Mi2_Qu_Pro_My_Co_Ore = Mi2_Qu_Pro_My_Co * 1;
     var Mi2_Qu_PlF = Mi2_Qu * 2;
     var Mi2_Qu_PlF_M = Mi2_Qu_PlF * 12;
      var Mi2_Qu_PlF_TiG = Mi2_Qu_PlF * 2;
      var Mi2_Qu_PlF_TiG_M = Mi2_Qu_PlF_TiG * 2.5;
       var Mi2_Qu_PlF_TiG_Gl = Mi2_Qu_PlF_TiG * 1;
       var Mi2_Qu_PlF_TiG_Gl_M = Mi2_Qu_PlF_TiG_Gl * 2;
        var Mi2_Qu_PlF_TiG_Gl_Ore = Mi2_Qu_PlF_TiG_Gl * 2;
       var Mi2_Qu_PlF_TiG_Ti = Mi2_Qu_PlF_TiG;
       var Mi2_Qu_PlF_TiG_Ti_M = Mi2_Qu_PlF_TiG_Ti * 2
        var Mi2_Qu_PlF_TiG_Ti_Ore = Mi2_Qu_PlF_TiG_Ti * 2;
       var Mi2_Qu_PlF_TiG_Wa = Mi2_Qu_PlF_TiG * 1;
      var Mi2_Qu_PlF_Cas = Mi2_Qu_PlF * 1;
      var Mi2_Qu_PlF_Cas_M = Mi2_Qu_PlF_Cas * 4;
       var Mi2_Qu_PlF_Cas_Opt = Mi2_Qu_PlF_Cas * 8;
       var Mi2_Qu_PlF_Cas_Gr = Mi2_Qu_PlF_Cas * 2;
       var Mi2_Qu_PlF_Cas_Gr_Hy = Mi2_Qu_PlF_Cas_Gr * 0.5;
       var Mi2_Qu_PlF_Cas_Gr_M = Mi2_Qu_PlF_Cas_Gr * 1;
        var Mi2_Qu_PlF_Cas_Gr_Fi = Mi2_Qu_PlF_Cas_Gr * 1;
       var Mi2_Qu_PlF_Cas_Hy = Mi2_Qu_PlF_Cas * 10;
     var Mi2_Opt = Mi2 * 40;
    // set the recipe for Pump
    var Pu_M = Pu * 4;
     var Pu_Ir = Pu * 8;
     var Pu_Ir_M = Pu_Ir * 1;
      var Pu_Ir_Ore = Pu_Ir * 1;
     var Pu_Br = Pu * 4;
     var Pu_Br_M = Pu_Br * 1;
      var Pu_Br_Ore = Pu_Br * 1;
     var Pu_Mo = Pu * 4;
     var Pu_Mo_M = Pu_Mo * 2;
     var Pu_Mo_Ir = Pu_Mo * 2;
     var Pu_Mo_Ir_M = Pu_Mo_Ir * 1;
      var Pu_Mo_Ir_Ore = Pu_Mo_Ir * 1;
     var Pu_Mo_Ge = Pu_Mo;
     var Pu_Mo_Ge_M = Pu_Mo_Ge * 1;
      var Pu_Mo_Ge_Ir = Pu_Mo_Ge *1;
      var Pu_Mo_Ge_Ir_M = Pu_Mo_Ge_Ir * 1;
       var Pu_Mo_Ge_Ir_Ore = Pu_Mo_Ge_Ir * 1;
     var Pu_Mo_MaC = Pu_Mo;
     var Pu_Mo_MaC_M = Pu_Mo_MaC * 0.5;
      var Pu_Mo_MaC_Ma = Pu_Mo_MaC * 1;
      var Pu_Mo_MaC_Ma_M = Pu_Mo_MaC_Ma * 1.5;
       var Pu_Mo_MaC_Ma_Ore = Pu_Mo_MaC_Ma * 1;
      var Pu_Mo_MaC_Co = Pu_Mo_MaC * 0.5;
      var Pu_Mo_MaC_Co_M = Pu_Mo_MaC_Co * 1;
       var Pu_Mo_MaC_Co_Ore = Pu_Mo_MaC_Co * 1;
     var Pu_Ci = Pu * 2;
     var Pu_Ci_M = Pu_Ci * 0.5;
      var Pu_Ci_Ir = Pu_Ci * 1;
      var Pu_Ci_Ir_M = Pu_Ci_Ir * 1;
       var Pu_Ci_Ir_Ore = Pu_Ci_Ir * 1;        
      var Pu_Ci_Co = Pu_Ci * 0.5;
      var Pu_Ci_Co_M = Pu_Ci_Co * 1;
       var Pu_Ci_Co_Ore = Pu_Ci_Co * 1;
    // set the recipe for Oil extracter
    var OiE_M = OiE * 8;
     var OiE_St = OiE * 12;
     var OiE_St_M = OiE_St * 3;
      var OiE_St_Ir = OiE_St * 3;
      var OiE_St_Ir_M = OiE_St_Ir;
       var OiE_St_Ir_Ore = OiE_St_Ir;
     var OiE_Br = OiE * 12;
     var OiE_Br_M = OiE_Br * 1;
      var OiE_Br_Ore = OiE_Br * 1;
     var OiE_Ci = OiE * 6;
     var OiE_Ci_M = OiE_Ci * 0.5;
      var OiE_Ci_Ir = OiE_Ci * 1;
      var OiE_Ci_Ir_M = OiE_Ci_Ir * 1;
       var OiE_Ci_Ir_Ore = OiE_Ci_Ir * 1;        
      var OiE_Ci_Co = OiE_Ci * 0.5;
      var OiE_Ci_Co_M = OiE_Ci_Co * 1;
       var OiE_Ci_Co_Ore = OiE_Ci_Co * 1;
     var OiE_PlE = OiE * 4;
     var OiE_PlE_M = OiE_PlE * 2;
     var OiE_PlE_MaC = OiE_PlE * 4;
     var OiE_PlE_MaC_M = OiE_PlE_MaC * 0.5;
      var OiE_PlE_MaC_Ma = OiE_PlE_MaC * 1;
      var OiE_PlE_MaC_Ma_M = OiE_PlE_MaC_Ma * 1.5;
       var OiE_PlE_MaC_Ma_Ore = OiE_PlE_MaC_Ma * 1;
      var OiE_PlE_MaC_Co = OiE_PlE_MaC * 0.5;
      var OiE_PlE_MaC_Co_M = OiE_PlE_MaC_Co * 1;
       var OiE_PlE_MaC_Co_Ore = OiE_PlE_MaC_Co * 1;
     var OiE_PlE_Pr = OiE_PlE * 2;
     var OiE_PlE_Pr_M = OiE_PlE_Pr * 1;
      var OiE_PlE_Pr_Gl = OiE_PlE_Pr * 1.5;
      var OiE_PlE_Pr_Gl_M = OiE_PlE_Pr_Gl * 2; 
       var OiE_PlE_Pr_Gl_Ore = OiE_PlE_Pr_Gl * 2;
    // set the recipe for Oil refiner
    var OiR_M = OiR * 6;
     var OiR_St = OiR * 12;
     var OiR_St_M = OiR_St * 3;
      var OiR_St_Ir = OiR_St * 3;
      var OiR_St_Ir_M = OiR_St_Ir;
       var OiR_St_Ir_Ore = OiR_St_Ir;
     var OiR_Br = OiR * 12;
     var OiR_Br_M = OiR_Br * 1;
      var OiR_Br_Ore = OiR_Br * 1;
     var OiR_Ci = OiR * 6;
     var OiR_Ci_M = OiR_Ci * 0.5;
      var OiR_Ci_Ir = OiR_Ci * 1;
      var OiR_Ci_Ir_M = OiR_Ci_Ir * 1;
       var OiR_Ci_Ir_Ore = OiR_Ci_Ir * 1;        
      var OiR_Ci_Co = OiR_Ci * 0.5;
      var OiR_Ci_Co_M = OiR_Ci_Co * 1;
       var OiR_Ci_Co_Ore = OiR_Ci_Co * 1;
     var OiR_PlE = OiR * 4;
     var OiR_PlE_M = OiR_PlE * 2;
     var OiR_PlE_MaC = OiR_PlE * 4;
     var OiR_PlE_MaC_M = OiR_PlE_MaC * 0.5;
      var OiR_PlE_MaC_Ma = OiR_PlE_MaC * 1;
      var OiR_PlE_MaC_Ma_M = OiR_PlE_MaC_Ma * 1.5;
       var OiR_PlE_MaC_Ma_Ore = OiR_PlE_MaC_Ma * 1;
      var OiR_PlE_MaC_Co = OiR_PlE_MaC * 0.5;
      var OiR_PlE_MaC_Co_M = OiR_PlE_MaC_Co * 1;
       var OiR_PlE_MaC_Co_Ore = OiR_PlE_MaC_Co * 1;
     var OiR_PlE_Pr = OiR_PlE * 2;
     var OiR_PlE_Pr_M = OiR_PlE_Pr * 1;
      var OiR_PlE_Pr_Gl = OiR_PlE_Pr * 1.5;
      var OiR_PlE_Pr_Gl_M = OiR_PlE_Pr_Gl * 2; 
       var OiR_PlE_Pr_Gl_Ore = OiR_PlE_Pr_Gl * 2;
    // set the recipe for Exchanger
    var Ex_M = Ex * 15;
     var Ex_TiA = Ex * 40;
     var Ex_TiA_M = Ex_TiA * 3;
     var Ex_TiA_Ti = Ex_TiA;
     var Ex_TiA_Ti_M = Ex_TiA_Ti * 2;
      var Ex_TiA_Ti_Ore = Ex_TiA_Ti * 2;
     var Ex_TiA_St = Ex_TiA;
     var Ex_TiA_St_M = Ex_TiA_St * 3;
      var Ex_TiA_St_Ir = Ex_TiA_St * 3;
      var Ex_TiA_St_Ir_M = Ex_TiA_St_Ir;
       var Ex_TiA_St_Ir_Ore = Ex_TiA_St_Ir;
     var Ex_TiA_Su = Ex_TiA * 2;
     var Ex_St = Ex * 40;
     var Ex_St_M = Ex_St * 3;
     var Ex_St_Ir = Ex_St * 3;
     var Ex_St_Ir_M = Ex_St_Ir;
     var Ex_St_Ir_Ore = Ex_St_Ir;
     var Ex_Pro = Ex * 40;
     var Ex_Pro_M = Ex_Pro * 3;
     var Ex_Pro_Ci = Ex_Pro * 2;
     var Ex_Pro_Ci_M = Ex_Pro_Ci * 0.5;
      var Ex_Pro_Ci_Ir = Ex_Pro_Ci * 1;
      var Ex_Pro_Ci_Ir_M = Ex_Pro_Ci_Ir * 1;
       var Ex_Pro_Ci_Ir_Ore = Ex_Pro_Ci_Ir * 1;        
      var Ex_Pro_Ci_Co = Ex_Pro_Ci * 0.5;
      var Ex_Pro_Ci_Co_M = Ex_Pro_Ci_Co * 1;
       var Ex_Pro_Ci_Co_Ore = Ex_Pro_Ci_Co * 1;
     var Ex_Pro_My = Ex_Pro * 2;
     var Ex_Pro_My_M = Ex_Pro_My * 2;
      var Ex_Pro_My_Si = Ex_Pro_My * 2;
      var Ex_Pro_My_Si_M = Ex_Pro_My_Si * 2;
       var Ex_Pro_My_Si_Ore = Ex_Pro_My_Si * 2;        
      var Ex_Pro_My_Co = Ex_Pro_My * 1;
      var Ex_Pro_My_Co_M = Ex_Pro_My_Co * 1;
       var Ex_Pro_My_Co_Ore = Ex_Pro_My_Co * 1;
     var Ex_Par = Ex * 8;
     var Ex_Par_M = Ex_Par * 4;
     var Ex_Par_Tu = Ex_Par * 2;
     var Ex_Par_Tu_M = Ex_Par_Tu * 2;
      var Ex_Par_Tu_Mo = Ex_Par_Tu * 2;
      var Ex_Par_Tu_Mo_M = Ex_Par_Tu_Mo * 2;
       var Ex_Par_Tu_Mo_Ir = Ex_Par_Tu_Mo * 2;
       var Ex_Par_Tu_Mo_Ir_M = Ex_Par_Tu_Mo_Ir * 1;
        var Ex_Par_Tu_Mo_Ir_Ore = Ex_Par_Tu_Mo_Ir * 1;
       var Ex_Par_Tu_Mo_Ge = Ex_Par_Tu_Mo;
       var Ex_Par_Tu_Mo_Ge_M = Ex_Par_Tu_Mo_Ge * 1;
        var Ex_Par_Tu_Mo_Ge_Ir = Ex_Par_Tu_Mo_Ge *1;
        var Ex_Par_Tu_Mo_Ge_Ir_M = Ex_Par_Tu_Mo_Ge_Ir * 1;
         var Ex_Par_Tu_Mo_Ge_Ir_Ore = Ex_Par_Tu_Mo_Ge_Ir * 1;
       var Ex_Par_Tu_Mo_MaC = Ex_Par_Tu_Mo;
       var Ex_Par_Tu_Mo_MaC_M = Ex_Par_Tu_Mo_MaC * 0.5;
        var Ex_Par_Tu_Mo_MaC_Ma = Ex_Par_Tu_Mo_MaC * 1;
        var Ex_Par_Tu_Mo_MaC_Ma_M = Ex_Par_Tu_Mo_MaC_Ma * 1.5;
         var Ex_Par_Tu_Mo_MaC_Ma_Ore = Ex_Par_Tu_Mo_MaC_Ma * 1;
        var Ex_Par_Tu_Mo_MaC_Co = Ex_Par_Tu_Mo_MaC * 0.5;
        var Ex_Par_Tu_Mo_MaC_Co_M = Ex_Par_Tu_Mo_MaC_Co * 1;
         var Ex_Par_Tu_Mo_MaC_Co_Ore = Ex_Par_Tu_Mo_MaC_Co * 1;
      var Ex_Par_Tu_MaC = Ex_Par_Tu * 2;
      var Ex_Par_Tu_MaC_M = Ex_Par_Tu_MaC * 0.5;
       var Ex_Par_Tu_MaC_Ma = Ex_Par_Tu_MaC * 1;
       var Ex_Par_Tu_MaC_Ma_M = Ex_Par_Tu_MaC_Ma * 1.5;
        var Ex_Par_Tu_MaC_Ma_Ore = Ex_Par_Tu_MaC_Ma * 1;
       var Ex_Par_Tu_MaC_Co = Ex_Par_Tu_MaC * 0.5;
       var Ex_Par_Tu_MaC_Co_M = Ex_Par_Tu_MaC_Co * 1;
        var Ex_Par_Tu_MaC_Co_Ore = Ex_Par_Tu_MaC_Co * 1;
     var Ex_Par_Co = Ex_Par * 2;
     var Ex_Par_Co_M = Ex_Par_Co * 1;      
      var Ex_Par_Co_Ore = Ex_Par_Co * 1;
     var Ex_Par_Gr = Ex_Par * 2;
     var Ex_Par_Gr_M = Ex_Par_Gr * 1;
     var Ex_Par_Gr_Hy = Ex_Par_Gr * 0.5;
      var Ex_Par_Gr_Fi = Ex_Par_Gr * 1;

    // set the recipe for Ray reciever
    var Ra_M = Ra * 8;
     var Ra_St = Ra * 20;
     var Ra_St_M = Ra_St * 3;
      var Ra_St_Ir = Ra_St * 3;
      var Ra_St_Ir_M = Ra_St_Ir;
       var Ra_St_Ir_Ore = Ra_St_Ir;
     var Ra_Si = Ra * 20;
     var Ra_Si_M = Ra_Si * 2;
      var Ra_Si_Ore = Ra_Si * 2;
     var Ra_Ph = Ra * 10;
     var Ra_Ph_M = Ra_Ph * 3;
    var Ra_Ph_Opt = Ra_Ph * 1;
     var Ra_Ph_Ci = Ra_Ph * 1;
     var Ra_Ph_Ci_M = Ra_Ph_Ci * 0.5;
      var Ra_Ph_Ci_Ir = Ra_Ph_Ci * 1;
      var Ra_Ph_Ci_Ir_M = Ra_Ph_Ci_Ir * 1;
       var Ra_Ph_Ci_Ir_Ore = Ra_Ph_Ci_Ir * 1;        
      var Ra_Ph_Ci_Co = Ra_Ph_Ci * 0.5;
      var Ra_Ph_Ci_Co_M = Ra_Ph_Ci_Co * 1;
       var Ra_Ph_Ci_Co_Ore = Ra_Ph_Ci_Co * 1;
     var Ra_Pro = Ra * 5;
     var Ra_Pro_M = Ra_Pro * 3;
     var Ra_Pro_Ci = Ra_Pro * 2;
     var Ra_Pro_Ci_M = Ra_Pro_Ci * 0.5;
      var Ra_Pro_Ci_Ir = Ra_Pro_Ci * 1;
      var Ra_Pro_Ci_Ir_M = Ra_Pro_Ci_Ir * 1;
       var Ra_Pro_Ci_Ir_Ore = Ra_Pro_Ci_Ir * 1;        
      var Ra_Pro_Ci_Co = Ra_Pro_Ci * 0.5;
      var Ra_Pro_Ci_Co_M = Ra_Pro_Ci_Co * 1;
       var Ra_Pro_Ci_Co_Ore = Ra_Pro_Ci_Co * 1;
     var Ra_Pro_My = Ra_Pro * 2;
     var Ra_Pro_My_M = Ra_Pro_My * 2;
      var Ra_Pro_My_Si = Ra_Pro_My * 2;
      var Ra_Pro_My_Si_M = Ra_Pro_My_Si * 2;
       var Ra_Pro_My_Si_Ore = Ra_Pro_My_Si * 2;        
      var Ra_Pro_My_Co = Ra_Pro_My * 1;
      var Ra_Pro_My_Co_M = Ra_Pro_My_Co * 1;
       var Ra_Pro_My_Co_Ore = Ra_Pro_My_Co * 1;
     var Ra_El = Ra * 20;
     var Ra_El_M = Ra_El *3;
     var Ra_El_Tu = Ra_El * 2;
     var Ra_El_Tu_M = Ra_El_Tu * 2;
     var Ra_El_Tu_Mo = Ra_El_Tu * 2;
     var Ra_El_Tu_Mo_M = Ra_El_Tu_Mo * 2;
      var Ra_El_Tu_Mo_Ir = Ra_El_Tu_Mo * 2;
      var Ra_El_Tu_Mo_Ir_M = Ra_El_Tu_Mo_Ir * 1;
       var Ra_El_Tu_Mo_Ir_Ore = Ra_El_Tu_Mo_Ir * 1;
      var Ra_El_Tu_Mo_Ge = Ra_El_Tu_Mo;
      var Ra_El_Tu_Mo_Ge_M = Ra_El_Tu_Mo_Ge * 1;
       var Ra_El_Tu_Mo_Ge_Ir = Ra_El_Tu_Mo_Ge *1;
       var Ra_El_Tu_Mo_Ge_Ir_M = Ra_El_Tu_Mo_Ge_Ir * 1;
        var Ra_El_Tu_Mo_Ge_Ir_Ore = Ra_El_Tu_Mo_Ge_Ir * 1;
      var Ra_El_Tu_Mo_MaC = Ra_El_Tu_Mo;
      var Ra_El_Tu_Mo_MaC_M = Ra_El_Tu_Mo_MaC * 0.5;
       var Ra_El_Tu_Mo_MaC_Ma = Ra_El_Tu_Mo_MaC * 1;
       var Ra_El_Tu_Mo_MaC_Ma_M = Ra_El_Tu_Mo_MaC_Ma * 1.5;
        var Ra_El_Tu_Mo_MaC_Ma_Ore = Ra_El_Tu_Mo_MaC_Ma * 1;
       var Ra_El_Tu_Mo_MaC_Co = Ra_El_Tu_Mo_MaC * 0.5;
       var Ra_El_Tu_Mo_MaC_Co_M = Ra_El_Tu_Mo_MaC_Co * 1;
        var Ra_El_Tu_Mo_MaC_Co_Ore = Ra_El_Tu_Mo_MaC_Co * 1;
     var Ra_El_Tu_MaC = Ra_El_Tu * 2;
     var Ra_El_Tu_MaC_M = Ra_El_Tu_MaC * 0.5;
      var Ra_El_Tu_MaC_Ma = Ra_El_Tu_MaC * 1;
      var Ra_El_Tu_MaC_Ma_M = Ra_El_Tu_MaC_Ma * 1.5;
       var Ra_El_Tu_MaC_Ma_Ore = Ra_El_Tu_MaC_Ma * 1;
      var Ra_El_Tu_MaC_Co = Ra_El_Tu_MaC * 0.5;
      var Ra_El_Tu_MaC_Co_M = Ra_El_Tu_MaC_Co * 1;
       var Ra_El_Tu_MaC_Co_Ore = Ra_El_Tu_MaC_Co * 1;
     var Ra_El_Ma = Ra_El * 3;
     var Ra_El_Ma_M = Ra_El_Ma * 1.5;
      var Ra_El_Ma_Ore = Ra_El_Ma *1;
     var Ra_El_GrR = Ra_El * 1;
     var Ra_El_GrR_M = Ra_El_GrR * 2;
      var Ra_El_GrR_Ore = Ra_El_GrR * 2;
    // set the recipe for Rail gun
    var Rai_M = Rai * 6;
     var Rai_St = Rai * 20;
     var Rai_St_M = Rai_St * 3;
      var Rai_St_Ir = Rai_St * 3;
      var Rai_St_Ir_M = Rai_St_Ir;
       var Rai_St_Ir_Ore = Rai_St_Ir;
     var Rai_Ge = Rai * 20;
     var Rai_Ge_M = Rai_Ge * 1;
      var Rai_Ge_Ir = Rai_Ge *1;
      var Rai_Ge_Ir_M = Rai_Ge_Ir * 1;
       var Rai_Ge_Ir_Ore = Rai_Ge_Ir * 1;
     var Rai_Pro = Rai * 5;
     var Rai_Pro_M = Rai_Pro * 3;
     var Rai_Pro_Ci = Rai_Pro * 2;
     var Rai_Pro_Ci_M = Rai_Pro_Ci * 0.5;
      var Rai_Pro_Ci_Ir = Rai_Pro_Ci * 1;
      var Rai_Pro_Ci_Ir_M = Rai_Pro_Ci_Ir * 1;
       var Rai_Pro_Ci_Ir_Ore = Rai_Pro_Ci_Ir * 1;        
      var Rai_Pro_Ci_Co = Rai_Pro_Ci * 0.5;
      var Rai_Pro_Ci_Co_M = Rai_Pro_Ci_Co * 1;
       var Rai_Pro_Ci_Co_Ore = Rai_Pro_Ci_Co * 1;
     var Rai_Pro_My = Rai_Pro * 2;
     var Rai_Pro_My_M = Rai_Pro_My * 2;
      var Rai_Pro_My_Si = Rai_Pro_My * 2;
      var Rai_Pro_My_Si_M = Rai_Pro_My_Si * 2;
       var Rai_Pro_My_Si_Ore = Rai_Pro_My_Si * 2;        
      var Rai_Pro_My_Co = Rai_Pro_My * 1;
      var Rai_Pro_My_Co_M = Rai_Pro_My_Co * 1;
       var Rai_Pro_My_Co_Ore = Rai_Pro_My_Co * 1;
     var Rai_El = Rai * 10;
     var Rai_El_M = Rai_El *3;
     var Rai_El_Tu = Rai_El * 2;
     var Rai_El_Tu_M = Rai_El_Tu * 2;
     var Rai_El_Tu_Mo = Rai_El_Tu * 2;
     var Rai_El_Tu_Mo_M = Rai_El_Tu_Mo * 2;
      var Rai_El_Tu_Mo_Ir = Rai_El_Tu_Mo * 2;
      var Rai_El_Tu_Mo_Ir_M = Rai_El_Tu_Mo_Ir * 1;
       var Rai_El_Tu_Mo_Ir_Ore = Rai_El_Tu_Mo_Ir * 1;
      var Rai_El_Tu_Mo_Ge = Rai_El_Tu_Mo;
      var Rai_El_Tu_Mo_Ge_M = Rai_El_Tu_Mo_Ge * 1;
       var Rai_El_Tu_Mo_Ge_Ir = Rai_El_Tu_Mo_Ge *1;
       var Rai_El_Tu_Mo_Ge_Ir_M = Rai_El_Tu_Mo_Ge_Ir * 1;
        var Rai_El_Tu_Mo_Ge_Ir_Ore = Rai_El_Tu_Mo_Ge_Ir * 1;
      var Rai_El_Tu_Mo_MaC = Rai_El_Tu_Mo;
      var Rai_El_Tu_Mo_MaC_M = Rai_El_Tu_Mo_MaC * 0.5;
       var Rai_El_Tu_Mo_MaC_Ma = Rai_El_Tu_Mo_MaC * 1;
       var Rai_El_Tu_Mo_MaC_Ma_M = Rai_El_Tu_Mo_MaC_Ma * 1.5;
        var Rai_El_Tu_Mo_MaC_Ma_Ore = Rai_El_Tu_Mo_MaC_Ma * 1;
       var Rai_El_Tu_Mo_MaC_Co = Rai_El_Tu_Mo_MaC * 0.5;
       var Rai_El_Tu_Mo_MaC_Co_M = Rai_El_Tu_Mo_MaC_Co * 1;
        var Rai_El_Tu_Mo_MaC_Co_Ore = Rai_El_Tu_Mo_MaC_Co * 1;
     var Rai_El_Tu_MaC = Rai_El_Tu * 2;
     var Rai_El_Tu_MaC_M = Rai_El_Tu_MaC * 0.5;
      var Rai_El_Tu_MaC_Ma = Rai_El_Tu_MaC * 1;
      var Rai_El_Tu_MaC_Ma_M = Rai_El_Tu_MaC_Ma * 1.5;
       var Rai_El_Tu_MaC_Ma_Ore = Rai_El_Tu_MaC_Ma * 1;
      var Rai_El_Tu_MaC_Co = Rai_El_Tu_MaC * 0.5;
      var Rai_El_Tu_MaC_Co_M = Rai_El_Tu_MaC_Co * 1;
       var Rai_El_Tu_MaC_Co_Ore = Rai_El_Tu_MaC_Co * 1;
     var Rai_El_Ma = Rai_El * 3;
     var Rai_El_Ma_M = Rai_El_Ma * 1.5;
      var Rai_El_Ma_Ore = Rai_El_Ma *1;
     var Rai_El_GrR = Rai_El * 1;
     var Rai_El_GrR_M = Rai_El_GrR * 2;
      var Rai_El_GrR_Ore = Rai_El_GrR * 2;
    // set the recipe for Vertical launch silo
    var Ve_M = Ve * 30; 
     var Ve_TiA = Ve * 80;
     var Ve_TiA_M = Ve_TiA * 3;
     var Ve_TiA_Ti = Ve_TiA;
     var Ve_TiA_Ti_M = Ve_TiA_Ti * 2;
      var Ve_TiA_Ti_Ore = Ve_TiA_Ti * 2;
     var Ve_TiA_St = Ve_TiA;
     var Ve_TiA_St_M = Ve_TiA_St * 3;
      var Ve_TiA_St_Ir = Ve_TiA_St * 3;
      var Ve_TiA_St_Ir_M = Ve_TiA_St_Ir;
       var Ve_TiA_St_Ir_Ore = Ve_TiA_St_Ir;
     var Ve_TiA_Su = Ve_TiA * 2;
     var Ve_FrM = Ve * 30;
     var Ve_FrM_M = Ve_FrM * 6;
     var Ve_FrM_Ca = Ve_FrM * 4;
     var Ve_FrM_Ca_M = Ve_FrM_Ca * 2;
      var Ve_FrM_Ca_Spi = Ve_FrM_Ca * 3;
     var Ve_FrM_TiA = Ve_FrM * 1;
     var Ve_FrM_TiA_M = Ve_FrM_TiA * 3;
      var Ve_FrM_TiA_Ti = Ve_FrM_TiA;
      var Ve_FrM_TiA_Ti_M = Ve_FrM_TiA_Ti * 2;
       var Ve_FrM_TiA_Ti_Ore = Ve_FrM_TiA_Ti * 2;
      var Ve_FrM_TiA_St = Ve_FrM_TiA;
      var Ve_FrM_TiA_St_M = Ve_FrM_TiA_St * 3;
       var Ve_FrM_TiA_St_Ir = Ve_FrM_TiA_St * 3;
       var Ve_FrM_TiA_St_Ir_M = Ve_FrM_TiA_St_Ir;
        var Ve_FrM_TiA_St_Ir_Ore = Ve_FrM_TiA_St_Ir;
      var Ve_FrM_TiA_Su = Ve_FrM_TiA * 2;
     var Ve_FrM_Si = Ve_FrM * 1;
     var Ve_FrM_Si_M = Ve_FrM_Si * 2;
      var Ve_FrM_Si_Ore = Ve_FrM_Si * 2;
     var Ve_GrL = Ve * 20;
     var Ve_GrL_M = Ve_GrL * 6;
     var Ve_GrL_Di = Ve_GrL * 4
     var Ve_GrL_Di_M = Ve_GrL_Di * 0.75;
      var Ve_GrL_Di_Ore = Ve_GrL_Di * 0.5;
     var Ve_GrL_StM = Ve_GrL * 1;
     var Ve_GrL_StM_M = Ve_GrL_StM * 8;
     var Ve_GrL_StM_Par = Ve_GrL_StM * 2;
     var Ve_GrL_StM_Par_M = Ve_GrL_StM_Par * 4;
     var Ve_GrL_StM_Par_Tu = Ve_GrL_StM_Par * 2;
     var Ve_GrL_StM_Par_Tu_M = Ve_GrL_StM_Par_Tu * 2;
      var Ve_GrL_StM_Par_Tu_Mo = Ve_GrL_StM_Par_Tu * 2;
      var Ve_GrL_StM_Par_Tu_Mo_M = Ve_GrL_StM_Par_Tu_Mo * 2;
       var Ve_GrL_StM_Par_Tu_Mo_Ir = Ve_GrL_StM_Par_Tu_Mo * 2;
       var Ve_GrL_StM_Par_Tu_Mo_Ir_M = Ve_GrL_StM_Par_Tu_Mo_Ir * 1;
        var Ve_GrL_StM_Par_Tu_Mo_Ir_Ore = Ve_GrL_StM_Par_Tu_Mo_Ir * 1;
       var Ve_GrL_StM_Par_Tu_Mo_Ge = Ve_GrL_StM_Par_Tu_Mo;
       var Ve_GrL_StM_Par_Tu_Mo_Ge_M = Ve_GrL_StM_Par_Tu_Mo_Ge * 1;
        var Ve_GrL_StM_Par_Tu_Mo_Ge_Ir = Ve_GrL_StM_Par_Tu_Mo_Ge *1;
        var Ve_GrL_StM_Par_Tu_Mo_Ge_Ir_M = Ve_GrL_StM_Par_Tu_Mo_Ge_Ir * 1;
         var Ve_GrL_StM_Par_Tu_Mo_Ge_Ir_Ore = Ve_GrL_StM_Par_Tu_Mo_Ge_Ir * 1;
       var Ve_GrL_StM_Par_Tu_Mo_MaC = Ve_GrL_StM_Par_Tu_Mo;
       var Ve_GrL_StM_Par_Tu_Mo_MaC_M = Ve_GrL_StM_Par_Tu_Mo_MaC * 0.5;
        var Ve_GrL_StM_Par_Tu_Mo_MaC_Ma = Ve_GrL_StM_Par_Tu_Mo_MaC * 1;
        var Ve_GrL_StM_Par_Tu_Mo_MaC_Ma_M = Ve_GrL_StM_Par_Tu_Mo_MaC_Ma * 1.5;
         var Ve_GrL_StM_Par_Tu_Mo_MaC_Ma_Ore = Ve_GrL_StM_Par_Tu_Mo_MaC_Ma * 1;
        var Ve_GrL_StM_Par_Tu_Mo_MaC_Co = Ve_GrL_StM_Par_Tu_Mo_MaC * 0.5;
        var Ve_GrL_StM_Par_Tu_Mo_MaC_Co_M = Ve_GrL_StM_Par_Tu_Mo_MaC_Co * 1;
         var Ve_GrL_StM_Par_Tu_Mo_MaC_Co_Ore = Ve_GrL_StM_Par_Tu_Mo_MaC_Co * 1;
      var Ve_GrL_StM_Par_Tu_MaC = Ve_GrL_StM_Par_Tu * 2;
      var Ve_GrL_StM_Par_Tu_MaC_M = Ve_GrL_StM_Par_Tu_MaC * 0.5;
       var Ve_GrL_StM_Par_Tu_MaC_Ma = Ve_GrL_StM_Par_Tu_MaC * 1;
       var Ve_GrL_StM_Par_Tu_MaC_Ma_M = Ve_GrL_StM_Par_Tu_MaC_Ma * 1.5;
        var Ve_GrL_StM_Par_Tu_MaC_Ma_Ore = Ve_GrL_StM_Par_Tu_MaC_Ma * 1;
       var Ve_GrL_StM_Par_Tu_MaC_Co = Ve_GrL_StM_Par_Tu_MaC * 0.5;
       var Ve_GrL_StM_Par_Tu_MaC_Co_M = Ve_GrL_StM_Par_Tu_MaC_Co * 1;
        var Ve_GrL_StM_Par_Tu_MaC_Co_Ore = Ve_GrL_StM_Par_Tu_MaC_Co * 1;
     var Ve_GrL_StM_Par_Co = Ve_GrL_StM_Par * 2;
     var Ve_GrL_StM_Par_Co_M = Ve_GrL_StM_Par_Co * 1;      
      var Ve_GrL_StM_Par_Co_Ore = Ve_GrL_StM_Par_Co * 1;
     var Ve_GrL_StM_Par_Gr = Ve_GrL_StM_Par * 2;
     var Ve_GrL_StM_Par_Gr_M = Ve_GrL_StM_Par_Gr * 1;
     var Ve_GrL_StM_Par_Gr_Hy = Ve_GrL_StM_Par_Gr * 0.5;
      var Ve_GrL_StM_Par_Gr_Fi = Ve_GrL_StM_Par_Gr * 1;
     var Ve_GrL_StM_Ir = Ve_GrL_StM * 2;
     var Ve_GrL_StM_Ir_M = Ve_GrL_StM_Ir * 1;
      var Ve_GrL_StM_Ir_Ore = Ve_GrL_StM_Ir * 1;
     var Ve_GrL_StM_De = Ve_GrL_StM * 10;
     var Ve_Qu = Ve * 10;
     var Ve_Qu_M = Ve_Qu * 6;
     var Ve_Qu_Pro = Ve_Qu * 2;
     var Ve_Qu_Pro_M = Ve_Qu_Pro * 3;
      var Ve_Qu_Pro_Ci = Ve_Qu_Pro * 2;
      var Ve_Qu_Pro_Ci_M = Ve_Qu_Pro_Ci * 0.5;
       var Ve_Qu_Pro_Ci_Ir = Ve_Qu_Pro_Ci * 1;
       var Ve_Qu_Pro_Ci_Ir_M = Ve_Qu_Pro_Ci_Ir * 1;
        var Ve_Qu_Pro_Ci_Ir_Ore = Ve_Qu_Pro_Ci_Ir * 1;        
       var Ve_Qu_Pro_Ci_Co = Ve_Qu_Pro_Ci * 0.5;
       var Ve_Qu_Pro_Ci_Co_M = Ve_Qu_Pro_Ci_Co * 1;
        var Ve_Qu_Pro_Ci_Co_Ore = Ve_Qu_Pro_Ci_Co * 1;
      var Ve_Qu_Pro_My = Ve_Qu_Pro * 2;
      var Ve_Qu_Pro_My_M = Ve_Qu_Pro_My * 2;
       var Ve_Qu_Pro_My_Si = Ve_Qu_Pro_My * 2;
       var Ve_Qu_Pro_My_Si_M = Ve_Qu_Pro_My_Si * 2;
        var Ve_Qu_Pro_My_Si_Ore = Ve_Qu_Pro_My_Si * 2;        
       var Ve_Qu_Pro_My_Co = Ve_Qu_Pro_My * 1;
       var Ve_Qu_Pro_My_Co_M = Ve_Qu_Pro_My_Co * 1;
        var Ve_Qu_Pro_My_Co_Ore = Ve_Qu_Pro_My_Co * 1;
     var Ve_Qu_PlF = Ve_Qu * 2;
     var Ve_Qu_PlF_M = Ve_Qu_PlF * 12;
      var Ve_Qu_PlF_TiG = Ve_Qu_PlF * 2;
      var Ve_Qu_PlF_TiG_M = Ve_Qu_PlF_TiG * 2.5;
       var Ve_Qu_PlF_TiG_Gl = Ve_Qu_PlF_TiG * 1;
       var Ve_Qu_PlF_TiG_Gl_M = Ve_Qu_PlF_TiG_Gl * 2;
        var Ve_Qu_PlF_TiG_Gl_Ore = Ve_Qu_PlF_TiG_Gl * 2;
       var Ve_Qu_PlF_TiG_Ti = Ve_Qu_PlF_TiG;
       var Ve_Qu_PlF_TiG_Ti_M = Ve_Qu_PlF_TiG_Ti * 2
        var Ve_Qu_PlF_TiG_Ti_Ore = Ve_Qu_PlF_TiG_Ti * 2;
       var Ve_Qu_PlF_TiG_Wa = Ve_Qu_PlF_TiG * 1;
      var Ve_Qu_PlF_Cas = Ve_Qu_PlF * 1;
      var Ve_Qu_PlF_Cas_M = Ve_Qu_PlF_Cas * 4;
       var Ve_Qu_PlF_Cas_Opt = Ve_Qu_PlF_Cas * 8;
       var Ve_Qu_PlF_Cas_Gr = Ve_Qu_PlF_Cas * 2;
       var Ve_Qu_PlF_Cas_Gr_Hy = Ve_Qu_PlF_Cas_Gr * 0.5;
       var Ve_Qu_PlF_Cas_Gr_M = Ve_Qu_PlF_Cas_Gr * 1;
        var Ve_Qu_PlF_Cas_Gr_Fi = Ve_Qu_PlF_Cas_Gr * 1;
       var Ve_Qu_PlF_Cas_Hy = Ve_Qu_PlF_Cas * 10;
    // set the recipe for Artificial sun
    var Ar_M = Ar * 30;
     var Ar_TiA = Ar * 20;
     var Ar_TiA_M = Ar_TiA * 3;
     var Ar_TiA_Ti = Ar_TiA;
     var Ar_TiA_Ti_M = Ar_TiA_Ti * 2;
      var Ar_TiA_Ti_Ore = Ar_TiA_Ti * 2;
     var Ar_TiA_St = Ar_TiA;
     var Ar_TiA_St_M = Ar_TiA_St * 3;
      var Ar_TiA_St_Ir = Ar_TiA_St * 3;
      var Ar_TiA_St_Ir_M = Ar_TiA_St_Ir;
       var Ar_TiA_St_Ir_Ore = Ar_TiA_St_Ir;
     var Ar_TiA_Su = Ar_TiA * 2;
     var Ar_FrM = Ar * 20;
     var Ar_FrM_M = Ar_FrM * 6;
     var Ar_FrM_Ca = Ar_FrM * 4;
     var Ar_FrM_Ca_M = Ar_FrM_Ca * 2;
      var Ar_FrM_Ca_Spi = Ar_FrM_Ca * 3;
     var Ar_FrM_TiA = Ar_FrM * 1;
     var Ar_FrM_TiA_M = Ar_FrM_TiA * 3;
      var Ar_FrM_TiA_Ti = Ar_FrM_TiA;
      var Ar_FrM_TiA_Ti_M = Ar_FrM_TiA_Ti * 2;
       var Ar_FrM_TiA_Ti_Ore = Ar_FrM_TiA_Ti * 2;
      var Ar_FrM_TiA_St = Ar_FrM_TiA;
      var Ar_FrM_TiA_St_M = Ar_FrM_TiA_St * 3;
       var Ar_FrM_TiA_St_Ir = Ar_FrM_TiA_St * 3;
       var Ar_FrM_TiA_St_Ir_M = Ar_FrM_TiA_St_Ir;
        var Ar_FrM_TiA_St_Ir_Ore = Ar_FrM_TiA_St_Ir;
      var Ar_FrM_TiA_Su = Ar_FrM_TiA * 2;
     var Ar_FrM_Si = Ar_FrM * 1;
     var Ar_FrM_Si_M = Ar_FrM_Si * 2;
      var Ar_FrM_Si_Ore = Ar_FrM_Si * 2;
     var Ar_An = Ar * 10;
     var Ar_An_M = Ar_An * 20;
     var Ar_An_Pro = Ar_An * 1;
     var Ar_An_Pro_M = Ar_An_Pro * 3;
      var Ar_An_Pro_Ci = Ar_An_Pro * 2;
      var Ar_An_Pro_Ci_M = Ar_An_Pro_Ci * 0.5;
       var Ar_An_Pro_Ci_Ir = Ar_An_Pro_Ci * 1;
       var Ar_An_Pro_Ci_Ir_M = Ar_An_Pro_Ci_Ir * 1;
        var Ar_An_Pro_Ci_Ir_Ore = Ar_An_Pro_Ci_Ir * 1;        
       var Ar_An_Pro_Ci_Co = Ar_An_Pro_Ci * 0.5;
       var Ar_An_Pro_Ci_Co_M = Ar_An_Pro_Ci_Co * 1;
        var Ar_An_Pro_Ci_Co_Ore = Ar_An_Pro_Ci_Co * 1;
      var Ar_An_Pro_My = Ar_An_Pro * 2;
      var Ar_An_Pro_My_M = Ar_An_Pro_My * 2;
       var Ar_An_Pro_My_Si = Ar_An_Pro_My * 2;
       var Ar_An_Pro_My_Si_M = Ar_An_Pro_My_Si * 2;
        var Ar_An_Pro_My_Si_Ore = Ar_An_Pro_My_Si * 2;        
       var Ar_An_Pro_My_Co = Ar_An_Pro_My * 1;
       var Ar_An_Pro_My_Co_M = Ar_An_Pro_My_Co * 1;
        var Ar_An_Pro_My_Co_Ore = Ar_An_Pro_My_Co * 1;
     var Ar_An_Par = Ar_An * 1;
     var Ar_An_Par_M = Ar_An_Par * 4;
      var Ar_An_Par_Tu = Ar_An_Par * 2;
      var Ar_An_Par_Tu_M = Ar_An_Par_Tu * 2;
       var Ar_An_Par_Tu_Mo = Ar_An_Par_Tu * 2;
       var Ar_An_Par_Tu_Mo_M = Ar_An_Par_Tu_Mo * 2;
        var Ar_An_Par_Tu_Mo_Ir = Ar_An_Par_Tu_Mo * 2;
        var Ar_An_Par_Tu_Mo_Ir_M = Ar_An_Par_Tu_Mo_Ir * 1;
         var Ar_An_Par_Tu_Mo_Ir_Ore = Ar_An_Par_Tu_Mo_Ir * 1;
        var Ar_An_Par_Tu_Mo_Ge = Ar_An_Par_Tu_Mo;
        var Ar_An_Par_Tu_Mo_Ge_M = Ar_An_Par_Tu_Mo_Ge * 1;
         var Ar_An_Par_Tu_Mo_Ge_Ir = Ar_An_Par_Tu_Mo_Ge *1;
         var Ar_An_Par_Tu_Mo_Ge_Ir_M = Ar_An_Par_Tu_Mo_Ge_Ir * 1;
          var Ar_An_Par_Tu_Mo_Ge_Ir_Ore = Ar_An_Par_Tu_Mo_Ge_Ir * 1;
        var Ar_An_Par_Tu_Mo_MaC = Ar_An_Par_Tu_Mo;
        var Ar_An_Par_Tu_Mo_MaC_M = Ar_An_Par_Tu_Mo_MaC * 0.5;
         var Ar_An_Par_Tu_Mo_MaC_Ma = Ar_An_Par_Tu_Mo_MaC * 1;
         var Ar_An_Par_Tu_Mo_MaC_Ma_M = Ar_An_Par_Tu_Mo_MaC_Ma * 1.5;
          var Ar_An_Par_Tu_Mo_MaC_Ma_Ore = Ar_An_Par_Tu_Mo_MaC_Ma * 1;
         var Ar_An_Par_Tu_Mo_MaC_Co = Ar_An_Par_Tu_Mo_MaC * 0.5;
         var Ar_An_Par_Tu_Mo_MaC_Co_M = Ar_An_Par_Tu_Mo_MaC_Co * 1;
          var Ar_An_Par_Tu_Mo_MaC_Co_Ore = Ar_An_Par_Tu_Mo_MaC_Co * 1;
       var Ar_An_Par_Tu_MaC = Ar_An_Par_Tu * 2;
       var Ar_An_Par_Tu_MaC_M = Ar_An_Par_Tu_MaC * 0.5;
        var Ar_An_Par_Tu_MaC_Ma = Ar_An_Par_Tu_MaC * 1;
        var Ar_An_Par_Tu_MaC_Ma_M = Ar_An_Par_Tu_MaC_Ma * 1.5;
         var Ar_An_Par_Tu_MaC_Ma_Ore = Ar_An_Par_Tu_MaC_Ma * 1;
        var Ar_An_Par_Tu_MaC_Co = Ar_An_Par_Tu_MaC * 0.5;
        var Ar_An_Par_Tu_MaC_Co_M = Ar_An_Par_Tu_MaC_Co * 1;
         var Ar_An_Par_Tu_MaC_Co_Ore = Ar_An_Par_Tu_MaC_Co * 1;
      var Ar_An_Par_Co = Ar_An_Par * 2;
      var Ar_An_Par_Co_M = Ar_An_Par_Co * 1;      
       var Ar_An_Par_Co_Ore = Ar_An_Par_Co * 1;
      var Ar_An_Par_Gr = Ar_An_Par * 2;
      var Ar_An_Par_Gr_M = Ar_An_Par_Gr * 1;
      var Ar_An_Par_Gr_Hy = Ar_An_Par_Gr * 0.5;
       var Ar_An_Par_Gr_Fi = Ar_An_Par_Gr * 1;
     var Ar_Qu = Ar * 10;
     var Ar_Qu_M = Ar_Qu * 6;
     var Ar_Qu_Pro = Ar_Qu * 2;
     var Ar_Qu_Pro_M = Ar_Qu_Pro * 3;
      var Ar_Qu_Pro_Ci = Ar_Qu_Pro * 2;
      var Ar_Qu_Pro_Ci_M = Ar_Qu_Pro_Ci * 0.5;
       var Ar_Qu_Pro_Ci_Ir = Ar_Qu_Pro_Ci * 1;
       var Ar_Qu_Pro_Ci_Ir_M = Ar_Qu_Pro_Ci_Ir * 1;
        var Ar_Qu_Pro_Ci_Ir_Ore = Ar_Qu_Pro_Ci_Ir * 1;        
       var Ar_Qu_Pro_Ci_Co = Ar_Qu_Pro_Ci * 0.5;
       var Ar_Qu_Pro_Ci_Co_M = Ar_Qu_Pro_Ci_Co * 1;
        var Ar_Qu_Pro_Ci_Co_Ore = Ar_Qu_Pro_Ci_Co * 1;
      var Ar_Qu_Pro_My = Ar_Qu_Pro * 2;
      var Ar_Qu_Pro_My_M = Ar_Qu_Pro_My * 2;
       var Ar_Qu_Pro_My_Si = Ar_Qu_Pro_My * 2;
       var Ar_Qu_Pro_My_Si_M = Ar_Qu_Pro_My_Si * 2;
        var Ar_Qu_Pro_My_Si_Ore = Ar_Qu_Pro_My_Si * 2;        
       var Ar_Qu_Pro_My_Co = Ar_Qu_Pro_My * 1;
       var Ar_Qu_Pro_My_Co_M = Ar_Qu_Pro_My_Co * 1;
        var Ar_Qu_Pro_My_Co_Ore = Ar_Qu_Pro_My_Co * 1;
     var Ar_Qu_PlF = Ar_Qu * 2;
     var Ar_Qu_PlF_M = Ar_Qu_PlF * 12;
      var Ar_Qu_PlF_TiG = Ar_Qu_PlF * 2;
      var Ar_Qu_PlF_TiG_M = Ar_Qu_PlF_TiG * 2.5;
       var Ar_Qu_PlF_TiG_Gl = Ar_Qu_PlF_TiG * 1;
       var Ar_Qu_PlF_TiG_Gl_M = Ar_Qu_PlF_TiG_Gl * 2;
        var Ar_Qu_PlF_TiG_Gl_Ore = Ar_Qu_PlF_TiG_Gl * 2;
       var Ar_Qu_PlF_TiG_Ti = Ar_Qu_PlF_TiG;
       var Ar_Qu_PlF_TiG_Ti_M = Ar_Qu_PlF_TiG_Ti * 2
        var Ar_Qu_PlF_TiG_Ti_Ore = Ar_Qu_PlF_TiG_Ti * 2;
       var Ar_Qu_PlF_TiG_Wa = Ar_Qu_PlF_TiG * 1;
      var Ar_Qu_PlF_Cas = Ar_Qu_PlF * 1;
      var Ar_Qu_PlF_Cas_M = Ar_Qu_PlF_Cas * 4;
       var Ar_Qu_PlF_Cas_Opt = Ar_Qu_PlF_Cas * 8;
       var Ar_Qu_PlF_Cas_Gr = Ar_Qu_PlF_Cas * 2;
       var Ar_Qu_PlF_Cas_Gr_Hy = Ar_Qu_PlF_Cas_Gr * 0.5;
       var Ar_Qu_PlF_Cas_Gr_M = Ar_Qu_PlF_Cas_Gr * 1;
        var Ar_Qu_PlF_Cas_Gr_Fi = Ar_Qu_PlF_Cas_Gr * 1;
       var Ar_Qu_PlF_Cas_Hy = Ar_Qu_PlF_Cas * 10;
    // set the recipe for Logistics distributer
    var LoDi_M = LoDi * 8;
     var LoDi_Ir = LoDi * 8;
      var LoDi_Ir_M = LoDi_Ir * 1;
       var LoDi_Ir_Ore = LoDi_Ir * 1;
     var LoDi_PlE = LoDi * 4;
     var LoDi_PlE_M = LoDi_PlE * 2;
     var LoDi_PlE_MaC = LoDi_PlE * 4;
     var LoDi_PlE_MaC_M = LoDi_PlE_MaC * 0.5;
      var LoDi_PlE_MaC_Ma = LoDi_PlE_MaC * 1;
      var LoDi_PlE_MaC_Ma_M = LoDi_PlE_MaC_Ma * 1.5;
       var LoDi_PlE_MaC_Ma_Ore = LoDi_PlE_MaC_Ma * 1;
      var LoDi_PlE_MaC_Co = LoDi_PlE_MaC * 0.5;
      var LoDi_PlE_MaC_Co_M = LoDi_PlE_MaC_Co * 1;
       var LoDi_PlE_MaC_Co_Ore = LoDi_PlE_MaC_Co * 1;
     var LoDi_PlE_Pr = LoDi_PlE * 2;
     var LoDi_PlE_Pr_M = LoDi_PlE_Pr * 1;
      var LoDi_PlE_Pr_Gl = LoDi_PlE_Pr * 1.5;
      var LoDi_PlE_Pr_Gl_M = LoDi_PlE_Pr_Gl * 2; 
       var LoDi_PlE_Pr_Gl_Ore = LoDi_PlE_Pr_Gl * 2;
     var LoDi_Pro = LoDi * 4;
     var LoDi_Pro_M = LoDi_Pro * 3;
     var LoDi_Pro_Ci = LoDi_Pro * 2;
     var LoDi_Pro_Ci_M = LoDi_Pro_Ci * 0.5;
      var LoDi_Pro_Ci_Ir = LoDi_Pro_Ci * 1;
      var LoDi_Pro_Ci_Ir_M = LoDi_Pro_Ci_Ir * 1;
       var LoDi_Pro_Ci_Ir_Ore = LoDi_Pro_Ci_Ir * 1;        
      var LoDi_Pro_Ci_Co = LoDi_Pro_Ci * 0.5;
      var LoDi_Pro_Ci_Co_M = LoDi_Pro_Ci_Co * 1;
       var LoDi_Pro_Ci_Co_Ore = LoDi_Pro_Ci_Co * 1;
     var LoDi_Pro_My = LoDi_Pro * 2;
     var LoDi_Pro_My_M = LoDi_Pro_My * 2;
      var LoDi_Pro_My_Si = LoDi_Pro_My * 2;
      var LoDi_Pro_My_Si_M = LoDi_Pro_My_Si * 2;
       var LoDi_Pro_My_Si_Ore = LoDi_Pro_My_Si * 2;        
      var LoDi_Pro_My_Co = LoDi_Pro_My * 1;
      var LoDi_Pro_My_Co_M = LoDi_Pro_My_Co * 1;
       var LoDi_Pro_My_Co_Ore = LoDi_Pro_My_Co * 1;
    // set the recipe for Planetary logistic tower
    var PlL_M = PlL * 20;
     var PlL_St = PlL * 40;
     var PlL_St_M = PlL_St * 3;
      var PlL_St_Ir = PlL_St * 3;
      var PlL_St_Ir_M = PlL_St_Ir;
       var PlL_St_Ir_Ore = PlL_St_Ir;
     var PlL_Ti = PlL * 40;
     var PlL_Ti_M = PlL_Ti * 2
      var PlL_Ti_Ore = PlL_Ti * 2;
     var PlL_Pro = PlL * 40;
     var PlL_Pro_M = PlL_Pro * 3;
     var PlL_Pro_Ci = PlL_Pro * 2;
     var PlL_Pro_Ci_M = PlL_Pro_Ci * 0.5;
      var PlL_Pro_Ci_Ir = PlL_Pro_Ci * 1;
      var PlL_Pro_Ci_Ir_M = PlL_Pro_Ci_Ir * 1;
       var PlL_Pro_Ci_Ir_Ore = PlL_Pro_Ci_Ir * 1;        
      var PlL_Pro_Ci_Co = PlL_Pro_Ci * 0.5;
      var PlL_Pro_Ci_Co_M = PlL_Pro_Ci_Co * 1;
       var PlL_Pro_Ci_Co_Ore = PlL_Pro_Ci_Co * 1;
     var PlL_Pro_My = PlL_Pro * 2;
     var PlL_Pro_My_M = PlL_Pro_My * 2;
      var PlL_Pro_My_Si = PlL_Pro_My * 2;
      var PlL_Pro_My_Si_M = PlL_Pro_My_Si * 2;
       var PlL_Pro_My_Si_Ore = PlL_Pro_My_Si * 2;        
      var PlL_Pro_My_Co = PlL_Pro_My * 1;
      var PlL_Pro_My_Co_M = PlL_Pro_My_Co * 1;
       var PlL_Pro_My_Co_Ore = PlL_Pro_My_Co * 1;
     var PlL_Par = PlL * 20;
     var PlL_Par_M = PlL_Par * 4;
     var PlL_Par_Tu = PlL_Par * 2;
     var PlL_Par_Tu_M = PlL_Par_Tu * 2;
      var PlL_Par_Tu_Mo = PlL_Par_Tu * 2;
      var PlL_Par_Tu_Mo_M = PlL_Par_Tu_Mo * 2;
       var PlL_Par_Tu_Mo_Ir = PlL_Par_Tu_Mo * 2;
       var PlL_Par_Tu_Mo_Ir_M = PlL_Par_Tu_Mo_Ir * 1;
        var PlL_Par_Tu_Mo_Ir_Ore = PlL_Par_Tu_Mo_Ir * 1;
       var PlL_Par_Tu_Mo_Ge = PlL_Par_Tu_Mo;
       var PlL_Par_Tu_Mo_Ge_M = PlL_Par_Tu_Mo_Ge * 1;
        var PlL_Par_Tu_Mo_Ge_Ir = PlL_Par_Tu_Mo_Ge *1;
        var PlL_Par_Tu_Mo_Ge_Ir_M = PlL_Par_Tu_Mo_Ge_Ir * 1;
         var PlL_Par_Tu_Mo_Ge_Ir_Ore = PlL_Par_Tu_Mo_Ge_Ir * 1;
       var PlL_Par_Tu_Mo_MaC = PlL_Par_Tu_Mo;
       var PlL_Par_Tu_Mo_MaC_M = PlL_Par_Tu_Mo_MaC * 0.5;
        var PlL_Par_Tu_Mo_MaC_Ma = PlL_Par_Tu_Mo_MaC * 1;
        var PlL_Par_Tu_Mo_MaC_Ma_M = PlL_Par_Tu_Mo_MaC_Ma * 1.5;
         var PlL_Par_Tu_Mo_MaC_Ma_Ore = PlL_Par_Tu_Mo_MaC_Ma * 1;
        var PlL_Par_Tu_Mo_MaC_Co = PlL_Par_Tu_Mo_MaC * 0.5;
        var PlL_Par_Tu_Mo_MaC_Co_M = PlL_Par_Tu_Mo_MaC_Co * 1;
         var PlL_Par_Tu_Mo_MaC_Co_Ore = PlL_Par_Tu_Mo_MaC_Co * 1;
      var PlL_Par_Tu_MaC = PlL_Par_Tu * 2;
      var PlL_Par_Tu_MaC_M = PlL_Par_Tu_MaC * 0.5;
       var PlL_Par_Tu_MaC_Ma = PlL_Par_Tu_MaC * 1;
       var PlL_Par_Tu_MaC_Ma_M = PlL_Par_Tu_MaC_Ma * 1.5;
        var PlL_Par_Tu_MaC_Ma_Ore = PlL_Par_Tu_MaC_Ma * 1;
       var PlL_Par_Tu_MaC_Co = PlL_Par_Tu_MaC * 0.5;
       var PlL_Par_Tu_MaC_Co_M = PlL_Par_Tu_MaC_Co * 1;
        var PlL_Par_Tu_MaC_Co_Ore = PlL_Par_Tu_MaC_Co * 1;
     var PlL_Par_Co = PlL_Par * 2;
     var PlL_Par_Co_M = PlL_Par_Co * 1;      
      var PlL_Par_Co_Ore = PlL_Par_Co * 1;
     var PlL_Par_Gr = PlL_Par * 2;
     var PlL_Par_Gr_M = PlL_Par_Gr * 1;
     var PlL_Par_Gr_Hy = PlL_Par_Gr * 0.5;
      var PlL_Par_Gr_Fi = PlL_Par_Gr * 1;
    // set the recipe for Interstellar logistic tower
    var In_M = In * 30;
     var In_PlL = In * 1;
     var In_PlL_M = In_PlL * 20;
     var In_PlL_St = In_PlL * 40;
     var In_PlL_St_M = In_PlL_St * 3;
      var In_PlL_St_Ir = In_PlL_St * 3;
      var In_PlL_St_Ir_M = In_PlL_St_Ir;
       var In_PlL_St_Ir_Ore = In_PlL_St_Ir;
     var In_PlL_Ti = In_PlL * 40;
     var In_PlL_Ti_M = In_PlL_Ti * 2
      var In_PlL_Ti_Ore = In_PlL_Ti * 2;
     var In_PlL_Pro = In_PlL * 40;
     var In_PlL_Pro_M = In_PlL_Pro * 3;
     var In_PlL_Pro_Ci = In_PlL_Pro * 2;
     var In_PlL_Pro_Ci_M = In_PlL_Pro_Ci * 0.5;
      var In_PlL_Pro_Ci_Ir = In_PlL_Pro_Ci * 1;
      var In_PlL_Pro_Ci_Ir_M = In_PlL_Pro_Ci_Ir * 1;
       var In_PlL_Pro_Ci_Ir_Ore = In_PlL_Pro_Ci_Ir * 1;        
      var In_PlL_Pro_Ci_Co = In_PlL_Pro_Ci * 0.5;
      var In_PlL_Pro_Ci_Co_M = In_PlL_Pro_Ci_Co * 1;
       var In_PlL_Pro_Ci_Co_Ore = In_PlL_Pro_Ci_Co * 1;
     var In_PlL_Pro_My = In_PlL_Pro * 2;
     var In_PlL_Pro_My_M = In_PlL_Pro_My * 2;
      var In_PlL_Pro_My_Si = In_PlL_Pro_My * 2;
      var In_PlL_Pro_My_Si_M = In_PlL_Pro_My_Si * 2;
       var In_PlL_Pro_My_Si_Ore = In_PlL_Pro_My_Si * 2;        
      var In_PlL_Pro_My_Co = In_PlL_Pro_My * 1;
      var In_PlL_Pro_My_Co_M = In_PlL_Pro_My_Co * 1;
       var In_PlL_Pro_My_Co_Ore = In_PlL_Pro_My_Co * 1;
     var In_PlL_Par = In_PlL * 20;
     var In_PlL_Par_M = In_PlL_Par * 4;
     var In_PlL_Par_Tu = In_PlL_Par * 2;
     var In_PlL_Par_Tu_M = In_PlL_Par_Tu * 2;
      var In_PlL_Par_Tu_Mo = In_PlL_Par_Tu * 2;
      var In_PlL_Par_Tu_Mo_M = In_PlL_Par_Tu_Mo * 2;
       var In_PlL_Par_Tu_Mo_Ir = In_PlL_Par_Tu_Mo * 2;
       var In_PlL_Par_Tu_Mo_Ir_M = In_PlL_Par_Tu_Mo_Ir * 1;
        var In_PlL_Par_Tu_Mo_Ir_Ore = In_PlL_Par_Tu_Mo_Ir * 1;
       var In_PlL_Par_Tu_Mo_Ge = In_PlL_Par_Tu_Mo;
       var In_PlL_Par_Tu_Mo_Ge_M = In_PlL_Par_Tu_Mo_Ge * 1;
        var In_PlL_Par_Tu_Mo_Ge_Ir = In_PlL_Par_Tu_Mo_Ge *1;
        var In_PlL_Par_Tu_Mo_Ge_Ir_M = In_PlL_Par_Tu_Mo_Ge_Ir * 1;
         var In_PlL_Par_Tu_Mo_Ge_Ir_Ore = In_PlL_Par_Tu_Mo_Ge_Ir * 1;
       var In_PlL_Par_Tu_Mo_MaC = In_PlL_Par_Tu_Mo;
       var In_PlL_Par_Tu_Mo_MaC_M = In_PlL_Par_Tu_Mo_MaC * 0.5;
        var In_PlL_Par_Tu_Mo_MaC_Ma = In_PlL_Par_Tu_Mo_MaC * 1;
        var In_PlL_Par_Tu_Mo_MaC_Ma_M = In_PlL_Par_Tu_Mo_MaC_Ma * 1.5;
         var In_PlL_Par_Tu_Mo_MaC_Ma_Ore = In_PlL_Par_Tu_Mo_MaC_Ma * 1;
        var In_PlL_Par_Tu_Mo_MaC_Co = In_PlL_Par_Tu_Mo_MaC * 0.5;
        var In_PlL_Par_Tu_Mo_MaC_Co_M = In_PlL_Par_Tu_Mo_MaC_Co * 1;
         var In_PlL_Par_Tu_Mo_MaC_Co_Ore = In_PlL_Par_Tu_Mo_MaC_Co * 1;
      var In_PlL_Par_Tu_MaC = In_PlL_Par_Tu * 2;
      var In_PlL_Par_Tu_MaC_M = In_PlL_Par_Tu_MaC * 0.5;
       var In_PlL_Par_Tu_MaC_Ma = In_PlL_Par_Tu_MaC * 1;
       var In_PlL_Par_Tu_MaC_Ma_M = In_PlL_Par_Tu_MaC_Ma * 1.5;
        var In_PlL_Par_Tu_MaC_Ma_Ore = In_PlL_Par_Tu_MaC_Ma * 1;
       var In_PlL_Par_Tu_MaC_Co = In_PlL_Par_Tu_MaC * 0.5;
       var In_PlL_Par_Tu_MaC_Co_M = In_PlL_Par_Tu_MaC_Co * 1;
        var In_PlL_Par_Tu_MaC_Co_Ore = In_PlL_Par_Tu_MaC_Co * 1;
     var In_PlL_Par_Co = In_PlL_Par * 2;
     var In_PlL_Par_Co_M = In_PlL_Par_Co * 1;      
      var In_PlL_Par_Co_Ore = In_PlL_Par_Co * 1;
     var In_PlL_Par_Gr = In_PlL_Par * 2;
     var In_PlL_Par_Gr_M = In_PlL_Par_Gr * 1;
     var In_PlL_Par_Gr_Hy = In_PlL_Par_Gr * 0.5;
      var In_PlL_Par_Gr_Fi = In_PlL_Par_Gr * 1;
     var In_TiA = In * 40;
     var In_TiA_M = In_TiA * 3;
     var In_TiA_Ti = In_TiA;
     var In_TiA_Ti_M = In_TiA_Ti * 2;
      var In_TiA_Ti_Ore = In_TiA_Ti * 2;
     var In_TiA_St = In_TiA;
     var In_TiA_St_M = In_TiA_St * 3;
      var In_TiA_St_Ir = In_TiA_St * 3;
      var In_TiA_St_Ir_M = In_TiA_St_Ir;
       var In_TiA_St_Ir_Ore = In_TiA_St_Ir;
     var In_TiA_Su = In_TiA * 2;
     var In_Par = In * 20;
     var In_Par_M = In_Par * 4;
     var In_Par_Tu = In_Par * 2;
     var In_Par_Tu_M = In_Par_Tu * 2;
      var In_Par_Tu_Mo = In_Par_Tu * 2;
      var In_Par_Tu_Mo_M = In_Par_Tu_Mo * 2;
       var In_Par_Tu_Mo_Ir = In_Par_Tu_Mo * 2;
       var In_Par_Tu_Mo_Ir_M = In_Par_Tu_Mo_Ir * 1;
        var In_Par_Tu_Mo_Ir_Ore = In_Par_Tu_Mo_Ir * 1;
       var In_Par_Tu_Mo_Ge = In_Par_Tu_Mo;
       var In_Par_Tu_Mo_Ge_M = In_Par_Tu_Mo_Ge * 1;
        var In_Par_Tu_Mo_Ge_Ir = In_Par_Tu_Mo_Ge *1;
        var In_Par_Tu_Mo_Ge_Ir_M = In_Par_Tu_Mo_Ge_Ir * 1;
         var In_Par_Tu_Mo_Ge_Ir_Ore = In_Par_Tu_Mo_Ge_Ir * 1;
       var In_Par_Tu_Mo_MaC = In_Par_Tu_Mo;
       var In_Par_Tu_Mo_MaC_M = In_Par_Tu_Mo_MaC * 0.5;
        var In_Par_Tu_Mo_MaC_Ma = In_Par_Tu_Mo_MaC * 1;
        var In_Par_Tu_Mo_MaC_Ma_M = In_Par_Tu_Mo_MaC_Ma * 1.5;
         var In_Par_Tu_Mo_MaC_Ma_Ore = In_Par_Tu_Mo_MaC_Ma * 1;
        var In_Par_Tu_Mo_MaC_Co = In_Par_Tu_Mo_MaC * 0.5;
        var In_Par_Tu_Mo_MaC_Co_M = In_Par_Tu_Mo_MaC_Co * 1;
         var In_Par_Tu_Mo_MaC_Co_Ore = In_Par_Tu_Mo_MaC_Co * 1;
      var In_Par_Tu_MaC = In_Par_Tu * 2;
      var In_Par_Tu_MaC_M = In_Par_Tu_MaC * 0.5;
       var In_Par_Tu_MaC_Ma = In_Par_Tu_MaC * 1;
       var In_Par_Tu_MaC_Ma_M = In_Par_Tu_MaC_Ma * 1.5;
        var In_Par_Tu_MaC_Ma_Ore = In_Par_Tu_MaC_Ma * 1;
       var In_Par_Tu_MaC_Co = In_Par_Tu_MaC * 0.5;
       var In_Par_Tu_MaC_Co_M = In_Par_Tu_MaC_Co * 1;
        var In_Par_Tu_MaC_Co_Ore = In_Par_Tu_MaC_Co * 1;
     var In_Par_Co = In_Par * 2;
     var In_Par_Co_M = In_Par_Co * 1;      
      var In_Par_Co_Ore = In_Par_Co * 1;
     var In_Par_Gr = In_Par * 2;
     var In_Par_Gr_M = In_Par_Gr * 1;
     var In_Par_Gr_Hy = In_Par_Gr * 0.5;
      var In_Par_Gr_Fi = In_Par_Gr * 1;
    // set the recipe for Orbital collider
    var Or_M = Or * 30;
     var Or_In = Or * 1;
     var Or_In_M = Or_In * 30;
     var Or_In_PlL = Or_In * 1;
     var Or_In_PlL_M = Or_In_PlL * 20;
     var Or_In_PlL_St = Or_In_PlL * 40;
     var Or_In_PlL_St_M = Or_In_PlL_St * 3;
      var Or_In_PlL_St_Ir = Or_In_PlL_St * 3;
      var Or_In_PlL_St_Ir_M = Or_In_PlL_St_Ir;
       var Or_In_PlL_St_Ir_Ore = Or_In_PlL_St_Ir;
     var Or_In_PlL_Ti = Or_In_PlL * 40;
     var Or_In_PlL_Ti_M = Or_In_PlL_Ti * 2
      var Or_In_PlL_Ti_Ore = Or_In_PlL_Ti * 2;
     var Or_In_PlL_Pro = Or_In_PlL * 40;
     var Or_In_PlL_Pro_M = Or_In_PlL_Pro * 3;
     var Or_In_PlL_Pro_Ci = Or_In_PlL_Pro * 2;
     var Or_In_PlL_Pro_Ci_M = Or_In_PlL_Pro_Ci * 0.5;
      var Or_In_PlL_Pro_Ci_Ir = Or_In_PlL_Pro_Ci * 1;
      var Or_In_PlL_Pro_Ci_Ir_M = Or_In_PlL_Pro_Ci_Ir * 1;
       var Or_In_PlL_Pro_Ci_Ir_Ore = Or_In_PlL_Pro_Ci_Ir * 1;        
      var Or_In_PlL_Pro_Ci_Co = Or_In_PlL_Pro_Ci * 0.5;
      var Or_In_PlL_Pro_Ci_Co_M = Or_In_PlL_Pro_Ci_Co * 1;
       var Or_In_PlL_Pro_Ci_Co_Ore = Or_In_PlL_Pro_Ci_Co * 1;
     var Or_In_PlL_Pro_My = Or_In_PlL_Pro * 2;
     var Or_In_PlL_Pro_My_M = Or_In_PlL_Pro_My * 2;
      var Or_In_PlL_Pro_My_Si = Or_In_PlL_Pro_My * 2;
      var Or_In_PlL_Pro_My_Si_M = Or_In_PlL_Pro_My_Si * 2;
       var Or_In_PlL_Pro_My_Si_Ore = Or_In_PlL_Pro_My_Si * 2;        
      var Or_In_PlL_Pro_My_Co = Or_In_PlL_Pro_My * 1;
      var Or_In_PlL_Pro_My_Co_M = Or_In_PlL_Pro_My_Co * 1;
       var Or_In_PlL_Pro_My_Co_Ore = Or_In_PlL_Pro_My_Co * 1;
     var Or_In_PlL_Par = Or_In_PlL * 20;
     var Or_In_PlL_Par_M = Or_In_PlL_Par * 4;
     var Or_In_PlL_Par_Tu = Or_In_PlL_Par * 2;
     var Or_In_PlL_Par_Tu_M = Or_In_PlL_Par_Tu * 2;
      var Or_In_PlL_Par_Tu_Mo = Or_In_PlL_Par_Tu * 2;
      var Or_In_PlL_Par_Tu_Mo_M = Or_In_PlL_Par_Tu_Mo * 2;
       var Or_In_PlL_Par_Tu_Mo_Ir = Or_In_PlL_Par_Tu_Mo * 2;
       var Or_In_PlL_Par_Tu_Mo_Ir_M = Or_In_PlL_Par_Tu_Mo_Ir * 1;
        var Or_In_PlL_Par_Tu_Mo_Ir_Ore = Or_In_PlL_Par_Tu_Mo_Ir * 1;
       var Or_In_PlL_Par_Tu_Mo_Ge = Or_In_PlL_Par_Tu_Mo;
       var Or_In_PlL_Par_Tu_Mo_Ge_M = Or_In_PlL_Par_Tu_Mo_Ge * 1;
        var Or_In_PlL_Par_Tu_Mo_Ge_Ir = Or_In_PlL_Par_Tu_Mo_Ge *1;
        var Or_In_PlL_Par_Tu_Mo_Ge_Ir_M = Or_In_PlL_Par_Tu_Mo_Ge_Ir * 1;
         var Or_In_PlL_Par_Tu_Mo_Ge_Ir_Ore = Or_In_PlL_Par_Tu_Mo_Ge_Ir * 1;
       var Or_In_PlL_Par_Tu_Mo_MaC = Or_In_PlL_Par_Tu_Mo;
       var Or_In_PlL_Par_Tu_Mo_MaC_M = Or_In_PlL_Par_Tu_Mo_MaC * 0.5;
        var Or_In_PlL_Par_Tu_Mo_MaC_Ma = Or_In_PlL_Par_Tu_Mo_MaC * 1;
        var Or_In_PlL_Par_Tu_Mo_MaC_Ma_M = Or_In_PlL_Par_Tu_Mo_MaC_Ma * 1.5;
         var Or_In_PlL_Par_Tu_Mo_MaC_Ma_Ore = Or_In_PlL_Par_Tu_Mo_MaC_Ma * 1;
        var Or_In_PlL_Par_Tu_Mo_MaC_Co = Or_In_PlL_Par_Tu_Mo_MaC * 0.5;
        var Or_In_PlL_Par_Tu_Mo_MaC_Co_M = Or_In_PlL_Par_Tu_Mo_MaC_Co * 1;
         var Or_In_PlL_Par_Tu_Mo_MaC_Co_Ore = Or_In_PlL_Par_Tu_Mo_MaC_Co * 1;
      var Or_In_PlL_Par_Tu_MaC = Or_In_PlL_Par_Tu * 2;
      var Or_In_PlL_Par_Tu_MaC_M = Or_In_PlL_Par_Tu_MaC * 0.5;
       var Or_In_PlL_Par_Tu_MaC_Ma = Or_In_PlL_Par_Tu_MaC * 1;
       var Or_In_PlL_Par_Tu_MaC_Ma_M = Or_In_PlL_Par_Tu_MaC_Ma * 1.5;
        var Or_In_PlL_Par_Tu_MaC_Ma_Ore = Or_In_PlL_Par_Tu_MaC_Ma * 1;
       var Or_In_PlL_Par_Tu_MaC_Co = Or_In_PlL_Par_Tu_MaC * 0.5;
       var Or_In_PlL_Par_Tu_MaC_Co_M = Or_In_PlL_Par_Tu_MaC_Co * 1;
        var Or_In_PlL_Par_Tu_MaC_Co_Ore = Or_In_PlL_Par_Tu_MaC_Co * 1;
     var Or_In_PlL_Par_Co = Or_In_PlL_Par * 2;
     var Or_In_PlL_Par_Co_M = Or_In_PlL_Par_Co * 1;      
      var Or_In_PlL_Par_Co_Ore = Or_In_PlL_Par_Co * 1;
     var Or_In_PlL_Par_Gr = Or_In_PlL_Par * 2;
     var Or_In_PlL_Par_Gr_M = Or_In_PlL_Par_Gr * 1;
     var Or_In_PlL_Par_Gr_Hy = Or_In_PlL_Par_Gr * 0.5;
      var Or_In_PlL_Par_Gr_Fi = Or_In_PlL_Par_Gr * 1;
     var Or_In_TiA = Or_In * 40;
     var Or_In_TiA_M = Or_In_TiA * 3;
     var Or_In_TiA_Ti = Or_In_TiA;
     var Or_In_TiA_Ti_M = Or_In_TiA_Ti * 2;
      var Or_In_TiA_Ti_Ore = Or_In_TiA_Ti * 2;
     var Or_In_TiA_St = Or_In_TiA;
     var Or_In_TiA_St_M = Or_In_TiA_St * 3;
      var Or_In_TiA_St_Ir = Or_In_TiA_St * 3;
      var Or_In_TiA_St_Ir_M = Or_In_TiA_St_Ir;
       var Or_In_TiA_St_Ir_Ore = Or_In_TiA_St_Ir;
     var Or_In_TiA_Su = Or_In_TiA * 2;
     var Or_In_Par = Or_In * 20;
     var Or_In_Par_M = Or_In_Par * 4;
     var Or_In_Par_Tu = Or_In_Par * 2;
     var Or_In_Par_Tu_M = Or_In_Par_Tu * 2;
      var Or_In_Par_Tu_Mo = Or_In_Par_Tu * 2;
      var Or_In_Par_Tu_Mo_M = Or_In_Par_Tu_Mo * 2;
       var Or_In_Par_Tu_Mo_Ir = Or_In_Par_Tu_Mo * 2;
       var Or_In_Par_Tu_Mo_Ir_M = Or_In_Par_Tu_Mo_Ir * 1;
        var Or_In_Par_Tu_Mo_Ir_Ore = Or_In_Par_Tu_Mo_Ir * 1;
       var Or_In_Par_Tu_Mo_Ge = Or_In_Par_Tu_Mo;
       var Or_In_Par_Tu_Mo_Ge_M = Or_In_Par_Tu_Mo_Ge * 1;
        var Or_In_Par_Tu_Mo_Ge_Ir = Or_In_Par_Tu_Mo_Ge *1;
        var Or_In_Par_Tu_Mo_Ge_Ir_M = Or_In_Par_Tu_Mo_Ge_Ir * 1;
         var Or_In_Par_Tu_Mo_Ge_Ir_Ore = Or_In_Par_Tu_Mo_Ge_Ir * 1;
       var Or_In_Par_Tu_Mo_MaC = Or_In_Par_Tu_Mo;
       var Or_In_Par_Tu_Mo_MaC_M = Or_In_Par_Tu_Mo_MaC * 0.5;
        var Or_In_Par_Tu_Mo_MaC_Ma = Or_In_Par_Tu_Mo_MaC * 1;
        var Or_In_Par_Tu_Mo_MaC_Ma_M = Or_In_Par_Tu_Mo_MaC_Ma * 1.5;
         var Or_In_Par_Tu_Mo_MaC_Ma_Ore = Or_In_Par_Tu_Mo_MaC_Ma * 1;
        var Or_In_Par_Tu_Mo_MaC_Co = Or_In_Par_Tu_Mo_MaC * 0.5;
        var Or_In_Par_Tu_Mo_MaC_Co_M = Or_In_Par_Tu_Mo_MaC_Co * 1;
         var Or_In_Par_Tu_Mo_MaC_Co_Ore = Or_In_Par_Tu_Mo_MaC_Co * 1;
      var Or_In_Par_Tu_MaC = Or_In_Par_Tu * 2;
      var Or_In_Par_Tu_MaC_M = Or_In_Par_Tu_MaC * 0.5;
       var Or_In_Par_Tu_MaC_Ma = Or_In_Par_Tu_MaC * 1;
       var Or_In_Par_Tu_MaC_Ma_M = Or_In_Par_Tu_MaC_Ma * 1.5;
        var Or_In_Par_Tu_MaC_Ma_Ore = Or_In_Par_Tu_MaC_Ma * 1;
       var Or_In_Par_Tu_MaC_Co = Or_In_Par_Tu_MaC * 0.5;
       var Or_In_Par_Tu_MaC_Co_M = Or_In_Par_Tu_MaC_Co * 1;
        var Or_In_Par_Tu_MaC_Co_Ore = Or_In_Par_Tu_MaC_Co * 1;
     var Or_In_Par_Co = Or_In_Par * 2;
     var Or_In_Par_Co_M = Or_In_Par_Co * 1;      
      var Or_In_Par_Co_Ore = Or_In_Par_Co * 1;
     var Or_In_Par_Gr = Or_In_Par * 2;
     var Or_In_Par_Gr_M = Or_In_Par_Gr * 1;
     var Or_In_Par_Gr_Hy = Or_In_Par_Gr * 0.5;
      var Or_In_Par_Gr_Fi = Or_In_Par_Gr * 1;
     var Or_El = Or * 50;
     var Or_El_M = Or_El *3;
     var Or_El_Tu = Or_El * 2;
     var Or_El_Tu_M = Or_El_Tu * 2;
     var Or_El_Tu_Mo = Or_El_Tu * 2;
     var Or_El_Tu_Mo_M = Or_El_Tu_Mo * 2;
      var Or_El_Tu_Mo_Ir = Or_El_Tu_Mo * 2;
      var Or_El_Tu_Mo_Ir_M = Or_El_Tu_Mo_Ir * 1;
       var Or_El_Tu_Mo_Ir_Ore = Or_El_Tu_Mo_Ir * 1;
      var Or_El_Tu_Mo_Ge = Or_El_Tu_Mo;
      var Or_El_Tu_Mo_Ge_M = Or_El_Tu_Mo_Ge * 1;
       var Or_El_Tu_Mo_Ge_Ir = Or_El_Tu_Mo_Ge *1;
       var Or_El_Tu_Mo_Ge_Ir_M = Or_El_Tu_Mo_Ge_Ir * 1;
        var Or_El_Tu_Mo_Ge_Ir_Ore = Or_El_Tu_Mo_Ge_Ir * 1;
      var Or_El_Tu_Mo_MaC = Or_El_Tu_Mo;
      var Or_El_Tu_Mo_MaC_M = Or_El_Tu_Mo_MaC * 0.5;
       var Or_El_Tu_Mo_MaC_Ma = Or_El_Tu_Mo_MaC * 1;
       var Or_El_Tu_Mo_MaC_Ma_M = Or_El_Tu_Mo_MaC_Ma * 1.5;
        var Or_El_Tu_Mo_MaC_Ma_Ore = Or_El_Tu_Mo_MaC_Ma * 1;
       var Or_El_Tu_Mo_MaC_Co = Or_El_Tu_Mo_MaC * 0.5;
       var Or_El_Tu_Mo_MaC_Co_M = Or_El_Tu_Mo_MaC_Co * 1;
        var Or_El_Tu_Mo_MaC_Co_Ore = Or_El_Tu_Mo_MaC_Co * 1;
     var Or_El_Tu_MaC = Or_El_Tu * 2;
     var Or_El_Tu_MaC_M = Or_El_Tu_MaC * 0.5;
      var Or_El_Tu_MaC_Ma = Or_El_Tu_MaC * 1;
      var Or_El_Tu_MaC_Ma_M = Or_El_Tu_MaC_Ma * 1.5;
       var Or_El_Tu_MaC_Ma_Ore = Or_El_Tu_MaC_Ma * 1;
      var Or_El_Tu_MaC_Co = Or_El_Tu_MaC * 0.5;
      var Or_El_Tu_MaC_Co_M = Or_El_Tu_MaC_Co * 1;
       var Or_El_Tu_MaC_Co_Ore = Or_El_Tu_MaC_Co * 1;
     var Or_El_Ma = Or_El * 3;
     var Or_El_Ma_M = Or_El_Ma * 1.5;
      var Or_El_Ma_Ore = Or_El_Ma *1;
     var Or_El_GrR = Or_El * 1;
     var Or_El_GrR_M = Or_El_GrR * 2;
      var Or_El_GrR_Ore = Or_El_GrR * 2;
     var Or_ReT = Or * 20;
     var Or_ReT_M = Or_ReT * 6;
     var Or_ReT_TiA = Or_ReT * 5;
     var Or_ReT_TiA_M = Or_ReT_TiA * 3;
      var Or_ReT_TiA_Ti = Or_ReT_TiA;
      var Or_ReT_TiA_Ti_M = Or_ReT_TiA_Ti * 2;
       var Or_ReT_TiA_Ti_Ore = Or_ReT_TiA_Ti * 2;
      var Or_ReT_TiA_St = Or_ReT_TiA;
      var Or_ReT_TiA_St_M = Or_ReT_TiA_St * 3;
       var Or_ReT_TiA_St_Ir = Or_ReT_TiA_St * 3;
       var Or_ReT_TiA_St_Ir_M = Or_ReT_TiA_St_Ir;
        var Or_ReT_TiA_St_Ir_Ore = Or_ReT_TiA_St_Ir;
      var Or_ReT_TiA_Su = Or_ReT_TiA * 2;
     var Or_ReT_Tu = Or_ReT * 5;
     var Or_ReT_Tu_M = Or_ReT_Tu * 2;
      var Or_ReT_Tu_Mo = Or_ReT_Tu * 2;
      var Or_ReT_Tu_Mo_M = Or_ReT_Tu_Mo * 2;
       var Or_ReT_Tu_Mo_Ir = Or_ReT_Tu_Mo * 2;
       var Or_ReT_Tu_Mo_Ir_M = Or_ReT_Tu_Mo_Ir * 1;
        var Or_ReT_Tu_Mo_Ir_Ore = Or_ReT_Tu_Mo_Ir * 1;
       var Or_ReT_Tu_Mo_Ge = Or_ReT_Tu_Mo;
       var Or_ReT_Tu_Mo_Ge_M = Or_ReT_Tu_Mo_Ge * 1;
        var Or_ReT_Tu_Mo_Ge_Ir = Or_ReT_Tu_Mo_Ge *1;
        var Or_ReT_Tu_Mo_Ge_Ir_M = Or_ReT_Tu_Mo_Ge_Ir * 1;
         var Or_ReT_Tu_Mo_Ge_Ir_Ore = Or_ReT_Tu_Mo_Ge_Ir * 1;
       var Or_ReT_Tu_Mo_MaC = Or_ReT_Tu_Mo;
       var Or_ReT_Tu_Mo_MaC_M = Or_ReT_Tu_Mo_MaC * 0.5;
        var Or_ReT_Tu_Mo_MaC_Ma = Or_ReT_Tu_Mo_MaC * 1;
        var Or_ReT_Tu_Mo_MaC_Ma_M = Or_ReT_Tu_Mo_MaC_Ma * 1.5;
         var Or_ReT_Tu_Mo_MaC_Ma_Ore = Or_ReT_Tu_Mo_MaC_Ma * 1;
        var Or_ReT_Tu_Mo_MaC_Co = Or_ReT_Tu_Mo_MaC * 0.5;
        var Or_ReT_Tu_Mo_MaC_Co_M = Or_ReT_Tu_Mo_MaC_Co * 1;
         var Or_ReT_Tu_Mo_MaC_Co_Ore = Or_ReT_Tu_Mo_MaC_Co * 1;
      var Or_ReT_Tu_MaC = Or_ReT_Tu * 2;
      var Or_ReT_Tu_MaC_M = Or_ReT_Tu_MaC * 0.5;
       var Or_ReT_Tu_MaC_Ma = Or_ReT_Tu_MaC * 1;
       var Or_ReT_Tu_MaC_Ma_M = Or_ReT_Tu_MaC_Ma * 1.5;
        var Or_ReT_Tu_MaC_Ma_Ore = Or_ReT_Tu_MaC_Ma * 1;
       var Or_ReT_Tu_MaC_Co = Or_ReT_Tu_MaC * 0.5;
       var Or_ReT_Tu_MaC_Co_M = Or_ReT_Tu_MaC_Co * 1;
        var Or_ReT_Tu_MaC_Co_Ore = Or_ReT_Tu_MaC_Co * 1;
     var Or_Ac = Or * 20; //Full accumalator
     var Or_Ac_M = Or_Ac * 1;
     var Or_Ac_Ir = Or_Ac * 6;
     var Or_Ac_Ir_M = Or_Ac_Ir * 1;
      var Or_Ac_Ir_Ore = Or_Ac_Ir * 1;
     var Or_Ac_SiC = Or_Ac * 6;
     var Or_Ac_SiC_M = Or_Ac_SiC * 0.75;
      var Or_Ac_SiC_Ore = Or_Ac_SiC * 0.5;
     var Or_Ac_El = Or_Ac * 1;
     var Or_Ac_El_M = Or_Ac_El *3;
     var Or_Ac_El_Tu = Or_Ac_El * 2;
     var Or_Ac_El_Tu_M = Or_Ac_El_Tu * 2;
     var Or_Ac_El_Tu_Mo = Or_Ac_El_Tu * 2;
     var Or_Ac_El_Tu_Mo_M = Or_Ac_El_Tu_Mo * 2;
      var Or_Ac_El_Tu_Mo_Ir = Or_Ac_El_Tu_Mo * 2;
      var Or_Ac_El_Tu_Mo_Ir_M = Or_Ac_El_Tu_Mo_Ir * 1;
       var Or_Ac_El_Tu_Mo_Ir_Ore = Or_Ac_El_Tu_Mo_Ir * 1;
      var Or_Ac_El_Tu_Mo_Ge = Or_Ac_El_Tu_Mo;
      var Or_Ac_El_Tu_Mo_Ge_M = Or_Ac_El_Tu_Mo_Ge * 1;
       var Or_Ac_El_Tu_Mo_Ge_Ir = Or_Ac_El_Tu_Mo_Ge *1;
       var Or_Ac_El_Tu_Mo_Ge_Ir_M = Or_Ac_El_Tu_Mo_Ge_Ir * 1;
        var Or_Ac_El_Tu_Mo_Ge_Ir_Ore = Or_Ac_El_Tu_Mo_Ge_Ir * 1;
      var Or_Ac_El_Tu_Mo_MaC = Or_Ac_El_Tu_Mo;
      var Or_Ac_El_Tu_Mo_MaC_M = Or_Ac_El_Tu_Mo_MaC * 0.5;
       var Or_Ac_El_Tu_Mo_MaC_Ma = Or_Ac_El_Tu_Mo_MaC * 1;
       var Or_Ac_El_Tu_Mo_MaC_Ma_M = Or_Ac_El_Tu_Mo_MaC_Ma * 1.5;
        var Or_Ac_El_Tu_Mo_MaC_Ma_Ore = Or_Ac_El_Tu_Mo_MaC_Ma * 1;
       var Or_Ac_El_Tu_Mo_MaC_Co = Or_Ac_El_Tu_Mo_MaC * 0.5;
       var Or_Ac_El_Tu_Mo_MaC_Co_M = Or_Ac_El_Tu_Mo_MaC_Co * 1;
        var Or_Ac_El_Tu_Mo_MaC_Co_Ore = Or_Ac_El_Tu_Mo_MaC_Co * 1;
     var Or_Ac_El_Tu_MaC = Or_Ac_El_Tu * 2;
     var Or_Ac_El_Tu_MaC_M = Or_Ac_El_Tu_MaC * 0.5;
      var Or_Ac_El_Tu_MaC_Ma = Or_Ac_El_Tu_MaC * 1;
      var Or_Ac_El_Tu_MaC_Ma_M = Or_Ac_El_Tu_MaC_Ma * 1.5;
       var Or_Ac_El_Tu_MaC_Ma_Ore = Or_Ac_El_Tu_MaC_Ma * 1;
      var Or_Ac_El_Tu_MaC_Co = Or_Ac_El_Tu_MaC * 0.5;
      var Or_Ac_El_Tu_MaC_Co_M = Or_Ac_El_Tu_MaC_Co * 1;
       var Or_Ac_El_Tu_MaC_Co_Ore = Or_Ac_El_Tu_MaC_Co * 1;
     var Or_Ac_El_Ma = Or_Ac_El * 3;
     var Or_Ac_El_Ma_M = Or_Ac_El_Ma * 1.5;
      var Or_Ac_El_Ma_Ore = Or_Ac_El_Ma *1;
     var Or_Ac_El_GrR = Or_Ac_El * 1;
     var Or_Ac_El_GrR_M = Or_Ac_El_GrR * 2;
      var Or_Ac_El_GrR_Ore = Or_Ac_El_GrR * 2;
    // set the recipe for Wind turbine
    var Wi_M = Wi * 4;
     var Wi_Ir = Wi * 6;
     var Wi_Ir_M = Wi_Ir * 1;
      var Wi_Ir_Ore = Wi_Ir * 1;
     var Wi_Ge = Wi * 1;
     var Wi_Ge_M = Wi_Ge * 1;
      var Wi_Ge_Ir = Wi_Ge *1;
      var Wi_Ge_Ir_M = Wi_Ge_Ir * 1;
       var Wi_Ge_Ir_Ore = Wi_Ge_Ir * 1;
     var Wi_MaC = Wi * 3;
     var Wi_MaC_M = Wi_MaC * 0.5;
      var Wi_MaC_Ma = Wi_MaC * 1;
      var Wi_MaC_Ma_M = Wi_MaC_Ma * 1.5;
      var Wi_MaC_Ma_Ore = Wi_MaC_Ma * 1;
      var Wi_MaC_Co = Wi_MaC * 0.5;
      var Wi_MaC_Co_M = Wi_MaC_Co * 1;
      var Wi_MaC_Co_Ore = Wi_MaC_Co * 1;
    // set the recipe for Thermal power plant
    var ThP_M = ThP * 5;
     var ThP_Ir = ThP * 10;
     var ThP_Ir_M = ThP_Ir * 1;
      var ThP_Ir_Ore = ThP_Ir * 1;
     var ThP_Br = ThP * 4;
     var ThP_Br_M = ThP_Br * 1;
      var ThP_Br_Ore = ThP_Br * 1;
     var ThP_Ge = ThP * 4;
     var ThP_Ge_M = ThP_Ge * 1;
      var ThP_Ge_Ir = ThP_Ge *1;
      var ThP_Ge_Ir_M = ThP_Ge_Ir * 1;
       var ThP_Ge_Ir_Ore = ThP_Ge_Ir * 1;
     var ThP_MaC = ThP * 4;
     var ThP_MaC_M = ThP_MaC * 0.5;
     var ThP_MaC_Ma = ThP_MaC * 1;
     var ThP_MaC_Ma_M = ThP_MaC_Ma * 1.5;
     var ThP_MaC_Ma_Ore = ThP_MaC_Ma * 1;
     var ThP_MaC_Co = ThP_MaC * 0.5;
     var ThP_MaC_Co_M = ThP_MaC_Co * 1;
     var ThP_MaC_Co_Ore = ThP_MaC_Co * 1;
    // set the recipe for Solar pannel
    var Sol_M = Sol * 6;
     var Sol_Co = Sol * 10;
     var Sol_Co_M = Sol_Co * 1;      
      var Sol_Co_Ore = Sol_Co * 1;
     var Sol_Ir = Sol * 10;
     var Sol_Ir_M = Sol_Ir * 1;
      var Sol_Ir_Ore = Sol_Ir * 1;
     var Sol_Ci = Sol * 5;
     var Sol_Ci_M = Sol_Ci * 0.5;
     var Sol_Ci_Ir = Sol_Ci * 1;
     var Sol_Ci_Ir_M = Sol_Ci_Ir * 1;
     var Sol_Ci_Ir_Ore = Sol_Ci_Ir * 1;        
     var Sol_Ci_Co = Sol_Ci * 0.5;
     var Sol_Ci_Co_M = Sol_Ci_Co * 1;
     var Sol_Ci_Co_Ore = Sol_Ci_Co * 1;
    // set the recipe for Accumulator
    var Ac_M = Ac * 1;
     var Ac_Ir = Ac * 6;
     var Ac_Ir_M = Ac_Ir * 1;
      var Ac_Ir_Ore = Ac_Ir * 1;
     var Ac_SiC = Ac * 6;
     var Ac_SiC_M = Ac_SiC * 0.75;
      var Ac_SiC_Ore = Ac_SiC * 0.5;
     var Ac_El = Ac * 1;
     var Ac_El_M = Ac_El *3;
     var Ac_El_Tu = Ac_El * 2;
     var Ac_El_Tu_M = Ac_El_Tu * 2;
     var Ac_El_Tu_Mo = Ac_El_Tu * 2;
     var Ac_El_Tu_Mo_M = Ac_El_Tu_Mo * 2;
      var Ac_El_Tu_Mo_Ir = Ac_El_Tu_Mo * 2;
      var Ac_El_Tu_Mo_Ir_M = Ac_El_Tu_Mo_Ir * 1;
       var Ac_El_Tu_Mo_Ir_Ore = Ac_El_Tu_Mo_Ir * 1;
      var Ac_El_Tu_Mo_Ge = Ac_El_Tu_Mo;
      var Ac_El_Tu_Mo_Ge_M = Ac_El_Tu_Mo_Ge * 1;
       var Ac_El_Tu_Mo_Ge_Ir = Ac_El_Tu_Mo_Ge *1;
       var Ac_El_Tu_Mo_Ge_Ir_M = Ac_El_Tu_Mo_Ge_Ir * 1;
        var Ac_El_Tu_Mo_Ge_Ir_Ore = Ac_El_Tu_Mo_Ge_Ir * 1;
      var Ac_El_Tu_Mo_MaC = Ac_El_Tu_Mo;
      var Ac_El_Tu_Mo_MaC_M = Ac_El_Tu_Mo_MaC * 0.5;
       var Ac_El_Tu_Mo_MaC_Ma = Ac_El_Tu_Mo_MaC * 1;
       var Ac_El_Tu_Mo_MaC_Ma_M = Ac_El_Tu_Mo_MaC_Ma * 1.5;
        var Ac_El_Tu_Mo_MaC_Ma_Ore = Ac_El_Tu_Mo_MaC_Ma * 1;
       var Ac_El_Tu_Mo_MaC_Co = Ac_El_Tu_Mo_MaC * 0.5;
       var Ac_El_Tu_Mo_MaC_Co_M = Ac_El_Tu_Mo_MaC_Co * 1;
        var Ac_El_Tu_Mo_MaC_Co_Ore = Ac_El_Tu_Mo_MaC_Co * 1;
     var Ac_El_Tu_MaC = Ac_El_Tu * 2;
     var Ac_El_Tu_MaC_M = Ac_El_Tu_MaC * 0.5;
      var Ac_El_Tu_MaC_Ma = Ac_El_Tu_MaC * 1;
      var Ac_El_Tu_MaC_Ma_M = Ac_El_Tu_MaC_Ma * 1.5;
       var Ac_El_Tu_MaC_Ma_Ore = Ac_El_Tu_MaC_Ma * 1;
      var Ac_El_Tu_MaC_Co = Ac_El_Tu_MaC * 0.5;
      var Ac_El_Tu_MaC_Co_M = Ac_El_Tu_MaC_Co * 1;
       var Ac_El_Tu_MaC_Co_Ore = Ac_El_Tu_MaC_Co * 1;
     var Ac_El_Ma = Ac_El * 3;
     var Ac_El_Ma_M = Ac_El_Ma * 1.5;
      var Ac_El_Ma_Ore = Ac_El_Ma *1;
     var Ac_El_GrR = Ac_El * 1;
     var Ac_El_GrR_M = Ac_El_GrR * 2;
      var Ac_El_GrR_Ore = Ac_El_GrR * 2;
    // set the recipe for Geothermal power station
    var Geo_M = Geo * 6;
     var Geo_St = Geo * 15;
     var Geo_St_M = Geo_St * 3;
      var Geo_St_Ir = Geo_St * 3;
     var Geo_St_Ir_M = Geo_St_Ir;
    var Geo_St_Ir_Ore = Geo_St_Ir;
     var Geo_Co = Geo * 20;
     var Geo_Co_M = Geo_Co * 1;      
     var Geo_Co_Ore = Geo_Co * 1;
      var Geo_Ph = Geo * 4;
     var Geo_Ph_M = Geo_Ph * 3;
     var Geo_Ph_Opt = Geo_Ph * 1;
     var Geo_Ph_Ci = Geo_Ph * 1;
     var Geo_Ph_Ci_M = Geo_Ph_Ci * 0.5;
     var Geo_Ph_Ci_Ir = Geo_Ph_Ci * 1;
     var Geo_Ph_Ci_Ir_M = Geo_Ph_Ci_Ir * 1;
      var Geo_Ph_Ci_Ir_Ore = Geo_Ph_Ci_Ir * 1;        
     var Geo_Ph_Ci_Co = Geo_Ph_Ci * 0.5;
     var Geo_Ph_Ci_Co_M = Geo_Ph_Ci_Co * 1;
     var Geo_Ph_Ci_Co_Ore = Geo_Ph_Ci_Co * 1;
       var Geo_El = Geo * 1;
     var Geo_El_M = Geo_El *3;
     var Geo_El_Tu = Geo_El * 2;
     var Geo_El_Tu_M = Geo_El_Tu * 2;
     var Geo_El_Tu_Mo = Geo_El_Tu * 2;
     var Geo_El_Tu_Mo_M = Geo_El_Tu_Mo * 2;
      var Geo_El_Tu_Mo_Ir = Geo_El_Tu_Mo * 2;
      var Geo_El_Tu_Mo_Ir_M = Geo_El_Tu_Mo_Ir * 1;
       var Geo_El_Tu_Mo_Ir_Ore = Geo_El_Tu_Mo_Ir * 1;
      var Geo_El_Tu_Mo_Ge = Geo_El_Tu_Mo;
      var Geo_El_Tu_Mo_Ge_M = Geo_El_Tu_Mo_Ge * 1;
       var Geo_El_Tu_Mo_Ge_Ir = Geo_El_Tu_Mo_Ge *1;
       var Geo_El_Tu_Mo_Ge_Ir_M = Geo_El_Tu_Mo_Ge_Ir * 1;
        var Geo_El_Tu_Mo_Ge_Ir_Ore = Geo_El_Tu_Mo_Ge_Ir * 1;
      var Geo_El_Tu_Mo_MaC = Geo_El_Tu_Mo;
      var Geo_El_Tu_Mo_MaC_M = Geo_El_Tu_Mo_MaC * 0.5;
       var Geo_El_Tu_Mo_MaC_Ma = Geo_El_Tu_Mo_MaC * 1;
       var Geo_El_Tu_Mo_MaC_Ma_M = Geo_El_Tu_Mo_MaC_Ma * 1.5;
        var Geo_El_Tu_Mo_MaC_Ma_Ore = Geo_El_Tu_Mo_MaC_Ma * 1;
       var Geo_El_Tu_Mo_MaC_Co = Geo_El_Tu_Mo_MaC * 0.5;
       var Geo_El_Tu_Mo_MaC_Co_M = Geo_El_Tu_Mo_MaC_Co * 1;
        var Geo_El_Tu_Mo_MaC_Co_Ore = Geo_El_Tu_Mo_MaC_Co * 1;
     var Geo_El_Tu_MaC = Geo_El_Tu * 2;
     var Geo_El_Tu_MaC_M = Geo_El_Tu_MaC * 0.5;
      var Geo_El_Tu_MaC_Ma = Geo_El_Tu_MaC * 1;
      var Geo_El_Tu_MaC_Ma_M = Geo_El_Tu_MaC_Ma * 1.5;
       var Geo_El_Tu_MaC_Ma_Ore = Geo_El_Tu_MaC_Ma * 1;
      var Geo_El_Tu_MaC_Co = Geo_El_Tu_MaC * 0.5;
      var Geo_El_Tu_MaC_Co_M = Geo_El_Tu_MaC_Co * 1;
       var Geo_El_Tu_MaC_Co_Ore = Geo_El_Tu_MaC_Co * 1;
     var Geo_El_Ma = Geo_El * 3;
     var Geo_El_Ma_M = Geo_El_Ma * 1.5;
      var Geo_El_Ma_Ore = Geo_El_Ma *1;
     var Geo_El_GrR = Geo_El * 1;
     var Geo_El_GrR_M = Geo_El_GrR * 2;
      var Geo_El_GrR_Ore = Geo_El_GrR * 2;
    // set the recipe for Mini fusion reactor
    var Mi_M = Mi * 10;
     var Mi_TiA = Mi * 12;
     var Mi_TiA_M = Mi_TiA * 3;
     var Mi_TiA_Ti = Mi_TiA;
     var Mi_TiA_Ti_M = Mi_TiA_Ti * 2;
      var Mi_TiA_Ti_Ore = Mi_TiA_Ti * 2;
     var Mi_TiA_St = Mi_TiA;
     var Mi_TiA_St_M = Mi_TiA_St * 3;
      var Mi_TiA_St_Ir = Mi_TiA_St * 3;
      var Mi_TiA_St_Ir_M = Mi_TiA_St_Ir;
       var Mi_TiA_St_Ir_Ore = Mi_TiA_St_Ir;
     var Mi_TiA_Su = Mi_TiA * 2;
     var Mi_El = Mi * 10;
     var Mi_El_M = Mi_El *3;
     var Mi_El_Tu = Mi_El * 2;
     var Mi_El_Tu_M = Mi_El_Tu * 2;
     var Mi_El_Tu_Mo = Mi_El_Tu * 2;
     var Mi_El_Tu_Mo_M = Mi_El_Tu_Mo * 2;
      var Mi_El_Tu_Mo_Ir = Mi_El_Tu_Mo * 2;
      var Mi_El_Tu_Mo_Ir_M = Mi_El_Tu_Mo_Ir * 1;
       var Mi_El_Tu_Mo_Ir_Ore = Mi_El_Tu_Mo_Ir * 1;
      var Mi_El_Tu_Mo_Ge = Mi_El_Tu_Mo;
      var Mi_El_Tu_Mo_Ge_M = Mi_El_Tu_Mo_Ge * 1;
       var Mi_El_Tu_Mo_Ge_Ir = Mi_El_Tu_Mo_Ge *1;
       var Mi_El_Tu_Mo_Ge_Ir_M = Mi_El_Tu_Mo_Ge_Ir * 1;
        var Mi_El_Tu_Mo_Ge_Ir_Ore = Mi_El_Tu_Mo_Ge_Ir * 1;
      var Mi_El_Tu_Mo_MaC = Mi_El_Tu_Mo;
      var Mi_El_Tu_Mo_MaC_M = Mi_El_Tu_Mo_MaC * 0.5;
       var Mi_El_Tu_Mo_MaC_Ma = Mi_El_Tu_Mo_MaC * 1;
       var Mi_El_Tu_Mo_MaC_Ma_M = Mi_El_Tu_Mo_MaC_Ma * 1.5;
        var Mi_El_Tu_Mo_MaC_Ma_Ore = Mi_El_Tu_Mo_MaC_Ma * 1;
       var Mi_El_Tu_Mo_MaC_Co = Mi_El_Tu_Mo_MaC * 0.5;
       var Mi_El_Tu_Mo_MaC_Co_M = Mi_El_Tu_Mo_MaC_Co * 1;
        var Mi_El_Tu_Mo_MaC_Co_Ore = Mi_El_Tu_Mo_MaC_Co * 1;
     var Mi_El_Tu_MaC = Mi_El_Tu * 2;
     var Mi_El_Tu_MaC_M = Mi_El_Tu_MaC * 0.5;
      var Mi_El_Tu_MaC_Ma = Mi_El_Tu_MaC * 1;
      var Mi_El_Tu_MaC_Ma_M = Mi_El_Tu_MaC_Ma * 1.5;
       var Mi_El_Tu_MaC_Ma_Ore = Mi_El_Tu_MaC_Ma * 1;
      var Mi_El_Tu_MaC_Co = Mi_El_Tu_MaC * 0.5;
      var Mi_El_Tu_MaC_Co_M = Mi_El_Tu_MaC_Co * 1;
       var Mi_El_Tu_MaC_Co_Ore = Mi_El_Tu_MaC_Co * 1;
     var Mi_El_Ma = Mi_El * 3;
     var Mi_El_Ma_M = Mi_El_Ma * 1.5;
      var Mi_El_Ma_Ore = Mi_El_Ma *1;
     var Mi_El_GrR = Mi_El * 1;
     var Mi_El_GrR_M = Mi_El_GrR * 2;
      var Mi_El_GrR_Ore = Mi_El_GrR * 2;
     var Mi_Ca = Mi * 8;
     var Mi_Ca_M = Mi_Ca * 2;
     var Mi_Ca_Spi = Mi_Ca * 3;
     var Mi_Pro = Mi * 4;
     var Mi_Pro_M = Mi_Pro * 3;
     var Mi_Pro_Ci = Mi_Pro * 2;
     var Mi_Pro_Ci_M = Mi_Pro_Ci * 0.5;
      var Mi_Pro_Ci_Ir = Mi_Pro_Ci * 1;
      var Mi_Pro_Ci_Ir_M = Mi_Pro_Ci_Ir * 1;
       var Mi_Pro_Ci_Ir_Ore = Mi_Pro_Ci_Ir * 1;        
      var Mi_Pro_Ci_Co = Mi_Pro_Ci * 0.5;
      var Mi_Pro_Ci_Co_M = Mi_Pro_Ci_Co * 1;
       var Mi_Pro_Ci_Co_Ore = Mi_Pro_Ci_Co * 1;
     var Mi_Pro_My = Mi_Pro * 2;
     var Mi_Pro_My_M = Mi_Pro_My * 2;
      var Mi_Pro_My_Si = Mi_Pro_My * 2;
      var Mi_Pro_My_Si_M = Mi_Pro_My_Si * 2;
       var Mi_Pro_My_Si_Ore = Mi_Pro_My_Si * 2;        
      var Mi_Pro_My_Co = Mi_Pro_My * 1;
      var Mi_Pro_My_Co_M = Mi_Pro_My_Co * 1;
       var Mi_Pro_My_Co_Ore = Mi_Pro_My_Co * 1;
    // set the recipe for Storage mk1
    var St1_M = St1 * 2;
     var St1_Ir = St1 * 4;
     var St1_Ir_M = St1_Ir * 1;
      var St1_Ir_Ore = St1_Ir * 1;
     var St1_Br = St1 * 4;
     var St1_Br_M = St1_Br * 1;
      var St1_Br_Ore = St1_Br * 1;
    // set the recipe for Storage mk2
    var St2_M = St2 * 4;
     var St2_St = St2 * 8;
     var St2_St_M = St2_St * 3;
     var St2_St_Ir = St2_St * 3;
     var St2_St_Ir_M = St2_St_Ir;
     var St2_St_Ir_Ore = St2_St_Ir;
     var St2_Br = St2 * 8;
     var St2_Br_M = St2_Br * 1;
     var St2_Br_Ore = St2_Br * 1;
    // set the recipe for Liquid storage
    var StL_M = StL * 2;
     var StL_Ir = StL * 8;
     var StL_Ir_M = StL_Ir * 1;
     var StL_Ir_Ore = StL_Ir * 1;
     var StL_Br = StL * 4;
     var StL_Br_M = StL_Br * 1;
     var StL_Br_Ore = StL_Br * 1;
     var StL_Gl = StL * 4;
     var StL_Gl_M = StL_Gl * 2;
     var StL_Gl_Ore = StL_Gl * 2;

    // Initialize the output string
    var output = "";

    //Check Power pole mk1
    if (Po1 > 0) {
      output += Po1 + " Power pole mk1 " + Po1_M + " Assemblers<br>- " + Po1_Ir + " Iron ingot " + Po1_Ir_M + " Smelters <br>-- " + Po1_Ir_Ore + " Iron ore<br>- " + Po1_MaC + " Magnetic coil " + Po1_MaC_M + " Assemblers<br>-- " + Po1_MaC_Ma + " Magnet " + Po1_MaC_Ma_M + " Smelters<br>--- " + Po1_MaC_Ma_Ore + " Iron ore<br>-- " + Po1_MaC_Co + " Copper ingot " + Po1_MaC_Co_M + " Smelters<br>--- " + Po1_MaC_Co_Ore + " Copper ore<br>" 
    }
    //Check Power pole mk2
    if (Po2 > 0) {
      output += Po2 + " Power pole mk2 " + Po2_M + " Assemblers<br>- " +  Po2_Po1 + " Power pole mk1 " +  Po2_Po1_M + " Assemblers<br>-- " +  Po2_Po1_Ir + " Iron ingot " +  Po2_Po1_Ir_M + " Smelters <br>--- " +  Po2_Po1_Ir_Ore + " Iron ore<br>-- " +  Po2_Po1_MaC + " Magnetic coil " +  Po2_Po1_MaC_M + " Assemblers<br>--- " +  Po2_Po1_MaC_Ma + " Magnet " +  Po2_Po1_MaC_Ma_M + " Smelters<br>---- " +  Po2_Po1_MaC_Ma_Ore + " Iron ore<br>--- " +  Po2_Po1_MaC_Co + " Copper ingot " +  Po2_Po1_MaC_Co_M + " Smelters<br>---- " +  Po2_Po1_MaC_Co_Ore + " Copper ore<br>- " + Po2_PlE + " Plasma exciter " + Po2_PlE_M + " Assemblers<br>-- " +Po2_PlE_Pr + " Prism " + Po2_PlE_Pr_M + " Machines<br>--- " + Po2_PlE_Pr_Gl + " Glass " + Po2_PlE_Pr_Gl_M + " Smelters<br>---- " + Po2_PlE_Pr_Gl_Ore + " Stone<br>-- " + Po2_PlE_MaC + " Magnetic coil " + Po2_PlE_MaC_M + " Assemblers<br>--- " + Po2_PlE_MaC_Ma + " Magnets " + Po2_PlE_MaC_Ma_M + " Smelters<br>---- " + Po2_PlE_MaC_Ma_Ore + " Iron ore<br>--- " + Po2_PlE_MaC_Co + " Copper ingot " + Po2_PlE_MaC_Co_M + " Smelters<br>---- " + Po2_PlE_MaC_Co_Ore + " Copper ore<br>"
    }
    //Check Power pole mk3
    if (Po3 > 0) {
      output += Po3 + " Power pole mk3 " + Po3_M + " Assemblers<br>- " + Po3_Po2 + " Power pole mk2 " + Po3_Po2_M + " Assemblers<br>-- " +  Po3_Po2_Po1 + " Power pole mk1 " +  Po3_Po2_Po1_M + " Assemblers<br>--- " +  Po3_Po2_Po1_Ir + " Iron ingot " +  Po3_Po2_Po1_Ir_M + " Smelters <br>---- " +  Po3_Po2_Po1_Ir_Ore + " Iron ore<br>--- " +  Po3_Po2_Po1_MaC + " Magnetic coil " +  Po3_Po2_Po1_MaC_M + " Assemblers<br>---- " +  Po3_Po2_Po1_MaC_Ma + " Magnet " +  Po3_Po2_Po1_MaC_Ma_M + " Smelters<br>----- " +  Po3_Po2_Po1_MaC_Ma_Ore + " Iron ore<br>---- " +  Po3_Po2_Po1_MaC_Co + " Copper ingot " +  Po3_Po2_Po1_MaC_Co_M + " Smelters<br>----- " +  Po3_Po2_Po1_MaC_Co_Ore + " Copper ore<br>-- " + Po3_Po2_PlE + " Plasma exciter " + Po3_Po2_PlE_M + " Assemblers<br>--- " +Po3_Po2_PlE_Pr + " Prism " + Po3_Po2_PlE_Pr_M + " Machines<br>---- " + Po3_Po2_PlE_Pr_Gl + " Glass " + Po3_Po2_PlE_Pr_Gl_M + " Smelters<br>----- " + Po3_Po2_PlE_Pr_Gl_Ore + " Stone<br>--- " + Po3_Po2_PlE_MaC + " Magnetic coil " + Po3_Po2_PlE_MaC_M + " Assemblers<br>---- " + Po3_Po2_PlE_MaC_Ma + " Magnets " + Po3_Po2_PlE_MaC_Ma_M + " Smelters<br>----- " + Po3_Po2_PlE_MaC_Ma_Ore + " Iron ore<br>---- " + Po3_Po2_PlE_MaC_Co + " Copper ingot " + Po3_Po2_PlE_MaC_Co_M + " Smelters<br>----- " + Po3_Po2_PlE_MaC_Co_Ore + " Copper ore<br>- " + Po3_FrM + " Frame material " + Po3_FrM_M + " Assemblers<br>-- " + Po3_FrM_TiA + " Titanium alloy " + Po3_FrM_TiA_M + " Smelter<br>--- " + Po3_FrM_TiA_Su + " Sulfuric acid<br>--- " + Po3_FrM_TiA_St + " Steel " + Po3_FrM_TiA_St_M + " Smelters<br>---- " + Po3_FrM_TiA_St_Ir + " Iron ingot " + Po3_FrM_TiA_St_Ir_M + " Smelters<br>----- " + Po3_FrM_TiA_St_Ir_Ore + " Iron ore<br>--- " + Po3_FrM_TiA_Ti + " Titanium ingot " + Po3_FrM_TiA_Ti_M + " Smelters<br>--- " + Po3_FrM_TiA_Ti_Ore + " Titanium ore<br>-- " + Po3_FrM_Si + " Sillicon ingot " + Po3_FrM_Si_M + " Smelters <br>--- " + Po3_FrM_Si_Ore + " Sillicon ore<br>-- " + Po3_FrM_Ca + " Carbon nanotube " + Po3_FrM_Ca_M + " Chemical plants<br>--- " + Po3_FrM_Ca_Spi + " Spiniform crystal<br>- " + Po3_El + " Electromagnetic coil " + Po3_El_M + " Assemblers<br>-- " + Po3_El_Ma + " Magnet " + Po3_El_Ma_M + " Smelters<br>--- " + Po3_El_Ma_Ore + " Iron ingot<br>-- " + Po3_El_GrR + " Graphene rod " + Po3_El_GrR_M + " Smelters<br>--- " + Po3_El_GrR_Ore + " Coal<br>-- " + Po3_El_Tu + " Turbine " + Po3_El_Tu_M + " Assemblers<br>--- " + Po3_El_Tu_MaC + " Magnetic coil " + Po3_El_Tu_MaC_M + " Assemblers<br>---- " + Po3_El_Tu_MaC_Co + " Copper ingot " + Po3_El_Tu_MaC_Co_M + " Smelters<br>----- " + Po3_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Po3_El_Tu_MaC_Ma + " Magnet " + Po3_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Po3_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Po3_El_Tu_Mo + " Motor " + Po3_El_Tu_Mo_M + " Assemblers<br>---- " + Po3_El_Tu_Mo_Ir + " Iron ingot " + Po3_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Po3_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Po3_El_Tu_Mo_Ge + " Gears " + Po3_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Po3_El_Tu_Mo_Ge_Ir + " Iron ingot " + Po3_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Po3_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Po3_El_Tu_Mo_MaC + " Magnetic coil " + Po3_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Po3_El_Tu_Mo_MaC_Co + " Copper ingot " + Po3_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Po3_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Po3_El_Tu_Mo_MaC_Ma + " Magnet " + Po3_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Po3_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>" 
    }
    //Check Belt mk1
    if (Be1 > 0) {
      output += Be1 + " Belt mk1 " + Be1_M + " Assemblers<br>- " + Be1_Ir + " Iron ingot " + Be1_Ir_M + " Smelters <br>-- " + Be1_Ir_Ore + " Iron ore<br>- " + Be1_Ge + " Gear " + Be1_Ge_M + " Assemblers<br>-- " + Be1_Ge_Ir + " Iron ingot " + Be1_Ge_Ir_M + " Smelters <br>--- " + Be1_Ge_Ir_Ore + " Iron ore<br>" 
    }
    //Check Belt mk2
    if (Be2 > 0) {
      output += Be2 + " Belt mk2 " + Be2_M + " Assemblers<br>- " + Be2_Be1 + " Belt mk1 " + Be2_Be1_M + " Assemblers<br>-- " + Be2_Be1_Ir + " Iron ingot " + Be2_Be1_Ir_M + " Smelters <br>--- " + Be2_Be1_Ir_Ore + " Iron ore<br>-- " + Be2_Be1_Ge + " Gear " + Be2_Be1_Ge_M + " Assemblers<br>--- " + Be2_Be1_Ge_Ir + " Iron ingot " + Be2_Be1_Ge_Ir_M + " Smelters <br>---- " + Be2_Be1_Ge_Ir_Ore + " Iron ore<br>- " + Be2_Tu + " Turbine " + Be2_Tu_M + " Assemblers<br>-- " + Be2_Tu_MaC + " Magnetic coil " + Be2_Tu_MaC_M + " Assemblers<br>--- " + Be2_Tu_MaC_Co + " Copper ingot " + Be2_Tu_MaC_Co_M + " Smelters<br>---- " + Be2_Tu_MaC_Co_Ore + " Copper ore<br>--- " + Be2_Tu_MaC_Ma + " Magnet " + Be2_Tu_MaC_Ma_M + " Smelters<br>---- " + Be2_Tu_MaC_Ma_Ore + " Iron ore<br>-- " + Be2_Tu_Mo + " Motor " + Be2_Tu_Mo_M + " Assemblers<br>--- " + Be2_Tu_Mo_Ir + " Iron ingot " + Be2_Tu_Mo_Ir_M + " Smelters<br>---- " + Be2_Tu_Mo_Ir_Ore + " Iron ore<br>--- " + Be2_Tu_Mo_Ge + " Gears " + Be2_Tu_Mo_Ge_M + " Assemblers<br>---- " + Be2_Tu_Mo_Ge_Ir + " Iron ingot " + Be2_Tu_Mo_Ge_Ir_M + " Smelters<br>----- " + Be2_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>--- " + Be2_Tu_Mo_MaC + " Magnetic coil " + Be2_Tu_Mo_MaC_M + " Assemblers<br>---- " + Be2_Tu_Mo_MaC_Co + " Copper ingot " + Be2_Tu_Mo_MaC_Co_M + " Smelters<br>----- " + Be2_Tu_Mo_MaC_Co_Ore + " Copper ore<br>---- " + Be2_Tu_Mo_MaC_Ma + " Magnet " + Be2_Tu_Mo_MaC_Ma_M + " Smelters<br>----- " + Be2_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"
    }
    //Check Belt mk3
    if (Be3 > 0) {
      output += Be3 + " Belt mk3 " + Be3_M + " Assemblers<br>- " + Be3_Be2 + " Belt mk2 " + Be3_Be2_M + " Assemblers<br>-- " + Be3_Be2_Be1 + " Belt mk1 " + Be3_Be2_Be1_M + " Assemblers<br>--- " + Be3_Be2_Be1_Ir + " Iron ingot " + Be3_Be2_Be1_Ir_M + " Smelters <br>---- " + Be3_Be2_Be1_Ir_Ore + " Iron ore<br>--- " + Be3_Be2_Be1_Ge + " Gear " + Be3_Be2_Be1_Ge_M + " Assemblers<br>---- " + Be3_Be2_Be1_Ge_Ir + " Iron ingot " + Be3_Be2_Be1_Ge_Ir_M + " Smelters <br>----- " + Be3_Be2_Be1_Ge_Ir_Ore + " Iron ore<br>-- " + Be3_Be2_Tu + " Turbine " + Be3_Be2_Tu_M + " Assemblers<br>--- " + Be3_Be2_Tu_MaC + " Magnetic coil " + Be3_Be2_Tu_MaC_M + " Assemblers<br>---- " + Be3_Be2_Tu_MaC_Co + " Copper ingot " + Be3_Be2_Tu_MaC_Co_M + " Smelters<br>----- " + Be3_Be2_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Be3_Be2_Tu_MaC_Ma + " Magnet " + Be3_Be2_Tu_MaC_Ma_M + " Smelters<br>----- " + Be3_Be2_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Be3_Be2_Tu_Mo + " Motor " + Be3_Be2_Tu_Mo_M + " Assemblers<br>---- " + Be3_Be2_Tu_Mo_Ir + " Iron ingot " + Be3_Be2_Tu_Mo_Ir_M + " Smelters<br>----- " + Be3_Be2_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Be3_Be2_Tu_Mo_Ge + " Gears " + Be3_Be2_Tu_Mo_Ge_M + " Assemblers<br>----- " + Be3_Be2_Tu_Mo_Ge_Ir + " Iron ingot " + Be3_Be2_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Be3_Be2_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Be3_Be2_Tu_Mo_MaC + " Magnetic coil " + Be3_Be2_Tu_Mo_MaC_M + " Assemblers<br>----- " + Be3_Be2_Tu_Mo_MaC_Co + " Copper ingot " + Be3_Be2_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Be3_Be2_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Be3_Be2_Tu_Mo_MaC_Ma + " Magnet " + Be3_Be2_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Be3_Be2_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Be3_El + " Electromagnetic coil " + Be3_El_M + " Assemblers<br>-- " + Be3_El_Ma + " Magnet " + Be3_El_Ma_M + " Smelters<br>--- " + Be3_El_Ma_Ore + " Iron ingot<br>-- " + Be3_El_GrR + " Graphene rod " + Be3_El_GrR_M + " Smelters<br>--- " + Be3_El_GrR_Ore + " Coal<br>-- " + Be3_El_Tu + " Turbine " + Be3_El_Tu_M + " Assemblers<br>--- " + Be3_El_Tu_MaC + " Magnetic coil " + Be3_El_Tu_MaC_M + " Assemblers<br>---- " + Be3_El_Tu_MaC_Co + " Copper ingot " + Be3_El_Tu_MaC_Co_M + " Smelters<br>----- " + Be3_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Be3_El_Tu_MaC_Ma + " Magnet " + Be3_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Be3_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Be3_El_Tu_Mo + " Motor " + Be3_El_Tu_Mo_M + " Assemblers<br>---- " + Be3_El_Tu_Mo_Ir + " Iron ingot " + Be3_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Be3_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Be3_El_Tu_Mo_Ge + " Gears " + Be3_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Be3_El_Tu_Mo_Ge_Ir + " Iron ingot " + Be3_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Be3_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Be3_El_Tu_Mo_MaC + " Magnetic coil " + Be3_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Be3_El_Tu_Mo_MaC_Co + " Copper ingot " + Be3_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Be3_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Be3_El_Tu_Mo_MaC_Ma + " Magnet " + Be3_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Be3_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Be3_Gr + " Graphene and *" + Be3_Gr_Hy + " Hydrogen " + Be3_Gr_M + " Chemical plants<br>-- " + Be3_Gr_Fi + " Fire ice<br>"
    }
    //Check Splitter
    if (Spl > 0) {
      output += Spl + " Splitter " + Spl_M + " Assemblers<br>- " + Spl_Ir + " Iron ingot " + Spl_Ir_M + " Smelters <br>-- " + Spl_Ir_Ore + " Iron ore<br>- " + Spl_Ge + " Gear " + Spl_Ge_M + " Assemblers<br>-- " + Spl_Ge_Ir + " Iron ingot" + Spl_Ge_Ir_M + " Smelters <br>--- " + Spl_Ge_Ir_Ore + " Iron ore<br>- " + Spl_Ci + " Circuit board " + Spl_Ci_M + " Assemblers<br>-- " + Spl_Ci_Ir + " Iron ingot " + Spl_Ci_Ir_M + " Smelters<br>--- " + Spl_Ci_Ir_Ore + " Iron ore <br>-- " + Spl_Ci_Co + " Copper ingot " + Spl_Ci_Co_M + " Smelters <br>--- " + Spl_Ci_Co_Ore + " Copper ore <br>" 
    }
    //Check Stacker
    if (Stc > 0) {
      output += Stc + " Stacker " + Stc_M + " Assemblers<br>- " + Stc_Ge + " Gear " + Stc_Ge_M + " Assemblers<br>-- " + Stc_Ge_Ir + " Iron ingot" + Stc_Ge_Ir_M + " Smelters <br>--- " + Stc_Ge_Ir_Ore + " Iron ore<br>- " + Stc_St + " Steel " + Stc_St_M + " Smelters <br>-- "+ Stc_St_Ir + " Iron ingot " + Stc_St_Ir_M + " Smelters <br>--- "+ Stc_St_Ir_Ore + " Iron ore<br>- " + Stc_Pro + " Processor " + Stc_Pro_M + " Assemblers<br>-- " + Stc_Pro_Ci + " Circuit board " + Stc_Pro_Ci_M + " Assemblers<br>--- " + Stc_Pro_Ci_Co + " Copper ingot " + Stc_Pro_Ci_Co_M + " Smelters<br>---- " + Stc_Pro_Ci_Co_Ore + " Copper ore<br>--- " + Stc_Pro_Ci_Ir + " Iron ingot " + Stc_Pro_Ci_Ir_M + " Smelters<br>---- " + Stc_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + Stc_Pro_My + " Mycrocrystalline component " + Stc_Pro_My_M + " Assemblers<br>--- " + Stc_Pro_My_Co + " Copper ingot " + Stc_Pro_My_Co_M + " Smelters<br>---- " + Stc_Pro_My_Co_Ore + " Copper ore<br>--- " + Stc_Pro_My_Si + " Sillicon ingot " + Stc_Pro_My_Si_M + " Smelters<br>---- " + Stc_Pro_My_Si_Ore + " Sillicon ore<br>- " + Stc_El + " Electromagnetic coil " + Stc_El_M + " Assemblers<br>-- " + Stc_El_Ma + " Magnet " + Stc_El_Ma_M + " Smelters<br>--- " + Stc_El_Ma_Ore + " Iron ingot<br>-- " + Stc_El_GrR + " Graphene rod " + Stc_El_GrR_M + " Smelters<br>--- " + Stc_El_GrR_Ore + " Coal<br>-- " + Stc_El_Tu + " Turbine " + Stc_El_Tu_M + " Assemblers<br>--- " + Stc_El_Tu_MaC + " Magnetic coil " + Stc_El_Tu_MaC_M + " Assemblers<br>---- " + Stc_El_Tu_MaC_Co + " Copper ingot " + Stc_El_Tu_MaC_Co_M + " Smelters<br>----- " + Stc_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Stc_El_Tu_MaC_Ma + " Magnet " + Stc_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Stc_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Stc_El_Tu_Mo + " Motor " + Stc_El_Tu_Mo_M + " Assemblers<br>---- " + Stc_El_Tu_Mo_Ir + " Iron ingot " + Stc_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Stc_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Stc_El_Tu_Mo_Ge + " Gears " + Stc_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Stc_El_Tu_Mo_Ge_Ir + " Iron ingot " + Stc_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Stc_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Stc_El_Tu_Mo_MaC + " Magnetic coil " + Stc_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Stc_El_Tu_Mo_MaC_Co + " Copper ingot " + Stc_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Stc_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Stc_El_Tu_Mo_MaC_Ma + " Magnet " + Stc_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Stc_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"   
    }
    //Check Spray coater
    if (Sp > 0) {
      output += Sp + " Spray coater " + Sp_M + " Assemblers<br>- " + Sp_St + " Steel " + Sp_St_M + " Smelters <br>-- "+ Sp_St_Ir + " Iron ingot " + Sp_St_Ir_M + " Smelters <br>--- "+ Sp_St_Ir_Ore + " Iron ore<br>- " + Sp_PlE + " Plasma exciter " + Sp_PlE_M + " Assemblers<br>-- " +Sp_PlE_Pr + " Prism " + Sp_PlE_Pr_M + " Machines<br>--- " + Sp_PlE_Pr_Gl + " Glass " + Sp_PlE_Pr_Gl_M + " Smelters<br>---- " + Sp_PlE_Pr_Gl_Ore + " Stone<br>-- " + Sp_PlE_MaC + " Magnetic coil " + Sp_PlE_MaC_M + " Assemblers<br>--- " + Sp_PlE_MaC_Ma + " Magnets " + Sp_PlE_MaC_Ma_M + " Smelters<br>---- " + Sp_PlE_MaC_Ma_Ore + " Iron ore<br>--- " + Sp_PlE_MaC_Co + " Copper ingot " + Sp_PlE_MaC_Co_M + " Smelters<br>---- " + Sp_PlE_MaC_Co_Ore + " Copper ore<br>- " + Sp_Ci + " Circuit board " + Sp_Ci_M + " Assemblers<br>-- " + Sp_Ci_Ir + " Iron ingot " + Sp_Ci_Ir_M + " Smelters<br>--- " + Sp_Ci_Ir_Ore + " Iron ore <br>-- " + Sp_Ci_Co + " Copper ingot " + Sp_Ci_Co_M + " Smelters <br>--- " + Sp_Ci_Co_Ore + " Copper ore <br>- " + Sp_My + " Mycrocrystalline component " + Sp_My_M + " Assemblers<br>-- " + Sp_My_Co + " Copper ingot " + Sp_My_Co_M + " Smelter<br>--- " + Sp_My_Co_Ore + " Copper ore<br>-- " + Sp_My_Si + " Sillicon ingot " + Sp_My_Si_M + " Smelters<br>--- " + Sp_My_Si_Ore + " Sillicon ore<br>" 
    }
    //Check Sorter mk1
    if (So1 > 0) {
      output += So1 + " Sorter mk1 " + So1_M + " Assemblers<br>- " + So1_Ir + " Iron ingot " + So1_Ir_M + " Smelters <br>-- " + So1_Ir_Ore + " Iron ore<br>- " + So1_Ci + " Circuit board " + So1_Ci_M + " Assemblers<br>-- " + So1_Ci_Ir + " Iron ingot " + So1_Ci_Ir_M + " Smelters<br>--- " + So1_Ci_Ir_Ore + " Iron ore <br>-- " + So1_Ci_Co + " Copper ingot " + So1_Ci_Co_M + " Smelters <br>--- " + So1_Ci_Co_Ore + " Copper ore <br>" 
    }
    //Check Sorter mk2
    if (So2 > 0) {
      output += So2 + " Sorter mk2 " + So2_M + " Assemblers<br>- " + So2_So1 + " Sorter mk1 " + So2_So1_M + " Assemblers<br>-- " + So2_So1_Ir + " Iron ingot " + So2_So1_Ir_M + " Smelters <br>--- " + So2_So1_Ir_Ore + " Iron ore<br>-- " + So2_So1_Ci + " Circuit board " + So2_So1_Ci_M + " Assemblers<br>--- " + So2_So1_Ci_Ir + " Iron ingot " + So2_So1_Ci_Ir_M + " Smelters<br>---- " + So2_So1_Ci_Ir_Ore + " Iron ore <br>--- " + So2_So1_Ci_Co + " Copper ingot " + So2_So1_Ci_Co_M + " Smelters <br>---- " + So2_So1_Ci_Co_Ore + " Copper ore <br>- " + So2_Mo + " Motor " + So2_Mo_M + " Assemblers<br>-- " + So2_Mo_Ir + " Iron ingot " + So2_Mo_Ir_M + " Smelters<br>--- " + So2_Mo_Ir_Ore + " Iron ore<br>-- " + So2_Mo_Ge + " Gears " + So2_Mo_Ge_M + " Assemblers<br>--- " + So2_Mo_Ge_Ir + " Iron ingot " + So2_Mo_Ge_Ir_M + " Smelters<br>---- " + So2_Mo_Ge_Ir_Ore + " Iron ore<br>-- " + So2_Mo_MaC + " Magnetic coil " + So2_Mo_MaC_M + " Assemblers<br>--- " + So2_Mo_MaC_Co + " Copper ingot " + So2_Mo_MaC_Co_M + " Smelters<br>---- " + So2_Mo_MaC_Co_Ore + " Copper ore<br>--- " + So2_Mo_MaC_Ma + " Magnet " + So2_Mo_MaC_Ma_M + " Smelters<br>---- " + So2_Mo_MaC_Ma_Ore + " Iron ore<br>"  
    }
    //Check Sorter mk3
    if (So3 > 0) {
      output += So3 + " Sorter mk3 " + So3_M + " Assemblers<br>- " + So3_So2 + " Sorter mk2 " + So3_So2_M + " Assemblers<br>-- " + So3_So2_So1 + " Sorter mk1 " + So3_So2_So1_M + " Assemblers<br>--- " + So3_So2_So1_Ir + " Iron ingot " + So3_So2_So1_Ir_M + " Smelters <br>---- " + So3_So2_So1_Ir_Ore + " Iron ore<br>--- " + So3_So2_So1_Ci + " Circuit board " + So3_So2_So1_Ci_M + " Assemblers<br>---- " + So3_So2_So1_Ci_Ir + " Iron ingot " + So3_So2_So1_Ci_Ir_M + " Smelters<br>----- " + So3_So2_So1_Ci_Ir_Ore + " Iron ore <br>---- " + So3_So2_So1_Ci_Co + " Copper ingot " + So3_So2_So1_Ci_Co_M + " Smelters <br>----- " + So3_So2_So1_Ci_Co_Ore + " Copper ore <br>-- " + So3_So2_Mo + " Motor " + So3_So2_Mo_M + " Assemblers<br>--- " + So3_So2_Mo_Ir + " Iron ingot " + So3_So2_Mo_Ir_M + " Smelters<br>---- " + So3_So2_Mo_Ir_Ore + " Iron ore<br>--- " + So3_So2_Mo_Ge + " Gears " + So3_So2_Mo_Ge_M + " Assemblers<br>---- " + So3_So2_Mo_Ge_Ir + " Iron ingot " + So3_So2_Mo_Ge_Ir_M + " Smelters<br>----- " + So3_So2_Mo_Ge_Ir_Ore + " Iron ore<br>--- " + So3_So2_Mo_MaC + " Magnetic coil " + So3_So2_Mo_MaC_M + " Assemblers<br>---- " + So3_So2_Mo_MaC_Co + " Copper ingot " + So3_So2_Mo_MaC_Co_M + " Smelters<br>----- " + So3_So2_Mo_MaC_Co_Ore + " Copper ore<br>---- " + So3_So2_Mo_MaC_Ma + " Magnet " + So3_So2_Mo_MaC_Ma_M + " Smelters<br>----- " + So3_So2_Mo_MaC_Ma_Ore + " Iron ore<br>- " + So3_Tu + " Turbine " + So3_Tu_M + " Assemblers<br>-- " + So3_Tu_MaC + " Magnetic coil " + So3_Tu_MaC_M + " Assemblers<br>--- " + So3_Tu_MaC_Co + " Copper ingot " + So3_Tu_MaC_Co_M + " Smelters<br>---- " + So3_Tu_MaC_Co_Ore + " Copper ore<br>--- " + So3_Tu_MaC_Ma + " Magnet " + So3_Tu_MaC_Ma_M + " Smelters<br>---- " + So3_Tu_MaC_Ma_Ore + " Iron ore<br>-- " + So3_Tu_Mo + " Motor " + So3_Tu_Mo_M + " Assemblers<br>--- " + So3_Tu_Mo_Ir + " Iron ingot " + So3_Tu_Mo_Ir_M + " Smelters<br>---- " + So3_Tu_Mo_Ir_Ore + " Iron ore<br>--- " + So3_Tu_Mo_Ge + " Gears " + So3_Tu_Mo_Ge_M + " Assemblers<br>---- " + So3_Tu_Mo_Ge_Ir + " Iron ingot " + So3_Tu_Mo_Ge_Ir_M + " Smelters<br>----- " + So3_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>--- " + So3_Tu_Mo_MaC + " Magnetic coil " + So3_Tu_Mo_MaC_M + " Assemblers<br>---- " + So3_Tu_Mo_MaC_Co + " Copper ingot " + So3_Tu_Mo_MaC_Co_M + " Smelters<br>----- " + So3_Tu_Mo_MaC_Co_Ore + " Copper ore<br>---- " + So3_Tu_Mo_MaC_Ma + " Magnet " + So3_Tu_Mo_MaC_Ma_M + " Smelters<br>----- " + So3_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"  
    }
    //Check Assembler mk1
    if (As1 > 0) {
      output += As1 + " Assembler mk1 " + As1_M + " Assemblers<br>- " + As1_Ir + " Iron ingot " + As1_Ir_M + " Smelters <br>-- " + As1_Ir_Ore + " Iron ore<br>- " + As1_Ge + " Gear " + As1_Ge_M + " Assemblers<br>-- " + As1_Ge_Ir + " Iron ingot" + As1_Ge_Ir_M + " Smelters <br>--- " + As1_Ge_Ir_Ore + " Iron ore<br>- " + As1_Ci + " Circuit board " + As1_Ci_M + " Assemblers<br>-- " + As1_Ci_Ir + " Iron ingot " + As1_Ci_Ir_M + " Smelters<br>--- " + As1_Ci_Ir_Ore + " Iron ore <br>-- " + As1_Ci_Co + " Copper ingot " + As1_Ci_Co_M + " Smelters <br>--- " + As1_Ci_Co_Ore + " Copper ore <br>" 
    }
    //Check Assembler mk2
    if (As2 > 0) {
      output += As2 + " Assembler mk2 " + As2_M + " Assemblers<br>- " + As2_As1 + " Assembler mk1 " + As2_As1_M + " Assemblers<br>-- " + As2_As1_Ir + " Iron ingot " + As2_As1_Ir_M + " Smelters <br>--- " + As2_As1_Ir_Ore + " Iron ore<br>-- " + As2_As1_Ge + " Gear " + As2_As1_Ge_M + " Assemblers<br>--- " + As2_As1_Ge_Ir + " Iron ingot" + As2_As1_Ge_Ir_M + " Smelters <br>---- " + As2_As1_Ge_Ir_Ore + " Iron ore<br>-- " + As2_As1_Ci + " Circuit board " + As2_As1_Ci_M + " Assemblers<br>--- " + As2_As1_Ci_Ir + " Iron ingot " + As2_As1_Ci_Ir_M + " Smelters<br>---- " + As2_As1_Ci_Ir_Ore + " Iron ore <br>--- " + As2_As1_Ci_Co + " Copper ingot " + As2_As1_Ci_Co_M + " Smelters <br>---- " + As2_As1_Ci_Co_Ore + " Copper ore <br>- " + As2_Gr + " Graphene and " + As2_Gr_Hy + " Hydrogen " + As2_Gr_M + " Chemical plants<br>-- " + As2_Gr_Fi + " Fire ice<br>- " + As2_Pro + " Processor " + As2_Pro_M + " Assemblers<br>-- " + As2_Pro_Ci + " Circuit board " + As2_Pro_Ci_M + " Assemblers<br>--- " + As2_Pro_Ci_Co + " Copper ingot " + As2_Pro_Ci_Co_M + " Smelters<br>---- " + As2_Pro_Ci_Co_Ore + " Copper ore<br>--- " + As2_Pro_Ci_Ir + " Iron ingot " + As2_Pro_Ci_Ir_M + " Smelters<br>---- " + As2_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + As2_Pro_My + " Mycrocrystalline component " + As2_Pro_My_M + " Assemblers<br>--- " + As2_Pro_My_Co + " Copper ingot " + As2_Pro_My_Co_M + " Smelters<br>---- " + As2_Pro_My_Co_Ore + " Copper ore<br>--- " + As2_Pro_My_Si + " Sillicon ingot " + As2_Pro_My_Si_M + " Smelters<br>---- " + As2_Pro_My_Si_Ore + " Sillicon ore<br>" 
    }
    //Check Assembler mk3
    if (As3 > 0) {
      output += As3 + " Assembler mk3 " + As3_M + " Assemblers<br>- " + As3_As2 + " Assembler mk2 " + As3_As2_M + " Assemblers<br>-- " + As3_As2_As1 + " Assembler mk1 " + As3_As2_As1_M + " Assemblers<br>--- " + As3_As2_As1_Ir + " Iron ingot " + As3_As2_As1_Ir_M + " Smelters <br>---- " + As3_As2_As1_Ir_Ore + " Iron ore<br>--- " + As3_As2_As1_Ge + " Gear " + As3_As2_As1_Ge_M + " Assemblers<br>---- " + As3_As2_As1_Ge_Ir + " Iron ingot" + As3_As2_As1_Ge_Ir_M + " Smelters <br>----- " + As3_As2_As1_Ge_Ir_Ore + " Iron ore<br>--- " + As3_As2_As1_Ci + " Circuit board " + As3_As2_As1_Ci_M + " Assemblers<br>---- " + As3_As2_As1_Ci_Ir + " Iron ingot " + As3_As2_As1_Ci_Ir_M + " Smelters<br>----- " + As3_As2_As1_Ci_Ir_Ore + " Iron ore <br>---- " + As3_As2_As1_Ci_Co + " Copper ingot " + As3_As2_As1_Ci_Co_M + " Smelters <br>----- " + As3_As2_As1_Ci_Co_Ore + " Copper ore <br>-- " + As3_As2_Gr + " Graphene and " + As3_As2_Gr_Hy + " Hydrogen " + As3_As2_Gr_M + " Chemical plants<br>--- " + As3_As2_Gr_Fi + " Fire ice<br>-- " + As3_As2_Pro + " Processor " + As3_As2_Pro_M + " Assemblers<br>--- " + As3_As2_Pro_Ci + " Circuit board " + As3_As2_Pro_Ci_M + " Assemblers<br>---- " + As3_As2_Pro_Ci_Co + " Copper ingot " + As3_As2_Pro_Ci_Co_M + " Smelters<br>----- " + As3_As2_Pro_Ci_Co_Ore + " Copper ore<br>---- " + As3_As2_Pro_Ci_Ir + " Iron ingot " + As3_As2_Pro_Ci_Ir_M + " Smelters<br>----- " + As3_As2_Pro_Ci_Ir_Ore + " Iron ore<br>--- " + As3_As2_Pro_My + " Mycrocrystalline component " + As3_As2_Pro_My_M + " Assemblers<br>---- " + As3_As2_Pro_My_Co + " Copper ingot " + As3_As2_Pro_My_Co_M + " Smelters<br>----- " + As3_As2_Pro_My_Co_Ore + " Copper ore<br>---- " + As3_As2_Pro_My_Si + " Sillicon ingot " + As3_As2_Pro_My_Si_M + " Smelters<br>----- " + As3_As2_Pro_My_Si_Ore + " Sillicon ore<br>- " + As3_Pa + " Particle broadband " + As3_Pa_M + " Assemblers<br>-- " + As3_Pa_Gr + " Graphene " + As3_Pa_Gr_M + " Chemical plants<br>*-- " + As3_Pa_Gr_Hy + " Hydrogen<br>--- " + As3_Pa_Gr_Fi + " Fire ice<br>-- " + As3_Pa_SiC + " Sillicon ingot " + As3_Pa_SiC_M + " Smelters<br>--- " + As3_Pa_SiC_Ore + " Sillicon ore<br>-- " + As3_Pa_Pl + " Plastic " + As3_Pa_Pl_M + " Refiners<br>--- " + As3_Pa_Pl_GrR + " Graphene rod " + As3_Pa_Pl_GrR_M + " Smelters<br>---- " + As3_Pa_Pl_GrR_Ore + " Coal<br>--- " + As3_Pa_Pl_LiO + " Light Oil " + As3_Pa_Pl_LiO_M + " Refiners<br>---- " + As3_Pa_Pl_LiO_Ore + " Coal<br>---- " + As3_Pa_Pl_LiO_Hy + " hydrogen<br>---- " + As3_Pa_Pl_LiO_LiO + " Light Oil " + As3_Pa_Pl_LiO_LiO_M + " Refiners<br>----- " + As3_Pa_Pl_LiO_LiO_CrO + " Crude oil<br>- " + As3_Qu + " Quantum chip " + As3_Qu_M + " Assemblers<br>-- " +  As3_Qu_PlF + " Plane filter " +  As3_Qu_PlF_M + " Assemblers<br>--- " +  As3_Qu_PlF_TiG + " Titanium glass " +  As3_Qu_PlF_TiG_M + " Assemblers<br>---- " +  As3_Qu_PlF_TiG_Wa + " Water<br>---- " +  As3_Qu_PlF_TiG_Gl + " Glass " +  As3_Qu_PlF_TiG_Gl_M + " Smelters<br>----- " +  As3_Qu_PlF_TiG_Gl_Ore + " Stone<br>---- " +  As3_Qu_PlF_TiG_Ti + " Titanium ingot " +  As3_Qu_PlF_TiG_Ti_M + " Smelters<br>---- " +  As3_Qu_PlF_TiG_Ti_Ore + " Titanium ore<br>-- " +  As3_Qu_PlF_Cas + " Casimir crystal " +  As3_Qu_PlF_Cas_M + " Assemblers<br>--- " +  As3_Qu_PlF_Cas_Opt +" Optical grading crystal<br>*---- " +  As3_Qu_PlF_Cas_Gr_Hy + " Hydrogen<br>---- " +  As3_Qu_PlF_Cas_Gr + " Graphene " +  As3_Qu_PlF_Cas_Gr_M + " Chemical plants<br>----- " +  As3_Qu_PlF_Cas_Gr_Fi + " Fire ice<br>---- " +  As3_Qu_PlF_Cas_Hy + " Hydrogen<br>-- " +  As3_Qu_Pro + " Processor " +  As3_Qu_Pro_M + " Assemblers<br>--- " +  As3_Qu_Pro_Ci + " Circuit board " +  As3_Qu_Pro_Ci_M + " Assemblers<br>---- " +  As3_Qu_Pro_Ci_Co + " Copper ingot " +  As3_Qu_Pro_Ci_Co_M + " Smelters<br>----- " +  As3_Qu_Pro_Ci_Co_Ore + " Copper ore<br>---- " +  As3_Qu_Pro_Ci_Ir + " Iron ingot " +  As3_Qu_Pro_Ci_Ir_M + " Smelters<br>----- " +  As3_Qu_Pro_Ci_Ir_Ore + " Iron ore<br>--- " +  As3_Qu_Pro_My + " Mycrocrystalline component " +  As3_Qu_Pro_My_M + " Assemblers<br>---- " +  As3_Qu_Pro_My_Co + " Copper ingot " +  As3_Qu_Pro_My_Co_M + " Smelters<br>----- " +  As3_Qu_Pro_My_Co_Ore + " Copper ore<br>---- " +  As3_Qu_Pro_My_Si + " Sillicon ingot " +  As3_Qu_Pro_My_Si_M + " Smelters<br>----- " +  As3_Qu_Pro_My_Si_Ore + " Sillicon ore<br>" 
    }
    //Check Smelter mk1
    if (Sm1 > 0) {
      output += Sm1 + " Smelter mk1 " + Sm1_M + " Assemblers<br>- " + Sm1_Ir + " Iron ingot " + Sm1_Ir_M + " Smelters <br>-- " + Sm1_Ir_Ore + " Iron ore<br>- " + Sm1_Br + " Brick " + Sm1_Br_M + " Smelters <br>-- " + Sm1_Br_Ore + " Stone<br>- " + Sm1_Ci + " Circuit board " + Sm1_Ci_M + " Assemblers<br>-- " + Sm1_Ci_Ir + " Iron ingot " + Sm1_Ci_Ir_M + " Smelters<br>--- " + Sm1_Ci_Ir_Ore + " Iron ore <br>-- " + Sm1_Ci_Co + " Copper ingot " + Sm1_Ci_Co_M + " Smelters <br>--- " + Sm1_Ci_Co_Ore + " Copper ore <br>- " + Sm1_MaC + " Magnetic coil " + Sm1_MaC_M + " Assemblers<br>-- " + Sm1_MaC_Ma + " Magnet " + Sm1_MaC_Ma_M + " Smelters<br>--- " + Sm1_MaC_Ma_Ore + " Iron ore<br>-- " + Sm1_MaC_Co + " Copper ingot " + Sm1_MaC_Co_M + " Smelters<br>--- " + Sm1_MaC_Co_Ore + " Copper ore<br>"  
    }
    //Check Smelter mk2
    if (Sm2 > 0) {
      output += Sm2 + " Smelter mk2 " + Sm2_M + " Assemblers<br>- " + Sm2_Sm1 + " Smelter mk1 " + Sm2_Sm1_M + " Assemblers<br>-- " + Sm2_Sm1_Ir + " Iron ingot " + Sm2_Sm1_Ir_M + " Smelters <br>--- " + Sm2_Sm1_Ir_Ore + " Iron ore<br>-- " + Sm2_Sm1_Br + " Brick " + Sm2_Sm1_Br_M + " Smelters <br>--- " + Sm2_Sm1_Br_Ore + " Stone<br>-- " + Sm2_Sm1_Ci + " Circuit board " + Sm2_Sm1_Ci_M + " Assemblers<br>--- " + Sm2_Sm1_Ci_Ir + " Iron ingot " + Sm2_Sm1_Ci_Ir_M + " Smelters<br>---- " + Sm2_Sm1_Ci_Ir_Ore + " Iron ore <br>--- " + Sm2_Sm1_Ci_Co + " Copper ingot " + Sm2_Sm1_Ci_Co_M + " Smelters <br>---- " + Sm2_Sm1_Ci_Co_Ore + " Copper ore <br>-- " + Sm2_Sm1_MaC + " Magnetic coil " + Sm2_Sm1_MaC_M + " Assemblers<br>--- " + Sm2_Sm1_MaC_Ma + " Magnet " + Sm2_Sm1_MaC_Ma_M + " Smelters<br>---- " + Sm2_Sm1_MaC_Ma_Ore + " Iron ore<br>--- " + Sm2_Sm1_MaC_Co + " Copper ingot " + Sm2_Sm1_MaC_Co_M + " Smelters<br>---- " + Sm2_Sm1_MaC_Co_Ore + " Copper ore<br>- " + Sm2_FrM + " Frame material " + Sm2_FrM_M + " Assemblers<br>-- " + Sm2_FrM_TiA + " Titanium alloy " + Sm2_FrM_TiA_M + " Smelter<br>--- " + Sm2_FrM_TiA_Su + " Sulfuric acid<br>--- " + Sm2_FrM_TiA_St + " Steel " + Sm2_FrM_TiA_St_M + " Smelters<br>---- " + Sm2_FrM_TiA_St_Ir + " Iron ingot " + Sm2_FrM_TiA_St_Ir_M + " Smelters<br>----- " + Sm2_FrM_TiA_St_Ir_Ore + " Iron ore<br>--- " + Sm2_FrM_TiA_Ti + " Titanium ingot " + Sm2_FrM_TiA_Ti_M + " Smelters<br>--- " + Sm2_FrM_TiA_Ti_Ore + " Titanium ore<br>-- " + Sm2_FrM_Si + " Sillicon ingot " + Sm2_FrM_Si_M + " Smelters <br>--- " + Sm2_FrM_Si_Ore + " Sillicon ore<br>-- " + Sm2_FrM_Ca + " Carbon nanotube " + Sm2_FrM_Ca_M + " Chemical plants<br>--- " + Sm2_FrM_Ca_Spi + " Spiniform crystal<br>- " + Sm2_PlF + " Plane filter " + Sm2_PlF_M + " Assemblers<br>-- " + Sm2_PlF_TiG + " Titanium glass " + Sm2_PlF_TiG_M + " Assemblers<br>--- " + Sm2_PlF_TiG_Wa + " Water<br>--- " + Sm2_PlF_TiG_Gl + " Glass " + Sm2_PlF_TiG_Gl_M + " Smelters<br>---- " + Sm2_PlF_TiG_Gl_Ore + " Stone<br>--- " + Sm2_PlF_TiG_Ti + " Titanium ingot " + Sm2_PlF_TiG_Ti_M + " Smelters<br>---- " + Sm2_PlF_TiG_Ti_Ore + " Titanium ore<br>-- " + Sm2_PlF_Cas + " Casimir crystal " + Sm2_PlF_Cas_M + " Assemblers<br>--- " + Sm2_PlF_Cas_Opt +" Optical grading crystal<br>*--- " + Sm2_PlF_Cas_Gr_Hy + " Hydrogen<br>--- " + Sm2_PlF_Cas_Gr + " Graphene " + Sm2_PlF_Cas_Gr_M + " Chemical plants<br>---- " + Sm2_PlF_Cas_Gr_Fi + " Fire ice<br>--- " + Sm2_PlF_Cas_Hy + " Hydrogen<br>- " + Sm2_Un + " Unipolar magnets<br>" 
    }
    //Check Chemical plant mk1
    if (Cp1 > 0) {
      output += Cp1 + " Chemical plant mk1 " + Cp1_M + " Assemblers<br>- " + Cp1_St + " Steel " + Cp1_St_M + " Smelters <br>-- "+ Cp1_St_Ir + " Iron ingot " + Cp1_St_Ir_M + " Smelters <br>--- "+ Cp1_St_Ir_Ore + " Iron ore<br>- " + Cp1_Br + " Brick " + Cp1_Br_M + " Smelters <br>-- " + Cp1_Br_Ore + " Stone<br>- " + Cp1_Gl + " Glass " + Cp1_Gl_M + " Smelters <br>-- " + Cp1_Gl_Ore + " Stone<br>- " + Cp1_Ci + " Circuit board " + Cp1_Ci_M + " Assemblers<br>-- " + Cp1_Ci_Ir + " Iron ingot " + Cp1_Ci_Ir_M + " Smelters<br>--- " + Cp1_Ci_Ir_Ore + " Iron ore <br>-- " + Cp1_Ci_Co + " Copper ingot " + Cp1_Ci_Co_M + " Smelters <br>--- " + Cp1_Ci_Co_Ore + " Copper ore <br>" 
    }
    //Check Chemical plant mk2
    if (Cp2 > 0) {
      output += Cp2 + " Chemical plant mk2 " + Cp2_M + " Assemblers<br>- " + Cp2_Cp1 + " Chemical plant mk1 " + Cp2_Cp1_M + " Assemblers<br>-- " + Cp2_Cp1_St + " Steel " + Cp2_Cp1_St_M + " Smelters <br>--- "+ Cp2_Cp1_St_Ir + " Iron ingot " + Cp2_Cp1_St_Ir_M + " Smelters <br>---- "+ Cp2_Cp1_St_Ir_Ore + " Iron ore<br>-- " + Cp2_Cp1_Br + " Brick " + Cp2_Cp1_Br_M + " Smelters <br>--- " + Cp2_Cp1_Br_Ore + " Stone<br>-- " + Cp2_Cp1_Gl + " Glass " + Cp2_Cp1_Gl_M + " Smelters <br>--- " + Cp2_Cp1_Gl_Ore + " Stone<br>-- " + Cp2_Cp1_Ci + " Circuit board " + Cp2_Cp1_Ci_M + " Assemblers<br>--- " + Cp2_Cp1_Ci_Ir + " Iron ingot " + Cp2_Cp1_Ci_Ir_M + " Smelters<br>---- " + Cp2_Cp1_Ci_Ir_Ore + " Iron ore <br>--- " + Cp2_Cp1_Ci_Co + " Copper ingot " + Cp2_Cp1_Ci_Co_M + " Smelters <br>---- " + Cp2_Cp1_Ci_Co_Ore + " Copper ore <br>- " + Cp2_TiG + " Titanium glass " + Cp2_TiG_M + " Assemblers<br>-- " + Cp2_TiG_Wa + " Water<br>-- " + Cp2_TiG_Gl + " Glass " + Cp2_TiG_Gl_M + " Smelters<br>--- " + Cp2_TiG_Gl_Ore + " Stone<br>-- " + Cp2_TiG_Ti + " Titanium ingot " + Cp2_TiG_Ti_M + " Smelters<br>--- " + Cp2_TiG_Ti_Ore + " Titanium ore<br>- " + Cp2_StM + " Strange matter " + Cp2_StM_M + " Particle collider<br>-- " + Cp2_StM_Ir + " Iron ingot " + Cp2_StM_Ir_M + " Smelters<br>--- " + Cp2_StM_Ir_Ore + " Iron ore<br>-- " + Cp2_StM_De + " Deuterium<br>-- " + Cp2_StM_Par + " Particle container " + Cp2_StM_Par_M + " Assemblers<br>--- " + Cp2_StM_Par_Co + " Copper ingot " + Cp2_StM_Par_Co_M + " Smelters<br>---- " + Cp2_StM_Par_Co_Ore + " Copper ore<br>--- " + Cp2_StM_Par_Gr + " Graphene " + Cp2_StM_Par_Gr_M + " Chemical plants<br>*---- " + Cp2_StM_Par_Gr_Hy + " Hydrogen<br>----- " + Cp2_StM_Par_Gr_Fi + " Fire ice<br>--- " + Cp2_StM_Par_Tu + " Turbine " + Cp2_StM_Par_Tu_M + " Assemblers<br>---- " + Cp2_StM_Par_Tu_MaC + " Magnetic coil " + Cp2_StM_Par_Tu_MaC_M + " Assemblers<br>----- " + Cp2_StM_Par_Tu_MaC_Co + " Copper ingot " + Cp2_StM_Par_Tu_MaC_Co_M + " Smelters<br>------ " + Cp2_StM_Par_Tu_MaC_Co_Ore + " Copper ore<br>----- " + Cp2_StM_Par_Tu_MaC_Ma + " Magnet " + Cp2_StM_Par_Tu_MaC_Ma_M + " Smelters<br>------ " + Cp2_StM_Par_Tu_MaC_Ma_Ore + " Iron ore<br>---- " + Cp2_StM_Par_Tu_Mo + " Motor " + Cp2_StM_Par_Tu_Mo_M + " Assemblers<br>---- " + Cp2_StM_Par_Tu_Mo_Ir + " Iron ingot " + Cp2_StM_Par_Tu_Mo_Ir_M + " Smelters<br>----- " + Cp2_StM_Par_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Cp2_StM_Par_Tu_Mo_Ge + " Gears " + Cp2_StM_Par_Tu_Mo_Ge_M + " Assemblers<br>------ " + Cp2_StM_Par_Tu_Mo_Ge_Ir + " Iron ingot " + Cp2_StM_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>------- " + Cp2_StM_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>----- " + Cp2_StM_Par_Tu_Mo_MaC + " Magnetic coil " + Cp2_StM_Par_Tu_Mo_MaC_M + " Assemblers<br>------ " + Cp2_StM_Par_Tu_Mo_MaC_Co + " Copper ingot " + Cp2_StM_Par_Tu_Mo_MaC_Co_M + " Smelters<br>------- " + Cp2_StM_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>------ " + Cp2_StM_Par_Tu_Mo_MaC_Ma + " Magnet " + Cp2_StM_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>------- " + Cp2_StM_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Cp2_Qu + " Quantum chip " + Cp2_Qu_M + " Assemblers<br>-- " +  Cp2_Qu_PlF + " Plane filter " +  Cp2_Qu_PlF_M + " Assemblers<br>--- " +  Cp2_Qu_PlF_TiG + " Titanium glass " +  Cp2_Qu_PlF_TiG_M + " Assemblers<br>---- " +  Cp2_Qu_PlF_TiG_Wa + " Water<br>---- " +  Cp2_Qu_PlF_TiG_Gl + " Glass " +  Cp2_Qu_PlF_TiG_Gl_M + " Smelters<br>----- " +  Cp2_Qu_PlF_TiG_Gl_Ore + " Stone<br>---- " +  Cp2_Qu_PlF_TiG_Ti + " Titanium ingot " +  Cp2_Qu_PlF_TiG_Ti_M + " Smelters<br>---- " +  Cp2_Qu_PlF_TiG_Ti_Ore + " Titanium ore<br>-- " +  Cp2_Qu_PlF_Cas + " Casimir crystal " +  Cp2_Qu_PlF_Cas_M + " Assemblers<br>--- " +  Cp2_Qu_PlF_Cas_Opt +" Optical grading crystal<br>*---- " +  Cp2_Qu_PlF_Cas_Gr_Hy + " Hydrogen<br>---- " +  Cp2_Qu_PlF_Cas_Gr + " Graphene " +  Cp2_Qu_PlF_Cas_Gr_M + " Chemical plants<br>----- " +  Cp2_Qu_PlF_Cas_Gr_Fi + " Fire ice<br>---- " +  Cp2_Qu_PlF_Cas_Hy + " Hydrogen<br>-- " +  Cp2_Qu_Pro + " Processor " +  Cp2_Qu_Pro_M + " Assemblers<br>--- " +  Cp2_Qu_Pro_Ci + " Circuit board " +  Cp2_Qu_Pro_Ci_M + " Assemblers<br>---- " +  Cp2_Qu_Pro_Ci_Co + " Copper ingot " +  Cp2_Qu_Pro_Ci_Co_M + " Smelters<br>----- " +  Cp2_Qu_Pro_Ci_Co_Ore + " Copper ore<br>---- " +  Cp2_Qu_Pro_Ci_Ir + " Iron ingot " +  Cp2_Qu_Pro_Ci_Ir_M + " Smelters<br>----- " +  Cp2_Qu_Pro_Ci_Ir_Ore + " Iron ore<br>--- " +  Cp2_Qu_Pro_My + " Mycrocrystalline component " +  Cp2_Qu_Pro_My_M + " Assemblers<br>---- " +  Cp2_Qu_Pro_My_Co + " Copper ingot " +  Cp2_Qu_Pro_My_Co_M + " Smelters<br>----- " +  Cp2_Qu_Pro_My_Co_Ore + " Copper ore<br>---- " +  Cp2_Qu_Pro_My_Si + " Sillicon ingot " +  Cp2_Qu_Pro_My_Si_M + " Smelters<br>----- " +  Cp2_Qu_Pro_My_Si_Ore + " Sillicon ore<br>"
    }
    //Check Fractionator
    if (Fr > 0) {
      output += Fr + " Fractionater " + Fr_M + " Assemblers<br>- " + Fr_St + " Steel " + Fr_St_M + " Smelters <br>-- "+ Fr_St_Ir + " Iron ingot " + Fr_St_Ir_M + " Smelters <br>--- "+ Fr_St_Ir_Ore + " Iron ore<br>- " + Fr_Br + " Brick " + Fr_Br_M + " Smelters <br>-- " + Fr_Br_Ore + " Stone<br>- " + Fr_Gl + " Glass " + Fr_Gl_M + " Smelters <br>-- " + Fr_Gl_Ore + " Stone<br>- " + Fr_Pro + " Processor " + Fr_Pro_M + " Assemblers<br>-- " + Fr_Pro_Ci + " Circuit board " + Fr_Pro_Ci_M + " Assemblers<br>--- " + Fr_Pro_Ci_Co + " Copper ingot " + Fr_Pro_Ci_Co_M + " Smelters<br>---- " + Fr_Pro_Ci_Co_Ore + " Copper ore<br>--- " + Fr_Pro_Ci_Ir + " Iron ingot " + Fr_Pro_Ci_Ir_M + " Smelters<br>---- " + Fr_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + Fr_Pro_My + " Mycrocrystalline component " + Fr_Pro_My_M + " Assemblers<br>--- " + Fr_Pro_My_Co + " Copper ingot " + Fr_Pro_My_Co_M + " Smelters<br>---- " + Fr_Pro_My_Co_Ore + " Copper ore<br>--- " + Fr_Pro_My_Si + " Sillicon ingot " + Fr_Pro_My_Si_M + " Smelters<br>---- " + Fr_Pro_My_Si_Ore + " Sillicon ore<br>" 
    }
    //Check Particle collider
    if (Pa > 0) {
      output += Pa + " Particle collider " + Pa_M + " Assemblers<br>- " +  Pa_TiA + " Titanium alloy " +  Pa_TiA_M + " Smelter<br>-- " +  Pa_TiA_Su + " Sulfuric acid<br>-- " +  Pa_TiA_St + " Steel " +  Pa_TiA_St_M + " Smelters<br>--- " +  Pa_TiA_St_Ir + " Iron ingot " +  Pa_TiA_St_Ir_M + " Smelters<br>---- " +  Pa_TiA_St_Ir_Ore + " Iron ore<br>-- " +  Pa_TiA_Ti + " Titanium ingot " +  Pa_TiA_Ti_M + " Smelters<br>--- " +  Pa_TiA_Ti_Ore + " Titanium ore<br>- " +  Pa_FrM + " Frame material " +  Pa_FrM_M + " Assemblers<br>-- " +  Pa_FrM_TiA + " Titanium alloy " +  Pa_FrM_TiA_M + " Smelter<br>--- " +  Pa_FrM_TiA_Su + " Sulfuric acid<br>--- " +  Pa_FrM_TiA_St + " Steel " +  Pa_FrM_TiA_St_M + " Smelters<br>---- " +  Pa_FrM_TiA_St_Ir + " Iron ingot " +  Pa_FrM_TiA_St_Ir_M + " Smelters<br>----- " +  Pa_FrM_TiA_St_Ir_Ore + " Iron ore<br>--- " +  Pa_FrM_TiA_Ti + " Titanium ingot " +  Pa_FrM_TiA_Ti_M + " Smelters<br>--- " +  Pa_FrM_TiA_Ti_Ore + " Titanium ore<br>-- " +  Pa_FrM_Si + " Sillicon ingot " +  Pa_FrM_Si_M + " Smelters <br>--- " +  Pa_FrM_Si_Ore + " Sillicon ore<br>-- " +  Pa_FrM_Ca + " Carbon nanotube " +  Pa_FrM_Ca_M + " Chemical plants<br>--- " +  Pa_FrM_Ca_Spi + " Spiniform crystal<br>- " +  Pa_El + " Electromagnetic coil " +  Pa_El_M + " Assemblers<br>-- " +  Pa_El_Ma + " Magnet " +  Pa_El_Ma_M + " Smelters<br>--- " +  Pa_El_Ma_Ore + " Iron ingot<br>-- " +  Pa_El_GrR + " Graphene rod " +  Pa_El_GrR_M + " Smelters<br>--- " +  Pa_El_GrR_Ore + " Coal<br>-- " +  Pa_El_Tu + " Turbine " +  Pa_El_Tu_M + " Assemblers<br>--- " +  Pa_El_Tu_MaC + " Magnetic coil " +  Pa_El_Tu_MaC_M + " Assemblers<br>---- " +  Pa_El_Tu_MaC_Co + " Copper ingot " +  Pa_El_Tu_MaC_Co_M + " Smelters<br>----- " +  Pa_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " +  Pa_El_Tu_MaC_Ma + " Magnet " +  Pa_El_Tu_MaC_Ma_M + " Smelters<br>----- " +  Pa_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " +  Pa_El_Tu_Mo + " Motor " +  Pa_El_Tu_Mo_M + " Assemblers<br>---- " +  Pa_El_Tu_Mo_Ir + " Iron ingot " +  Pa_El_Tu_Mo_Ir_M + " Smelters<br>----- " +  Pa_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " +  Pa_El_Tu_Mo_Ge + " Gears " +  Pa_El_Tu_Mo_Ge_M + " Assemblers<br>----- " +  Pa_El_Tu_Mo_Ge_Ir + " Iron ingot " +  Pa_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " +  Pa_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " +  Pa_El_Tu_Mo_MaC + " Magnetic coil " +  Pa_El_Tu_Mo_MaC_M + " Assemblers<br>----- " +  Pa_El_Tu_Mo_MaC_Co + " Copper ingot " +  Pa_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " +  Pa_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " +  Pa_El_Tu_Mo_MaC_Ma + " Magnet " +  Pa_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " +  Pa_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " +  Pa_Gr + " Graphene and " +  Pa_Gr_Hy + " Hydrogen " +  Pa_Gr_M + " Chemical plants<br>-- " +  Pa_Gr_Fi + " Fire ice<br>- " +  Pa_Pro + " Processor " +  Pa_Pro_M + " Assemblers<br>-- " +  Pa_Pro_Ci + " Circuit board " +  Pa_Pro_Ci_M + " Assemblers<br>--- " +  Pa_Pro_Ci_Co + " Copper ingot " +  Pa_Pro_Ci_Co_M + " Smelters<br>---- " +  Pa_Pro_Ci_Co_Ore + " Copper ore<br>--- " +  Pa_Pro_Ci_Ir + " Iron ingot " +  Pa_Pro_Ci_Ir_M + " Smelters<br>---- " +  Pa_Pro_Ci_Ir_Ore + " Iron ore<br>-- " +  Pa_Pro_My + " Mycrocrystalline component " +  Pa_Pro_My_M + " Assemblers<br>--- " +  Pa_Pro_My_Co + " Copper ingot " +  Pa_Pro_My_Co_M + " Smelters<br>---- " +  Pa_Pro_My_Co_Ore + " Copper ore<br>--- " +  Pa_Pro_My_Si + " Sillicon ingot " +  Pa_Pro_My_Si_M + " Smelters<br>---- " +  Pa_Pro_My_Si_Ore + " Sillicon ore<br>" 
    }
    //Check Matrix lab
    if (MaX > 0) {
      output += MaX + " Matrix lab " + MaX_M + " Assemblers<br>- " + MaX_Ir + " Iron ingot " + MaX_Ir_M + " Smelters <br>-- " + MaX_Ir_Ore + " Iron ore<br>- " 
      + MaX_Gl + " Glass " + MaX_Gl_M + " Smelters <br>-- " + MaX_Gl_Ore + " Stone<br>- " + MaX_Ci + " Circuit board " + MaX_Ci_M + " Assemblers<br>-- " + MaX_Ci_Ir + " Iron ingot " + MaX_Ci_Ir_M + " Smelters<br>--- " + MaX_Ci_Ir_Ore + " Iron ore <br>-- " + MaX_Ci_Co + " Copper ingot " + MaX_Ci_Co_M + " Smelters <br>--- " + MaX_Ci_Co_Ore + " Copper ore <br>- " + MaX_MaC + " Magnetic coil " + MaX_MaC_M + " Assemblers<br>-- " + MaX_MaC_Ma + " Magnet " + MaX_MaC_Ma_M + " Smelters<br>--- " + MaX_MaC_Ma_Ore + " Iron ore<br>-- " + MaX_MaC_Co + " Copper ingot " + MaX_MaC_Co_M + " Smelters<br>--- " + MaX_MaC_Co_Ore + " Copper ore<br>" 
    }
    //Check Miner mk1
    if (Mi1 > 0) {
      output += Mi1 + " Miner mk1 " + Mi1_M + " Assemblers<br>- " + Mi1_Ir + " Iron ingot " + Mi1_Ir_M + " Smelters <br>-- " + Mi1_Ir_Ore + " Iron ore<br>- " + Mi1_Ci + " Circuit board " + Mi1_Ci_M + " Assemblers<br>-- " + Mi1_Ci_Ir + " Iron ingot " + Mi1_Ci_Ir_M + " Smelters<br>--- " + Mi1_Ci_Ir_Ore + " Iron ore <br>-- " + Mi1_Ci_Co + " Copper ingot " + Mi1_Ci_Co_M + " Smelters <br>--- " + Mi1_Ci_Co_Ore + " Copper ore <br>- " + Mi1_MaC + " Magnetic coil " + Mi1_MaC_M + " Assemblers<br>-- " + Mi1_MaC_Ma + " Magnet " + Mi1_MaC_Ma_M + " Smelters<br>--- " + Mi1_MaC_Ma_Ore + " Iron ore<br>-- " + Mi1_MaC_Co + " Copper ingot " + Mi1_MaC_Co_M + " Smelters<br>--- " + Mi1_MaC_Co_Ore + " Copper ore<br>- " + Mi1_Ge + " Gear " + Mi1_Ge_M + " Assemblers<br>-- " + Mi1_Ge_Ir + " Iron ingot" + Mi1_Ge_Ir_M + " Smelters <br>--- " + Mi1_Ge_Ir_Ore + " Iron ore<br>" 
    }
    //Check Miner mk2
    if (Mi2 > 0) {
      output += Mi2 + " Minder mk2 " + Mi2_M + " Assemblers<br>-- " + Mi2_TiA + " Titanium alloy " + Mi2_TiA_M + " Smelter<br>-- " + Mi2_TiA_Su + " Sulfuric acid<br>-- " + Mi2_TiA_St + " Steel " + Mi2_TiA_St_M + " Smelters<br>--- " + Mi2_TiA_St_Ir + " Iron ingot " + Mi2_TiA_St_Ir_M + " Smelters<br>---- " + Mi2_TiA_St_Ir_Ore + " Iron ore<br>-- " + Mi2_TiA_Ti + " Titanium ingot " + Mi2_TiA_Ti_M + " Smelters<br>--- " + Mi2_TiA_Ti_Ore + " Titanium ore<br>- " + Mi2_FrM + " Frame material " + Mi2_FrM_M + " Assemblers<br>-- " + Mi2_FrM_TiA + " Titanium alloy " + Mi2_FrM_TiA_M + " Smelter<br>--- " + Mi2_FrM_TiA_Su + " Sulfuric acid<br>--- " + Mi2_FrM_TiA_St + " Steel " + Mi2_FrM_TiA_St_M + " Smelters<br>---- " + Mi2_FrM_TiA_St_Ir + " Iron ingot " + Mi2_FrM_TiA_St_Ir_M + " Smelters<br>----- " + Mi2_FrM_TiA_St_Ir_Ore + " Iron ore<br>--- " + Mi2_FrM_TiA_Ti + " Titanium ingot " + Mi2_FrM_TiA_Ti_M + " Smelters<br>--- " + Mi2_FrM_TiA_Ti_Ore + " Titanium ore<br>-- " + Mi2_FrM_Si + " Sillicon ingot " + Mi2_FrM_Si_M + " Smelters <br>--- " + Mi2_FrM_Si_Ore + " Sillicon ore<br>-- " + Mi2_FrM_Ca + " Carbon nanotube " + Mi2_FrM_Ca_M + " Chemical plants<br>--- " + Mi2_FrM_Ca_Spi + " Spiniform crystal<br>- " + Mi2_El + " Electromagnetic coil " + Mi2_El_M + " Assemblers<br>-- " + Mi2_El_Ma + " Magnet " + Mi2_El_Ma_M + " Smelters<br>--- " + Mi2_El_Ma_Ore + " Iron ingot<br>-- " + Mi2_El_GrR + " Graphene rod " + Mi2_El_GrR_M + " Smelters<br>--- " + Mi2_El_GrR_Ore + " Coal<br>-- " + Mi2_El_Tu + " Turbine " + Mi2_El_Tu_M + " Assemblers<br>--- " + Mi2_El_Tu_MaC + " Magnetic coil " + Mi2_El_Tu_MaC_M + " Assemblers<br>---- " + Mi2_El_Tu_MaC_Co + " Copper ingot " + Mi2_El_Tu_MaC_Co_M + " Smelters<br>----- " + Mi2_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Mi2_El_Tu_MaC_Ma + " Magnet " + Mi2_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Mi2_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Mi2_El_Tu_Mo + " Motor " + Mi2_El_Tu_Mo_M + " Assemblers<br>---- " + Mi2_El_Tu_Mo_Ir + " Iron ingot " + Mi2_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Mi2_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Mi2_El_Tu_Mo_Ge + " Gears " + Mi2_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Mi2_El_Tu_Mo_Ge_Ir + " Iron ingot " + Mi2_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Mi2_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Mi2_El_Tu_Mo_MaC + " Magnetic coil " + Mi2_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Mi2_El_Tu_Mo_MaC_Co + " Copper ingot " + Mi2_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Mi2_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Mi2_El_Tu_Mo_MaC_Ma + " Magnet " + Mi2_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Mi2_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Mi2_Qu + " Quantum chip " + Mi2_Qu_M + " Assemblers<br>-- " +  Mi2_Qu_PlF + " Plane filter " +  Mi2_Qu_PlF_M + " Assemblers<br>--- " +  Mi2_Qu_PlF_TiG + " Titanium glass " +  Mi2_Qu_PlF_TiG_M + " Assemblers<br>---- " +  Mi2_Qu_PlF_TiG_Wa + " Water<br>---- " +  Mi2_Qu_PlF_TiG_Gl + " Glass " +  Mi2_Qu_PlF_TiG_Gl_M + " Smelters<br>----- " +  Mi2_Qu_PlF_TiG_Gl_Ore + " Stone<br>---- " +  Mi2_Qu_PlF_TiG_Ti + " Titanium ingot " +  Mi2_Qu_PlF_TiG_Ti_M + " Smelters<br>---- " +  Mi2_Qu_PlF_TiG_Ti_Ore + " Titanium ore<br>-- " +  Mi2_Qu_PlF_Cas + " Casimir crystal " +  Mi2_Qu_PlF_Cas_M + " Assemblers<br>--- " +  Mi2_Qu_PlF_Cas_Opt +" Optical grading crystal<br>*---- " +  Mi2_Qu_PlF_Cas_Gr_Hy + " Hydrogen<br>---- " +  Mi2_Qu_PlF_Cas_Gr + " Graphene " +  Mi2_Qu_PlF_Cas_Gr_M + " Chemical plants<br>----- " +  Mi2_Qu_PlF_Cas_Gr_Fi + " Fire ice<br>---- " +  Mi2_Qu_PlF_Cas_Hy + " Hydrogen<br>-- " +  Mi2_Qu_Pro + " Processor " +  Mi2_Qu_Pro_M + " Assemblers<br>--- " +  Mi2_Qu_Pro_Ci + " Circuit board " +  Mi2_Qu_Pro_Ci_M + " Assemblers<br>---- " +  Mi2_Qu_Pro_Ci_Co + " Copper ingot " +  Mi2_Qu_Pro_Ci_Co_M + " Smelters<br>----- " +  Mi2_Qu_Pro_Ci_Co_Ore + " Copper ore<br>---- " +  Mi2_Qu_Pro_Ci_Ir + " Iron ingot " +  Mi2_Qu_Pro_Ci_Ir_M + " Smelters<br>----- " +  Mi2_Qu_Pro_Ci_Ir_Ore + " Iron ore<br>--- " +  Mi2_Qu_Pro_My + " Mycrocrystalline component " +  Mi2_Qu_Pro_My_M + " Assemblers<br>---- " +  Mi2_Qu_Pro_My_Co + " Copper ingot " +  Mi2_Qu_Pro_My_Co_M + " Smelters<br>----- " +  Mi2_Qu_Pro_My_Co_Ore + " Copper ore<br>---- " +  Mi2_Qu_Pro_My_Si + " Sillicon ingot " +  Mi2_Qu_Pro_My_Si_M + " Smelters<br>----- " +  Mi2_Qu_Pro_My_Si_Ore + " Sillicon ore<br>- " + Mi2_Opt + " Optical grading crystal<br>"
    }
    //Check Pump
    if (Pu > 0) {
      output += Pu + " Pump " + Pu_M + " Assemblers<br>- " + Pu_Ir + " Iron ingot " + Pu_Ir_M + " Smelters <br>-- " + Pu_Ir_Ore + " Iron ore<br>- " + Pu_Br + " Brick " + Pu_Br_M + " Smelters <br>-- " + Pu_Br_Ore + " Stone<br>- " + Pu_Mo + " Motor " + Pu_Mo_M + " Assemblers<br>-- " + Pu_Mo_Ir + " Iron ingot " + Pu_Mo_Ir_M + " Smelters<br>--- " + Pu_Mo_Ir_Ore + " Iron ore<br>-- " + Pu_Mo_Ge + " Gears " + Pu_Mo_Ge_M + " Assemblers<br>--- " + Pu_Mo_Ge_Ir + " Iron ingot " + Pu_Mo_Ge_Ir_M + " Smelters<br>---- " + Pu_Mo_Ge_Ir_Ore + " Iron ore<br>-- " + Pu_Mo_MaC + " Magnetic coil " + Pu_Mo_MaC_M + " Assemblers<br>--- " + Pu_Mo_MaC_Co + " Copper ingot " + Pu_Mo_MaC_Co_M + " Smelters<br>---- " + Pu_Mo_MaC_Co_Ore + " Copper ore<br>--- " + Pu_Mo_MaC_Ma + " Magnet " + Pu_Mo_MaC_Ma_M + " Smelters<br>---- " + Pu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Pu_Ci + " Circuit board " + Pu_Ci_M + " Assemblers<br>-- " + Pu_Ci_Ir + " Iron ingot " + Pu_Ci_Ir_M + " Smelters<br>--- " + Pu_Ci_Ir_Ore + " Iron ore <br>-- " + Pu_Ci_Co + " Copper ingot " + Pu_Ci_Co_M + " Smelters <br>--- " + Pu_Ci_Co_Ore + " Copper ore <br>" 
    }
    //Check Oil extracter
    if (OiE > 0) {
      output += OiE + " Oil extracter " + OiE_M + " Assemblers<br>- " + OiE_St + " Steel " + OiE_St_M + " Smelters <br>-- "+ OiE_St_Ir + " Iron ingot " + OiE_St_Ir_M + " Smelters <br>--- "+ OiE_St_Ir_Ore + " Iron ore<br>- " + OiE_Br + " Brick " + OiE_Br_M + " Smelters <br>-- " + OiE_Br_Ore + " Stone<br>- " + OiE_Ci + " Circuit board " + OiE_Ci_M + " Assemblers<br>-- " + OiE_Ci_Ir + " Iron ingot " + OiE_Ci_Ir_M + " Smelters<br>--- " + OiE_Ci_Ir_Ore + " Iron ore <br>-- " + OiE_Ci_Co + " Copper ingot " + OiE_Ci_Co_M + " Smelters <br>--- " + OiE_Ci_Co_Ore + " Copper ore <br>- " + OiE_PlE + " Plasma exciter " + OiE_PlE_M + " Assemblers<br>-- " +OiE_PlE_Pr + " Prism " + OiE_PlE_Pr_M + " Machines<br>--- " + OiE_PlE_Pr_Gl + " Glass " + OiE_PlE_Pr_Gl_M + " Smelters<br>---- " + OiE_PlE_Pr_Gl_Ore + " Stone<br>-- " + OiE_PlE_MaC + " Magnetic coil " + OiE_PlE_MaC_M + " Assemblers<br>--- " + OiE_PlE_MaC_Ma + " Magnets " + OiE_PlE_MaC_Ma_M + " Smelters<br>---- " + OiE_PlE_MaC_Ma_Ore + " Iron ore<br>--- " + OiE_PlE_MaC_Co + " Copper ingot " + OiE_PlE_MaC_Co_M + " Smelters<br>---- " + OiE_PlE_MaC_Co_Ore + " Copper ore<br>"
    }
    //Check Oil refiner
    if (OiR > 0) {
      output += OiR + " Oil refiner " + OiR_M + " Assemblers<br>- " + OiR_St + " Steel " + OiR_St_M + " Smelters <br>-- "+ OiR_St_Ir + " Iron ingot " + OiR_St_Ir_M + " Smelters <br>--- "+ OiR_St_Ir_Ore + " Iron ore<br>- " + OiR_Br + " Brick " + OiR_Br_M + " Smelters <br>-- " + OiR_Br_Ore + " Stone<br>- " + OiR_Ci + " Circuit board " + OiR_Ci_M + " Assemblers<br>-- " + OiR_Ci_Ir + " Iron ingot " + OiR_Ci_Ir_M + " Smelters<br>--- " + OiR_Ci_Ir_Ore + " Iron ore <br>-- " + OiR_Ci_Co + " Copper ingot " + OiR_Ci_Co_M + " Smelters <br>--- " + OiR_Ci_Co_Ore + " Copper ore <br>- " + OiR_PlE + " Plasma exciter " + OiR_PlE_M + " Assemblers<br>-- " +OiR_PlE_Pr + " Prism " + OiR_PlE_Pr_M + " Machines<br>--- " + OiR_PlE_Pr_Gl + " Glass " + OiR_PlE_Pr_Gl_M + " Smelters<br>---- " + OiR_PlE_Pr_Gl_Ore + " Stone<br>-- " + OiR_PlE_MaC + " Magnetic coil " + OiR_PlE_MaC_M + " Assemblers<br>--- " + OiR_PlE_MaC_Ma + " Magnets " + OiR_PlE_MaC_Ma_M + " Smelters<br>---- " + OiR_PlE_MaC_Ma_Ore + " Iron ore<br>--- " + OiR_PlE_MaC_Co + " Copper ingot " + OiR_PlE_MaC_Co_M + " Smelters<br>---- " + OiR_PlE_MaC_Co_Ore + " Copper ore<br>"
    }
    //Check Exchanger
    if (Ex > 0) {
      output += Ex + " Exchanger " + Ex_M + " Assemblers<br>- " + Ex_TiA + " Titanium alloy " + Ex_TiA_M + " Smelter<br>-- " + Ex_TiA_Su + " Sulfuric acid<br>-- " + Ex_TiA_St + " Steel " + Ex_TiA_St_M + " Smelters<br>--- " + Ex_TiA_St_Ir + " Iron ingot " + Ex_TiA_St_Ir_M + " Smelters<br>---- " + Ex_TiA_St_Ir_Ore + " Iron ore<br>-- " + Ex_TiA_Ti + " Titanium ingot " + Ex_TiA_Ti_M + " Smelters<br>--- " + Ex_TiA_Ti_Ore + " Titanium ore<br>- " + Ex_St + " Steel " + Ex_St_M + " Smelters <br>-- "+ Ex_St_Ir + " Iron ingot " + Ex_St_Ir_M + " Smelters <br>--- "+ Ex_St_Ir_Ore + " Iron ore<br>- " + Ex_Pro + " Processor " + Ex_Pro_M + " Assemblers<br>-- " + Ex_Pro_Ci + " Circuit board " + Ex_Pro_Ci_M + " Assemblers<br>--- " + Ex_Pro_Ci_Co + " Copper ingot " + Ex_Pro_Ci_Co_M + " Smelters<br>---- " + Ex_Pro_Ci_Co_Ore + " Copper ore<br>--- " + Ex_Pro_Ci_Ir + " Iron ingot " + Ex_Pro_Ci_Ir_M + " Smelters<br>---- " + Ex_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + Ex_Pro_My + " Mycrocrystalline component " + Ex_Pro_My_M + " Assemblers<br>--- " + Ex_Pro_My_Co + " Copper ingot " + Ex_Pro_My_Co_M + " Smelters<br>---- " + Ex_Pro_My_Co_Ore + " Copper ore<br>--- " + Ex_Pro_My_Si + " Sillicon ingot " + Ex_Pro_My_Si_M + " Smelters<br>---- " + Ex_Pro_My_Si_Ore + " Sillicon ore<br>- " + Ex_Par + " Particle container " + Ex_Par_M + " Assemblers<br>-- " + Ex_Par_Co + " Copper ingot " + Ex_Par_Co_M + " Smelters<br>--- " + Ex_Par_Co_Ore + " Copper ore<br>-- " + Ex_Par_Gr + " Graphene " + Ex_Par_Gr_M + " Chemical plants<br>*--- " + Ex_Par_Gr_Hy + " Hydrogen<br>---- " + Ex_Par_Gr_Fi + " Fire ice<br>-- " + Ex_Par_Tu + " Turbine " + Ex_Par_Tu_M + " Assemblers<br>--- " + Ex_Par_Tu_MaC + " Magnetic coil " + Ex_Par_Tu_MaC_M + " Assemblers<br>---- " + Ex_Par_Tu_MaC_Co + " Copper ingot " + Ex_Par_Tu_MaC_Co_M + " Smelters<br>----- " + Ex_Par_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Ex_Par_Tu_MaC_Ma + " Magnet " + Ex_Par_Tu_MaC_Ma_M + " Smelters<br>----- " + Ex_Par_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Ex_Par_Tu_Mo + " Motor " + Ex_Par_Tu_Mo_M + " Assemblers<br>--- " + Ex_Par_Tu_Mo_Ir + " Iron ingot " + Ex_Par_Tu_Mo_Ir_M + " Smelters<br>---- " + Ex_Par_Tu_Mo_Ir_Ore + " Iron ore<br>--- " + Ex_Par_Tu_Mo_Ge + " Gears " + Ex_Par_Tu_Mo_Ge_M + " Assemblers<br>----- " + Ex_Par_Tu_Mo_Ge_Ir + " Iron ingot " + Ex_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Ex_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Ex_Par_Tu_Mo_MaC + " Magnetic coil " + Ex_Par_Tu_Mo_MaC_M + " Assemblers<br>----- " + Ex_Par_Tu_Mo_MaC_Co + " Copper ingot " + Ex_Par_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Ex_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Ex_Par_Tu_Mo_MaC_Ma + " Magnet " + Ex_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Ex_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>" 
    }
   
    //Check Ray reciever
    if (Ra > 0) {
      output += Ra + " Ray reciever " + Ra_M + " Assemblers<br>- " + Ra_St + " Steel " + Ra_St_M + " Smelters <br>-- "+ Ra_St_Ir + " Iron ingot " + Ra_St_Ir_M + " Smelters <br>--- "+ Ra_St_Ir_Ore + " Iron ore<br>- " + Ra_Si + " Sillicon ingot " + Ra_Si_M + " Smelters <br>-- " + Ra_Si_Ore + " Sillicon ore<br>- " + Ra_Ph + " Photon combiner " + Ra_Ph_M + " Assemblers<br>-- " + Ra_Ph_Opt + " Optical grading crystal<br>-- " + Ra_Ph_Ci + " Circuit board " + Ra_Ph_Ci_M + " Assemblers<br>--- " + Ra_Ph_Ci_Co + " Copper ingot " + Ra_Ph_Ci_Co_M + " Smelters<br>---- " + Ra_Ph_Ci_Co_Ore + " Copper ore<br>--- " + Ra_Ph_Ci_Ir + " Iron ingot " + Ra_Ph_Ci_Ir_M + " Smelting<br>---- "+ Ra_Ph_Ci_Ir_Ore + " Iron ore<br>- " + Ra_Pro + " Processor " + Ra_Pro_M + " Assemblers<br>-- " + Ra_Pro_Ci + " Circuit board " + Ra_Pro_Ci_M + " Assemblers<br>--- " + Ra_Pro_Ci_Co + " Copper ingot " + Ra_Pro_Ci_Co_M + " Smelters<br>---- " + Ra_Pro_Ci_Co_Ore + " Copper ore<br>--- " + Ra_Pro_Ci_Ir + " Iron ingot " + Ra_Pro_Ci_Ir_M + " Smelters<br>---- " + Ra_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + Ra_Pro_My + " Mycrocrystalline component " + Ra_Pro_My_M + " Assemblers<br>--- " + Ra_Pro_My_Co + " Copper ingot " + Ra_Pro_My_Co_M + " Smelters<br>---- " + Ra_Pro_My_Co_Ore + " Copper ore<br>--- " + Ra_Pro_My_Si + " Sillicon ingot " + Ra_Pro_My_Si_M + " Smelters<br>---- " + Ra_Pro_My_Si_Ore + " Sillicon ore<br>- " + Ra_El + " Electromagnetic coil " + Ra_El_M + " Assemblers<br>-- " + Ra_El_Ma + " Magnet " + Ra_El_Ma_M + " SmRa_Elters<br>--- " + Ra_El_Ma_Ore + " Iron ingot<br>-- " + Ra_El_GrR + " Graphene rod " + Ra_El_GrR_M + " SmRa_Elters<br>--- " + Ra_El_GrR_Ore + " Coal<br>-- " + Ra_El_Tu + " Turbine " + Ra_El_Tu_M + " Assemblers<br>--- " + Ra_El_Tu_MaC + " Magnetic coil " + Ra_El_Tu_MaC_M + " Assemblers<br>---- " + Ra_El_Tu_MaC_Co + " Copper ingot " + Ra_El_Tu_MaC_Co_M + " Smelters<br>----- " + Ra_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Ra_El_Tu_MaC_Ma + " Magnet " + Ra_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Ra_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Ra_El_Tu_Mo + " Motor " + Ra_El_Tu_Mo_M + " Assemblers<br>---- " + Ra_El_Tu_Mo_Ir + " Iron ingot " + Ra_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Ra_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Ra_El_Tu_Mo_Ge + " Gears " + Ra_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Ra_El_Tu_Mo_Ge_Ir + " Iron ingot " + Ra_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Ra_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Ra_El_Tu_Mo_MaC + " Magnetic coil " + Ra_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Ra_El_Tu_Mo_MaC_Co + " Copper ingot " + Ra_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Ra_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Ra_El_Tu_Mo_MaC_Ma + " Magnet " + Ra_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Ra_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"  
    }
    //Check Rail gun
    if (Rai > 0) {
      output += Rai + " Rail gun " + Rai_M + " Assemblers<br>- " + Rai_St + " Steel " + Rai_St_M + " Smelters <br>-- "+ Rai_St_Ir + " Iron ingot " + Rai_St_Ir_M + " Smelters <br>--- "+ Rai_St_Ir_Ore + " Iron ore<br>- " + Rai_Ge + " Gear " + Rai_Ge_M + " Assemblers<br>-- " + Rai_Ge_Ir + " Iron ingot" + Rai_Ge_Ir_M + " Smelters <br>--- " + Rai_Ge_Ir_Ore + " Iron ore<br>- " + Rai_Pro + " Processor " + Rai_Pro_M + " Assemblers<br>-- " + Rai_Pro_Ci + " Circuit board " + Rai_Pro_Ci_M + " Assemblers<br>--- " + Rai_Pro_Ci_Co + " Copper ingot " + Rai_Pro_Ci_Co_M + " Smelters<br>---- " + Rai_Pro_Ci_Co_Ore + " Copper ore<br>--- " + Rai_Pro_Ci_Ir + " Iron ingot " + Rai_Pro_Ci_Ir_M + " Smelters<br>---- " + Rai_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + Rai_Pro_My + " Mycrocrystalline component " + Rai_Pro_My_M + " Assemblers<br>--- " + Rai_Pro_My_Co + " Copper ingot " + Rai_Pro_My_Co_M + " Smelters<br>---- " + Rai_Pro_My_Co_Ore + " Copper ore<br>--- " + Rai_Pro_My_Si + " Sillicon ingot " + Rai_Pro_My_Si_M + " Smelters<br>---- " + Rai_Pro_My_Si_Ore + " Sillicon ore<br>- " + Rai_El + " Electromagnetic coil " + Rai_El_M + " Assemblers<br>-- " + Rai_El_Ma + " Magnet " + Rai_El_Ma_M + " Smelters<br>--- " + Rai_El_Ma_Ore + " Iron ingot<br>-- " + Rai_El_GrR + " Graphene rod " + Rai_El_GrR_M + " Smelters<br>--- " + Rai_El_GrR_Ore + " Coal<br>-- " + Rai_El_Tu + " Turbine " + Rai_El_Tu_M + " Assemblers<br>--- " + Rai_El_Tu_MaC + " Magnetic coil " + Rai_El_Tu_MaC_M + " Assemblers<br>---- " + Rai_El_Tu_MaC_Co + " Copper ingot " + Rai_El_Tu_MaC_Co_M + " Smelters<br>----- " + Rai_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Rai_El_Tu_MaC_Ma + " Magnet " + Rai_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Rai_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Rai_El_Tu_Mo + " Motor " + Rai_El_Tu_Mo_M + " Assemblers<br>---- " + Rai_El_Tu_Mo_Ir + " Iron ingot " + Rai_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Rai_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Rai_El_Tu_Mo_Ge + " Gears " + Rai_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Rai_El_Tu_Mo_Ge_Ir + " Iron ingot " + Rai_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Rai_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Rai_El_Tu_Mo_MaC + " Magnetic coil " + Rai_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Rai_El_Tu_Mo_MaC_Co + " Copper ingot " + Rai_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Rai_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Rai_El_Tu_Mo_MaC_Ma + " Magnet " + Rai_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Rai_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"  
    }
    //Check Vertical launch silo
    if (Ve > 0) {
      output += Ve + " Verticle launch silo " + Ve_M + " Assemblers<br>- " + Ve_TiA + " Titanium alloy " + Ve_TiA_M + " Smelter<br>-- " + Ve_TiA_Su + " Sulfuric acid<br>-- " + Ve_TiA_St + " Steel " + Ve_TiA_St_M + " Smelters<br>--- " + Ve_TiA_St_Ir + " Iron ingot " + Ve_TiA_St_Ir_M + " Smelters<br>---- " + Ve_TiA_St_Ir_Ore + " Iron ore<br>-- " + Ve_TiA_Ti + " Titanium ingot " + Ve_TiA_Ti_M + " Smelters<br>--- " + Ve_TiA_Ti_Ore + " Titanium ore<br>- " + Ve_FrM + " Frame material " + Ve_FrM_M + " Assemblers<br>-- " + Ve_FrM_TiA + " Titanium alloy " + Ve_FrM_TiA_M + " Smelter<br>--- " + Ve_FrM_TiA_Su + " Sulfuric acid<br>--- " + Ve_FrM_TiA_St + " Steel " + Ve_FrM_TiA_St_M + " Smelters<br>---- " + Ve_FrM_TiA_St_Ir + " Iron ingot " + Ve_FrM_TiA_St_Ir_M + " Smelters<br>----- " + Ve_FrM_TiA_St_Ir_Ore + " Iron ore<br>--- " + Ve_FrM_TiA_Ti + " Titanium ingot " + Ve_FrM_TiA_Ti_M + " Smelters<br>--- " + Ve_FrM_TiA_Ti_Ore + " Titanium ore<br>-- " + Ve_FrM_Si + " Sillicon ingot " + Ve_FrM_Si_M + " Smelters <br>--- " + Ve_FrM_Si_Ore + " Sillicon ore<br>-- " + Ve_FrM_Ca + " Carbon nanotube " + Ve_FrM_Ca_M + " Chemical plants<br>--- " + Ve_FrM_Ca_Spi + " Spiniform crystal<br>- " + Ve_GrL + " Gravity lens " + Ve_GrL_M + " Assemblers<br>-- " + Ve_GrL_StM + " Strange matter " + Ve_GrL_StM_M + " Particle collider<br>--- " + Ve_GrL_StM_Ir + " Iron ingot " + Ve_GrL_StM_Ir_M + " Smelters<br>---- " + Ve_GrL_StM_Ir_Ore + " Iron ore<br>--- " + Ve_GrL_StM_De + " Deuterium<br>--- " + Ve_GrL_StM_Par + " Particle container " + Ve_GrL_StM_Par_M + " Assemblers<br>---- " + Ve_GrL_StM_Par_Co + " Copper ingot " + Ve_GrL_StM_Par_Co_M + " Smelters<br>----- " + Ve_GrL_StM_Par_Co_Ore + " Copper ore<br>---- " + Ve_GrL_StM_Par_Gr + " Graphene " + Ve_GrL_StM_Par_Gr_M + " Chemical plants<br>*----- " + Ve_GrL_StM_Par_Gr_Hy + " Hydrogen<br>------ " + Ve_GrL_StM_Par_Gr_Fi + " Fire ice<br>---- " + Ve_GrL_StM_Par_Tu + " Turbine " + Ve_GrL_StM_Par_Tu_M + " Assemblers<br>----- " + Ve_GrL_StM_Par_Tu_MaC + " Magnetic coil " + Ve_GrL_StM_Par_Tu_MaC_M + " Assemblers<br>------ " + Ve_GrL_StM_Par_Tu_MaC_Co + " Copper ingot " + Ve_GrL_StM_Par_Tu_MaC_Co_M + " Smelters<br>------- " + Ve_GrL_StM_Par_Tu_MaC_Co_Ore + " Copper ore<br>------ " + Ve_GrL_StM_Par_Tu_MaC_Ma + " Magnet " + Ve_GrL_StM_Par_Tu_MaC_Ma_M + " Smelters<br>------- " + Ve_GrL_StM_Par_Tu_MaC_Ma_Ore + " Iron ore<br>----- " + Ve_GrL_StM_Par_Tu_Mo + " Motor " + Ve_GrL_StM_Par_Tu_Mo_M + " Assemblers<br>----- " + Ve_GrL_StM_Par_Tu_Mo_Ir + " Iron ingot " + Ve_GrL_StM_Par_Tu_Mo_Ir_M + " Smelters<br>------ " + Ve_GrL_StM_Par_Tu_Mo_Ir_Ore + " Iron ore<br>----- " + Ve_GrL_StM_Par_Tu_Mo_Ge + " Gears " + Ve_GrL_StM_Par_Tu_Mo_Ge_M + " Assemblers<br>------- " + Ve_GrL_StM_Par_Tu_Mo_Ge_Ir + " Iron ingot " + Ve_GrL_StM_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>-------- " + Ve_GrL_StM_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>------ " + Ve_GrL_StM_Par_Tu_Mo_MaC + " Magnetic coil " + Ve_GrL_StM_Par_Tu_Mo_MaC_M + " Assemblers<br>------- " + Ve_GrL_StM_Par_Tu_Mo_MaC_Co + " Copper ingot " + Ve_GrL_StM_Par_Tu_Mo_MaC_Co_M + " Smelters<br>-------- " + Ve_GrL_StM_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>------- " + Ve_GrL_StM_Par_Tu_Mo_MaC_Ma + " Magnet " + Ve_GrL_StM_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>-------- " + Ve_GrL_StM_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>-- " + Ve_GrL_Di + " Diamond " + Ve_GrL_Di_M + " Smelters<br>--- " + Ve_GrL_Di_Ore + " Kimberlite ore<br>- " + Ve_Qu + " Quantum chip " + Ve_Qu_M + " Assemblers<br>-- " +  Ve_Qu_PlF + " Plane filter " +  Ve_Qu_PlF_M + " Assemblers<br>--- " +  Ve_Qu_PlF_TiG + " Titanium glass " +  Ve_Qu_PlF_TiG_M + " Assemblers<br>---- " +  Ve_Qu_PlF_TiG_Wa + " Water<br>---- " +  Ve_Qu_PlF_TiG_Gl + " Glass " +  Ve_Qu_PlF_TiG_Gl_M + " Smelters<br>----- " +  Ve_Qu_PlF_TiG_Gl_Ore + " Stone<br>---- " +  Ve_Qu_PlF_TiG_Ti + " Titanium ingot " +  Ve_Qu_PlF_TiG_Ti_M + " Smelters<br>---- " +  Ve_Qu_PlF_TiG_Ti_Ore + " Titanium ore<br>-- " +  Ve_Qu_PlF_Cas + " Casimir crystal " +  Ve_Qu_PlF_Cas_M + " Assemblers<br>--- " +  Ve_Qu_PlF_Cas_Opt +" Optical grading crystal<br>*---- " +  Ve_Qu_PlF_Cas_Gr_Hy + " Hydrogen<br>---- " +  Ve_Qu_PlF_Cas_Gr + " Graphene " +  Ve_Qu_PlF_Cas_Gr_M + " Chemical plants<br>----- " +  Ve_Qu_PlF_Cas_Gr_Fi + " Fire ice<br>---- " +  Ve_Qu_PlF_Cas_Hy + " Hydrogen<br>-- " +  Ve_Qu_Pro + " Processor " +  Ve_Qu_Pro_M + " Assemblers<br>--- " +  Ve_Qu_Pro_Ci + " Circuit board " +  Ve_Qu_Pro_Ci_M + " Assemblers<br>---- " +  Ve_Qu_Pro_Ci_Co + " Copper ingot " +  Ve_Qu_Pro_Ci_Co_M + " Smelters<br>----- " +  Ve_Qu_Pro_Ci_Co_Ore + " Copper ore<br>---- " +  Ve_Qu_Pro_Ci_Ir + " Iron ingot " +  Ve_Qu_Pro_Ci_Ir_M + " Smelters<br>----- " +  Ve_Qu_Pro_Ci_Ir_Ore + " Iron ore<br>--- " +  Ve_Qu_Pro_My + " Mycrocrystalline component " +  Ve_Qu_Pro_My_M + " Assemblers<br>---- " +  Ve_Qu_Pro_My_Co + " Copper ingot " +  Ve_Qu_Pro_My_Co_M + " Smelters<br>----- " +  Ve_Qu_Pro_My_Co_Ore + " Copper ore<br>---- " +  Ve_Qu_Pro_My_Si + " Sillicon ingot " +  Ve_Qu_Pro_My_Si_M + " Smelters<br>----- " +  Ve_Qu_Pro_My_Si_Ore + " Sillicon ore<br>- " + Ve_Qu_PlF + " Plane filter " + Ve_Qu_PlF_M + " Assemblers<br>-- " + Ve_Qu_PlF_TiG + " Titanium glass " + Ve_Qu_PlF_TiG_M + " Assemblers<br>--- " + Ve_Qu_PlF_TiG_Wa + " Water<br>--- " + Ve_Qu_PlF_TiG_Gl + " Glass " + Ve_Qu_PlF_TiG_Gl_M + " Smelters<br>---- " + Ve_Qu_PlF_TiG_Gl_Ore + " Stone<br>--- " + Ve_Qu_PlF_TiG_Ti + " Titanium ingot " + Ve_Qu_PlF_TiG_Ti_M + " Smelters<br>---- " + Ve_Qu_PlF_TiG_Ti_Ore + " Titanium ore<br>-- " + Ve_Qu_PlF_Cas + " Casimir crystal " + Ve_Qu_PlF_Cas_M + " Assemblers<br>--- " + Ve_Qu_PlF_Cas_Opt +" Optical grading crystal<br>*--- " + Ve_Qu_PlF_Cas_Gr_Hy + " Hydrogen<br>--- " + Ve_Qu_PlF_Cas_Gr + " Graphene " + Ve_Qu_PlF_Cas_Gr_M + " Chemical plants<br>---- " + Ve_Qu_PlF_Cas_Gr_Fi + " Fire ice<br>--- " + Ve_Qu_PlF_Cas_Hy + " Hydrogen<br>"
    }
    //Check Artificial sun
    if (Ar > 0) {
      output += Ar + " Artificial sun " + Ar_M + " Assemblers<br>- " + Ar_TiA + " Titanium alloy " + Ar_TiA_M + " Smelter<br>-- " + Ar_TiA_Su + " Sulfuric acid<br>-- " + Ar_TiA_St + " Steel " + Ar_TiA_St_M + " Smelters<br>--- " + Ar_TiA_St_Ir + " Iron ingot " + Ar_TiA_St_Ir_M + " Smelters<br>---- " + Ar_TiA_St_Ir_Ore + " Iron ore<br>-- " + Ar_TiA_Ti + " Titanium ingot " + Ar_TiA_Ti_M + " Smelters<br>--- " + Ar_TiA_Ti_Ore + " Titanium ore<br>- " + Ar_FrM + " Frame material " + Ar_FrM_M + " Assemblers<br>-- " + Ar_FrM_TiA + " Titanium alloy " + Ar_FrM_TiA_M + " Smelter<br>--- " + Ar_FrM_TiA_Su + " Sulfuric acid<br>--- " + Ar_FrM_TiA_St + " Steel " + Ar_FrM_TiA_St_M + " Smelters<br>---- " + Ar_FrM_TiA_St_Ir + " Iron ingot " + Ar_FrM_TiA_St_Ir_M + " Smelters<br>----- " + Ar_FrM_TiA_St_Ir_Ore + " Iron ore<br>--- " + Ar_FrM_TiA_Ti + " Titanium ingot " + Ar_FrM_TiA_Ti_M + " Smelters<br>--- " + Ar_FrM_TiA_Ti_Ore + " Titanium ore<br>-- " + Ar_FrM_Si + " Sillicon ingot " + Ar_FrM_Si_M + " Smelters <br>--- " + Ar_FrM_Si_Ore + " Sillicon ore<br>-- " + Ar_FrM_Ca + " Carbon nanotube " + Ar_FrM_Ca_M + " Chemical plants<br>--- " + Ar_FrM_Ca_Spi + " Spiniform crystal<br>- " + Ar_An + " Annihilation contraint sphere " + Ar_An_M + " Assemblers<br>-- " +  Ar_An_Pro + " Processor " + Ar_An_Pro_M + " Assemblers<br>--- " + Ar_An_Pro_Ci + " Circuit board " + Ar_An_Pro_Ci_M + " Assemblers<br>---- " + Ar_An_Pro_Ci_Co + " Copper ingot " + Ar_An_Pro_Ci_Co_M + " Smelters<br>----- " + Ar_An_Pro_Ci_Co_Ore + " Copper ore<br>---- " + Ar_An_Pro_Ci_Ir + " Iron ingot " + Ar_An_Pro_Ci_Ir_M + " Smelters<br>----- " + Ar_An_Pro_Ci_Ir_Ore + " Iron ore<br>--- " + Ar_An_Pro_My + " Mycrocrystalline component " + Ar_An_Pro_My_M + " Assemblers<br>---- " + Ar_An_Pro_My_Co + " Copper ingot " + Ar_An_Pro_My_Co_M + " Smelters<br>----- " + Ar_An_Pro_My_Co_Ore + " Copper ore<br>---- " + Ar_An_Pro_My_Si + " Sillicon ingot " + Ar_An_Pro_My_Si_M + " Smelters<br>----- " + Ar_An_Pro_My_Si_Ore + " Sillicon ore<br>-- " + Ar_An_Par + " Particle container " + Ar_An_Par_M + " Assemblers<br>--- " + Ar_An_Par_Co + " Copper ingot " + Ar_An_Par_Co_M + " Smelters<br>---- " + Ar_An_Par_Co_Ore + " Copper ore<br>--- " + Ar_An_Par_Gr + " Graphene " + Ar_An_Par_Gr_M + " Chemical plants<br>*---- " + Ar_An_Par_Gr_Hy + " Hydrogen<br>----- " + Ar_An_Par_Gr_Fi + " Fire ice<br>--- " + Ar_An_Par_Tu + " Turbine " + Ar_An_Par_Tu_M + " Assemblers<br>---- " + Ar_An_Par_Tu_MaC + " Magnetic coil " + Ar_An_Par_Tu_MaC_M + " Assemblers<br>----- " + Ar_An_Par_Tu_MaC_Co + " Copper ingot " + Ar_An_Par_Tu_MaC_Co_M + " Smelters<br>------ " + Ar_An_Par_Tu_MaC_Co_Ore + " Copper ore<br>----- " + Ar_An_Par_Tu_MaC_Ma + " Magnet " + Ar_An_Par_Tu_MaC_Ma_M + " Smelters<br>------ " + Ar_An_Par_Tu_MaC_Ma_Ore + " Iron ore<br>---- " + Ar_An_Par_Tu_Mo + " Motor " + Ar_An_Par_Tu_Mo_M + " Assemblers<br>---- " + Ar_An_Par_Tu_Mo_Ir + " Iron ingot " + Ar_An_Par_Tu_Mo_Ir_M + " Smelters<br>----- " + Ar_An_Par_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Ar_An_Par_Tu_Mo_Ge + " Gears " + Ar_An_Par_Tu_Mo_Ge_M + " Assemblers<br>------ " + Ar_An_Par_Tu_Mo_Ge_Ir + " Iron ingot " + Ar_An_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>------- " + Ar_An_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>----- " + Ar_An_Par_Tu_Mo_MaC + " Magnetic coil " + Ar_An_Par_Tu_Mo_MaC_M + " Assemblers<br>------ " + Ar_An_Par_Tu_Mo_MaC_Co + " Copper ingot " + Ar_An_Par_Tu_Mo_MaC_Co_M + " Smelters<br>------- " + Ar_An_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>------ " + Ar_An_Par_Tu_Mo_MaC_Ma + " Magnet " + Ar_An_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>------- " + Ar_An_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Ar_Qu + " Quantum chip " + Ar_Qu_M + " Assemblers<br>-- " +  Ar_Qu_PlF + " Plane filter " +  Ar_Qu_PlF_M + " Assemblers<br>--- " +  Ar_Qu_PlF_TiG + " Titanium glass " +  Ar_Qu_PlF_TiG_M + " Assemblers<br>---- " +  Ar_Qu_PlF_TiG_Wa + " Water<br>---- " +  Ar_Qu_PlF_TiG_Gl + " Glass " +  Ar_Qu_PlF_TiG_Gl_M + " Smelters<br>----- " +  Ar_Qu_PlF_TiG_Gl_Ore + " Stone<br>---- " +  Ar_Qu_PlF_TiG_Ti + " Titanium ingot " +  Ar_Qu_PlF_TiG_Ti_M + " Smelters<br>---- " +  Ar_Qu_PlF_TiG_Ti_Ore + " Titanium ore<br>-- " +  Ar_Qu_PlF_Cas + " Casimir crystal " +  Ar_Qu_PlF_Cas_M + " Assemblers<br>--- " +  Ar_Qu_PlF_Cas_Opt +" Optical grading crystal<br>*---- " +  Ar_Qu_PlF_Cas_Gr_Hy + " Hydrogen<br>---- " +  Ar_Qu_PlF_Cas_Gr + " Graphene " +  Ar_Qu_PlF_Cas_Gr_M + " Chemical plants<br>----- " +  Ar_Qu_PlF_Cas_Gr_Fi + " Fire ice<br>---- " +  Ar_Qu_PlF_Cas_Hy + " Hydrogen<br>-- " +  Ar_Qu_Pro + " Processor " +  Ar_Qu_Pro_M + " Assemblers<br>--- " +  Ar_Qu_Pro_Ci + " Circuit board " +  Ar_Qu_Pro_Ci_M + " Assemblers<br>---- " +  Ar_Qu_Pro_Ci_Co + " Copper ingot " +  Ar_Qu_Pro_Ci_Co_M + " Smelters<br>----- " +  Ar_Qu_Pro_Ci_Co_Ore + " Copper ore<br>---- " +  Ar_Qu_Pro_Ci_Ir + " Iron ingot " +  Ar_Qu_Pro_Ci_Ir_M + " Smelters<br>----- " +  Ar_Qu_Pro_Ci_Ir_Ore + " Iron ore<br>--- " +  Ar_Qu_Pro_My + " Mycrocrystalline component " +  Ar_Qu_Pro_My_M + " Assemblers<br>---- " +  Ar_Qu_Pro_My_Co + " Copper ingot " +  Ar_Qu_Pro_My_Co_M + " Smelters<br>----- " +  Ar_Qu_Pro_My_Co_Ore + " Copper ore<br>---- " +  Ar_Qu_Pro_My_Si + " Sillicon ingot " +  Ar_Qu_Pro_My_Si_M + " Smelters<br>----- " +  Ar_Qu_Pro_My_Si_Ore + " Sillicon ore<br>" 
    }
    //Check Logistics distributer
    if (LoDi > 0) {
      output += LoDi + " Logistics distributer " + LoDi_M + " Assemblers<br>- " + LoDi_Ir + " Iron ingot " + LoDi_Ir_M + " Smelters <br>-- " + LoDi_Ir_Ore + " Iron ore<br>- " + LoDi_PlE + " Plasma exciter " + LoDi_PlE_M + " Assemblers<br>-- " +LoDi_PlE_Pr + " Prism " + LoDi_PlE_Pr_M + " Machines<br>--- " + LoDi_PlE_Pr_Gl + " Glass " + LoDi_PlE_Pr_Gl_M + " Smelters<br>---- " + LoDi_PlE_Pr_Gl_Ore + " Stone<br>-- " + LoDi_PlE_MaC + " Magnetic coil " + LoDi_PlE_MaC_M + " Assemblers<br>--- " + LoDi_PlE_MaC_Ma + " Magnets " + LoDi_PlE_MaC_Ma_M + " Smelters<br>---- " + LoDi_PlE_MaC_Ma_Ore + " Iron ore<br>--- " + LoDi_PlE_MaC_Co + " Copper ingot " + LoDi_PlE_MaC_Co_M + " Smelters<br>---- " + LoDi_PlE_MaC_Co_Ore + " Copper ore<br>- " + LoDi_Pro + " Processor " + LoDi_Pro_M + " Assemblers<br>-- " + LoDi_Pro_Ci + " Circuit board " + LoDi_Pro_Ci_M + " Assemblers<br>--- " + LoDi_Pro_Ci_Co + " Copper ingot " + LoDi_Pro_Ci_Co_M + " Smelters<br>---- " + LoDi_Pro_Ci_Co_Ore + " Copper ore<br>--- " + LoDi_Pro_Ci_Ir + " Iron ingot " + LoDi_Pro_Ci_Ir_M + " Smelters<br>---- " + LoDi_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + LoDi_Pro_My + " Mycrocrystalline component " + LoDi_Pro_My_M + " Assemblers<br>--- " + LoDi_Pro_My_Co + " Copper ingot " + LoDi_Pro_My_Co_M + " Smelters<br>---- " + LoDi_Pro_My_Co_Ore + " Copper ore<br>--- " + LoDi_Pro_My_Si + " Sillicon ingot " + LoDi_Pro_My_Si_M + " Smelters<br>---- " + LoDi_Pro_My_Si_Ore + " Sillicon ore<br>" 
    }
    //Check Planetary logistic tower
    if (PlL > 0) {
      output += PlL + " Planetary logistic tower " + PlL_M + " Assemblers<br>- " + PlL_St + " Steel " + PlL_St_M + " Smelters <br>-- "+ PlL_St_Ir + " Iron ingot " + PlL_St_Ir_M + " Smelters <br>--- "+ PlL_St_Ir_Ore + " Iron ore<br>- " + PlL_Ti + " Titanium " + PlL_Ti_M + " Smelters <br>-- " + PlL_Ti_Ore + " Titanium ore<br>- " + PlL_Pro + " Processor " + PlL_Pro_M + " Assemblers<br>-- " + PlL_Pro_Ci + " Circuit board " + PlL_Pro_Ci_M + " Assemblers<br>--- " + PlL_Pro_Ci_Co + " Copper ingot " + PlL_Pro_Ci_Co_M + " Smelters<br>---- " + PlL_Pro_Ci_Co_Ore + " Copper ore<br>--- " + PlL_Pro_Ci_Ir + " Iron ingot " + PlL_Pro_Ci_Ir_M + " Smelters<br>---- " + PlL_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + PlL_Pro_My + " Mycrocrystalline component " + PlL_Pro_My_M + " Assemblers<br>--- " + PlL_Pro_My_Co + " Copper ingot " + PlL_Pro_My_Co_M + " Smelters<br>---- " + PlL_Pro_My_Co_Ore + " Copper ore<br>--- " + PlL_Pro_My_Si + " Sillicon ingot " + PlL_Pro_My_Si_M + " Smelters<br>---- " + PlL_Pro_My_Si_Ore + " Sillicon ore<br>- " + PlL_Par + " Particle container " + PlL_Par_M + " Assemblers<br>-- " + PlL_Par_Co + " Copper ingot " + PlL_Par_Co_M + " Smelters<br>--- " + PlL_Par_Co_Ore + " Copper ore<br>-- " + PlL_Par_Gr + " Graphene " + PlL_Par_Gr_M + " Chemical plants<br>*--- " + PlL_Par_Gr_Hy + " Hydrogen<br>---- " + PlL_Par_Gr_Fi + " Fire ice<br>-- " + PlL_Par_Tu + " Turbine " + PlL_Par_Tu_M + " Assemblers<br>--- " + PlL_Par_Tu_MaC + " Magnetic coil " + PlL_Par_Tu_MaC_M + " Assemblers<br>---- " + PlL_Par_Tu_MaC_Co + " Copper ingot " + PlL_Par_Tu_MaC_Co_M + " Smelters<br>----- " + PlL_Par_Tu_MaC_Co_Ore + " Copper ore<br>---- " + PlL_Par_Tu_MaC_Ma + " Magnet " + PlL_Par_Tu_MaC_Ma_M + " Smelters<br>----- " + PlL_Par_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + PlL_Par_Tu_Mo + " Motor " + PlL_Par_Tu_Mo_M + " Assemblers<br>--- " + PlL_Par_Tu_Mo_Ir + " Iron ingot " + PlL_Par_Tu_Mo_Ir_M + " Smelters<br>---- " + PlL_Par_Tu_Mo_Ir_Ore + " Iron ore<br>--- " + PlL_Par_Tu_Mo_Ge + " Gears " + PlL_Par_Tu_Mo_Ge_M + " Assemblers<br>----- " + PlL_Par_Tu_Mo_Ge_Ir + " Iron ingot " + PlL_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + PlL_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + PlL_Par_Tu_Mo_MaC + " Magnetic coil " + PlL_Par_Tu_Mo_MaC_M + " Assemblers<br>----- " + PlL_Par_Tu_Mo_MaC_Co + " Copper ingot " + PlL_Par_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + PlL_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + PlL_Par_Tu_Mo_MaC_Ma + " Magnet " + PlL_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + PlL_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"  
    }
    //Check Interstellar logistic tower
    if (In > 0) {
      output += In + " Interstellar logisitic tower " + In_M + " Assemblers<br>- " + In_TiA + " Titanium alloy " + In_TiA_M + " Smelter<br>-- " + In_TiA_Su + " Sulfuric acid<br>-- " + In_TiA_St + " Steel " + In_TiA_St_M + " Smelters<br>--- " + In_TiA_St_Ir + " Iron ingot " + In_TiA_St_Ir_M + " Smelters<br>---- " + In_TiA_St_Ir_Ore + " Iron ore<br>-- " + In_TiA_Ti + " Titanium ingot " + In_TiA_Ti_M + " Smelters<br>--- " + In_TiA_Ti_Ore + " Titanium ore<br>- " + In_PlL + " Planetary logistic tower " + In_PlL_M + " Assemblers<br>-- " + In_PlL_St + " Steel " + In_PlL_St_M + " Smelters <br>--- "+ In_PlL_St_Ir + " Iron ingot " + In_PlL_St_Ir_M + " Smelters <br>---- "+ In_PlL_St_Ir_Ore + " Iron ore<br>-- " + In_PlL_Ti + " Titanium " + In_PlL_Ti_M + " Smelters <br>--- " + In_PlL_Ti_Ore + " Titanium ore<br>-- " + In_PlL_Pro + " Processor " + In_PlL_Pro_M + " Assemblers<br>--- " + In_PlL_Pro_Ci + " Circuit board " + In_PlL_Pro_Ci_M + " Assemblers<br>---- " + In_PlL_Pro_Ci_Co + " Copper ingot " + In_PlL_Pro_Ci_Co_M + " Smelters<br>----- " + In_PlL_Pro_Ci_Co_Ore + " Copper ore<br>---- " + In_PlL_Pro_Ci_Ir + " Iron ingot " + In_PlL_Pro_Ci_Ir_M + " Smelters<br>----- " + In_PlL_Pro_Ci_Ir_Ore + " Iron ore<br>--- " + In_PlL_Pro_My + " Mycrocrystalline component " + In_PlL_Pro_My_M + " Assemblers<br>---- " + In_PlL_Pro_My_Co + " Copper ingot " + In_PlL_Pro_My_Co_M + " Smelters<br>----- " + In_PlL_Pro_My_Co_Ore + " Copper ore<br>---- " + In_PlL_Pro_My_Si + " Sillicon ingot " + In_PlL_Pro_My_Si_M + " Smelters<br>----- " + In_PlL_Pro_My_Si_Ore + " Sillicon ore<br>-- " + In_PlL_Par + " Particle container " + In_PlL_Par_M + " Assemblers<br>--- " + In_PlL_Par_Co + " Copper ingot " + In_PlL_Par_Co_M + " Smelters<br>---- " + In_PlL_Par_Co_Ore + " Copper ore<br>--- " + In_PlL_Par_Gr + " Graphene " + In_PlL_Par_Gr_M + " Chemical plants<br>-*--- " + In_PlL_Par_Gr_Hy + " Hydrogen<br>----- " + In_PlL_Par_Gr_Fi + " Fire ice<br>--- " + In_PlL_Par_Tu + " Turbine " + In_PlL_Par_Tu_M + " Assemblers<br>---- " + In_PlL_Par_Tu_MaC + " Magnetic coil " + In_PlL_Par_Tu_MaC_M + " Assemblers<br>----- " + In_PlL_Par_Tu_MaC_Co + " Copper ingot " + In_PlL_Par_Tu_MaC_Co_M + " Smelters<br>------ " + In_PlL_Par_Tu_MaC_Co_Ore + " Copper ore<br>----- " + In_PlL_Par_Tu_MaC_Ma + " Magnet " + In_PlL_Par_Tu_MaC_Ma_M + " Smelters<br>------ " + In_PlL_Par_Tu_MaC_Ma_Ore + " Iron ore<br>---- " + In_PlL_Par_Tu_Mo + " Motor " + In_PlL_Par_Tu_Mo_M + " Assemblers<br>---- " + In_PlL_Par_Tu_Mo_Ir + " Iron ingot " + In_PlL_Par_Tu_Mo_Ir_M + " Smelters<br>----- " + In_PlL_Par_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + In_PlL_Par_Tu_Mo_Ge + " Gears " + In_PlL_Par_Tu_Mo_Ge_M + " Assemblers<br>------ " + In_PlL_Par_Tu_Mo_Ge_Ir + " Iron ingot " + In_PlL_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>------- " + In_PlL_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>----- " + In_PlL_Par_Tu_Mo_MaC + " Magnetic coil " + In_PlL_Par_Tu_Mo_MaC_M + " Assemblers<br>------ " + In_PlL_Par_Tu_Mo_MaC_Co + " Copper ingot " + In_PlL_Par_Tu_Mo_MaC_Co_M + " Smelters<br>------- " + In_PlL_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>------ " + In_PlL_Par_Tu_Mo_MaC_Ma + " Magnet " + In_PlL_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>------- " + In_PlL_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + In_Par + " Particle container " + In_Par_M + " Assemblers<br>-- " + In_Par_Co + " Copper ingot " + In_Par_Co_M + " Smelters<br>--- " + In_Par_Co_Ore + " Copper ore<br>-- " + In_Par_Gr + " Graphene " + In_Par_Gr_M + " Chemical plants<br>*--- " + In_Par_Gr_Hy + " Hydrogen<br>---- " + In_Par_Gr_Fi + " Fire ice<br>-- " + In_Par_Tu + " Turbine " + In_Par_Tu_M + " Assemblers<br>--- " + In_Par_Tu_MaC + " Magnetic coil " + In_Par_Tu_MaC_M + " Assemblers<br>---- " + In_Par_Tu_MaC_Co + " Copper ingot " + In_Par_Tu_MaC_Co_M + " Smelters<br>----- " + In_Par_Tu_MaC_Co_Ore + " Copper ore<br>---- " + In_Par_Tu_MaC_Ma + " Magnet " + In_Par_Tu_MaC_Ma_M + " Smelters<br>----- " + In_Par_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + In_Par_Tu_Mo + " Motor " + In_Par_Tu_Mo_M + " Assemblers<br>--- " + In_Par_Tu_Mo_Ir + " Iron ingot " + In_Par_Tu_Mo_Ir_M + " Smelters<br>---- " + In_Par_Tu_Mo_Ir_Ore + " Iron ore<br>--- " + In_Par_Tu_Mo_Ge + " Gears " + In_Par_Tu_Mo_Ge_M + " Assemblers<br>----- " + In_Par_Tu_Mo_Ge_Ir + " Iron ingot " + In_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + In_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + In_Par_Tu_Mo_MaC + " Magnetic coil " + In_Par_Tu_Mo_MaC_M + " Assemblers<br>----- " + In_Par_Tu_Mo_MaC_Co + " Copper ingot " + In_Par_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + In_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + In_Par_Tu_Mo_MaC_Ma + " Magnet " + In_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + In_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"   
    }
    //Check Orbital collider
    if (Or > 0) {
      output += Or + " Orbital collider " + Or_M + " Assemblers<br>- " + Or_In + " Interstellar logisitic tower " + Or_In_M + " Assemblers<br>-- " + Or_In_TiA + " Titanium alloy " + Or_In_TiA_M + " Smelter<br>--- " + Or_In_TiA_Su + " Sulfuric acid<br>--- " + Or_In_TiA_St + " Steel " + Or_In_TiA_St_M + " Smelters<br>---- " + Or_In_TiA_St_Ir + " Iron ingot " + Or_In_TiA_St_Ir_M + " Smelters<br>----- " + Or_In_TiA_St_Ir_Ore + " Iron ore<br>--- " + Or_In_TiA_Ti + " Titanium ingot " + Or_In_TiA_Ti_M + " Smelters<br>---- " + Or_In_TiA_Ti_Ore + " Titanium ore<br>-- " + Or_In_PlL + " Planetary logistic tower " + Or_In_PlL_M + " Assemblers<br>--- " + Or_In_PlL_St + " Steel " + Or_In_PlL_St_M + " Smelters <br>---- "+ Or_In_PlL_St_Ir + " Iron ingot " + Or_In_PlL_St_Ir_M + " Smelters <br>----- "+ Or_In_PlL_St_Ir_Ore + " Iron ore<br>--- " + Or_In_PlL_Ti + " Titanium " + Or_In_PlL_Ti_M + " Smelters <br>---- " + Or_In_PlL_Ti_Ore + " Titanium ore<br>--- " + Or_In_PlL_Pro + " Processor " + Or_In_PlL_Pro_M + " Assemblers<br>---- " + Or_In_PlL_Pro_Ci + " Circuit board " + Or_In_PlL_Pro_Ci_M + " Assemblers<br>----- " + Or_In_PlL_Pro_Ci_Co + " Copper ingot " + Or_In_PlL_Pro_Ci_Co_M + " Smelters<br>------ " + Or_In_PlL_Pro_Ci_Co_Ore + " Copper ore<br>----- " + Or_In_PlL_Pro_Ci_Ir + " Iron ingot " + Or_In_PlL_Pro_Ci_Ir_M + " Smelters<br>------ " + Or_In_PlL_Pro_Ci_Ir_Ore + " Iron ore<br>---- " + Or_In_PlL_Pro_My + " Mycrocrystalline component " + Or_In_PlL_Pro_My_M + " Assemblers<br>----- " + Or_In_PlL_Pro_My_Co + " Copper ingot " + Or_In_PlL_Pro_My_Co_M + " Smelters<br>------ " + Or_In_PlL_Pro_My_Co_Ore + " Copper ore<br>----- " + Or_In_PlL_Pro_My_Si + " Sillicon ingot " + Or_In_PlL_Pro_My_Si_M + " Smelters<br>------ " + Or_In_PlL_Pro_My_Si_Ore + " Sillicon ore<br>--- " + Or_In_PlL_Par + " Particle container " + Or_In_PlL_Par_M + " Assemblers<br>---- " + Or_In_PlL_Par_Co + " Copper ingot " + Or_In_PlL_Par_Co_M + " Smelters<br>----- " + Or_In_PlL_Par_Co_Ore + " Copper ore<br>---- " + Or_In_PlL_Par_Gr + " Graphene " + Or_In_PlL_Par_Gr_M + " Chemical plants<br>--*--- " + Or_In_PlL_Par_Gr_Hy + " Hydrogen<br>------ " + Or_In_PlL_Par_Gr_Fi + " Fire ice<br>---- " + Or_In_PlL_Par_Tu + " Turbine " + Or_In_PlL_Par_Tu_M + " Assemblers<br>----- " + Or_In_PlL_Par_Tu_MaC + " Magnetic coil " + Or_In_PlL_Par_Tu_MaC_M + " Assemblers<br>------ " + Or_In_PlL_Par_Tu_MaC_Co + " Copper ingot " + Or_In_PlL_Par_Tu_MaC_Co_M + " Smelters<br>------- " + Or_In_PlL_Par_Tu_MaC_Co_Ore + " Copper ore<br>------ " + Or_In_PlL_Par_Tu_MaC_Ma + " Magnet " + Or_In_PlL_Par_Tu_MaC_Ma_M + " Smelters<br>------- " + Or_In_PlL_Par_Tu_MaC_Ma_Ore + " Iron ore<br>----- " + Or_In_PlL_Par_Tu_Mo + " Motor " + Or_In_PlL_Par_Tu_Mo_M + " Assemblers<br>----- " + Or_In_PlL_Par_Tu_Mo_Ir + " Iron ingot " + Or_In_PlL_Par_Tu_Mo_Ir_M + " Smelters<br>------ " + Or_In_PlL_Par_Tu_Mo_Ir_Ore + " Iron ore<br>----- " + Or_In_PlL_Par_Tu_Mo_Ge + " Gears " + Or_In_PlL_Par_Tu_Mo_Ge_M + " Assemblers<br>------- " + Or_In_PlL_Par_Tu_Mo_Ge_Ir + " Iron ingot " + Or_In_PlL_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>-------- " + Or_In_PlL_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>------ " + Or_In_PlL_Par_Tu_Mo_MaC + " Magnetic coil " + Or_In_PlL_Par_Tu_Mo_MaC_M + " Assemblers<br>------- " + Or_In_PlL_Par_Tu_Mo_MaC_Co + " Copper ingot " + Or_In_PlL_Par_Tu_Mo_MaC_Co_M + " Smelters<br>-------- " + Or_In_PlL_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>------- " + Or_In_PlL_Par_Tu_Mo_MaC_Ma + " Magnet " + Or_In_PlL_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>-------- " + Or_In_PlL_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>-- " + Or_In_Par + " Particle container " + Or_In_Par_M + " Assemblers<br>--- " + Or_In_Par_Co + " Copper ingot " + Or_In_Par_Co_M + " Smelters<br>---- " + Or_In_Par_Co_Ore + " Copper ore<br>--- " + Or_In_Par_Gr + " Graphene " + Or_In_Par_Gr_M + " Chemical plants<br>-*--- " + Or_In_Par_Gr_Hy + " Hydrogen<br>----- " + Or_In_Par_Gr_Fi + " Fire ice<br>--- " + Or_In_Par_Tu + " Turbine " + Or_In_Par_Tu_M + " Assemblers<br>---- " + Or_In_Par_Tu_MaC + " Magnetic coil " + Or_In_Par_Tu_MaC_M + " Assemblers<br>----- " + Or_In_Par_Tu_MaC_Co + " Copper ingot " + Or_In_Par_Tu_MaC_Co_M + " Smelters<br>------ " + Or_In_Par_Tu_MaC_Co_Ore + " Copper ore<br>----- " + Or_In_Par_Tu_MaC_Ma + " Magnet " + Or_In_Par_Tu_MaC_Ma_M + " Smelters<br>------ " + Or_In_Par_Tu_MaC_Ma_Ore + " Iron ore<br>---- " + Or_In_Par_Tu_Mo + " Motor " + Or_In_Par_Tu_Mo_M + " Assemblers<br>---- " + Or_In_Par_Tu_Mo_Ir + " Iron ingot " + Or_In_Par_Tu_Mo_Ir_M + " Smelters<br>----- " + Or_In_Par_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Or_In_Par_Tu_Mo_Ge + " Gears " + Or_In_Par_Tu_Mo_Ge_M + " Assemblers<br>------ " + Or_In_Par_Tu_Mo_Ge_Ir + " Iron ingot " + Or_In_Par_Tu_Mo_Ge_Ir_M + " Smelters<br>------- " + Or_In_Par_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>----- " + Or_In_Par_Tu_Mo_MaC + " Magnetic coil " + Or_In_Par_Tu_Mo_MaC_M + " Assemblers<br>------ " + Or_In_Par_Tu_Mo_MaC_Co + " Copper ingot " + Or_In_Par_Tu_Mo_MaC_Co_M + " Smelters<br>------- " + Or_In_Par_Tu_Mo_MaC_Co_Ore + " Copper ore<br>------ " + Or_In_Par_Tu_Mo_MaC_Ma + " Magnet " + Or_In_Par_Tu_Mo_MaC_Ma_M + " Smelters<br>------- " + Or_In_Par_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Or_El + " Electromagnetic coil " + Or_El_M + " Assemblers<br>-- " + Or_El_Ma + " Magnet " + Or_El_Ma_M + " Smelters<br>--- " + Or_El_Ma_Ore + " Iron ingot<br>-- " + Or_El_GrR + " Graphene rod " + Or_El_GrR_M + " Smelters<br>--- " + Or_El_GrR_Ore + " Coal<br>-- " + Or_El_Tu + " Turbine " + Or_El_Tu_M + " Assemblers<br>--- " + Or_El_Tu_MaC + " Magnetic coil " + Or_El_Tu_MaC_M + " Assemblers<br>---- " + Or_El_Tu_MaC_Co + " Copper ingot " + Or_El_Tu_MaC_Co_M + " Smelters<br>----- " + Or_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Or_El_Tu_MaC_Ma + " Magnet " + Or_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Or_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Or_El_Tu_Mo + " Motor " + Or_El_Tu_Mo_M + " Assemblers<br>---- " + Or_El_Tu_Mo_Ir + " Iron ingot " + Or_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Or_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Or_El_Tu_Mo_Ge + " Gears " + Or_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Or_El_Tu_Mo_Ge_Ir + " Iron ingot " + Or_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Or_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Or_El_Tu_Mo_MaC + " Magnetic coil " + Or_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Or_El_Tu_Mo_MaC_Co + " Copper ingot " + Or_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Or_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Or_El_Tu_Mo_MaC_Ma + " Magnet " + Or_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Or_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Or_Ac + " Accumulator " + Or_Ac_M + " Assemblers<br>-- " + Or_Ac_Ir + " Iron ingot " + Or_Ac_Ir_M + " Smelters <br>--- " + Or_Ac_Ir_Ore + " Iron ore<br>-- " + Or_Ac_SiC + " Sillicon crystal " + Or_Ac_SiC_M + " Smelters <br>--- " + Or_Ac_SiC_Ore + " Fractionated sillicon<br>-- " + Or_Ac_El + " Electromagnetic coil " + Or_Ac_El_M + " Assemblers<br>--- " + Or_Ac_El_Ma + " Magnet " + Or_Ac_El_Ma_M + " Smelters<br>---- " + Or_Ac_El_Ma_Ore + " Iron ingot<br>--- " + Or_Ac_El_GrR + " Graphene rod " + Or_Ac_El_GrR_M + " Smelters<br>---- " + Or_Ac_El_GrR_Ore + " Coal<br>--- " + Or_Ac_El_Tu + " Turbine " + Or_Ac_El_Tu_M + " Assemblers<br>---- " + Or_Ac_El_Tu_MaC + " Magnetic coil " + Or_Ac_El_Tu_MaC_M + " Assemblers<br>----- " + Or_Ac_El_Tu_MaC_Co + " Copper ingot " + Or_Ac_El_Tu_MaC_Co_M + " Smelters<br>------ " + Or_Ac_El_Tu_MaC_Co_Ore + " Copper ore<br>----- " + Or_Ac_El_Tu_MaC_Ma + " Magnet " + Or_Ac_El_Tu_MaC_Ma_M + " Smelters<br>------ " + Or_Ac_El_Tu_MaC_Ma_Ore + " Iron ore<br>---- " + Or_Ac_El_Tu_Mo + " Motor " + Or_Ac_El_Tu_Mo_M + " Assemblers<br>----- " + Or_Ac_El_Tu_Mo_Ir + " Iron ingot " + Or_Ac_El_Tu_Mo_Ir_M + " Smelters<br>------ " + Or_Ac_El_Tu_Mo_Ir_Ore + " Iron ore<br>----- " + Or_Ac_El_Tu_Mo_Ge + " Gears " + Or_Ac_El_Tu_Mo_Ge_M + " Assemblers<br>------ " + Or_Ac_El_Tu_Mo_Ge_Ir + " Iron ingot " + Or_Ac_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------- " + Or_Ac_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>----- " + Or_Ac_El_Tu_Mo_MaC + " Magnetic coil " + Or_Ac_El_Tu_Mo_MaC_M + " Assemblers<br>------ " + Or_Ac_El_Tu_Mo_MaC_Co + " Copper ingot " + Or_Ac_El_Tu_Mo_MaC_Co_M + " Smelters<br>------- " + Or_Ac_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>------ " + Or_Ac_El_Tu_Mo_MaC_Ma + " Magnet " + Or_Ac_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------- " + Or_Ac_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"
    }
    //Check Wind turbine
    if (Wi > 0) {
      output += Wi + " Wind turbinde " + Wi_M + " Assemblers<br>- " + Wi_Ir + " Iron ingot " + Wi_Ir_M + " Smelters <br>-- " + Wi_Ir_Ore + " Iron ore<br>- " + Wi_Ge + " Gear " + Wi_Ge_M + " Assemblers<br>-- " + Wi_Ge_Ir + " Iron ingot" + Wi_Ge_Ir_M + " Smelters <br>--- " + Wi_Ge_Ir_Ore + " Iron ore<br>- " + Wi_MaC + " Magnetic coil " + Wi_MaC_M + " Assemblers<br>-- " + Wi_MaC_Ma + " Magnet " + Wi_MaC_Ma_M + " Smelters<br>--- " + Wi_MaC_Ma_Ore + " Iron ore<br>-- " + Wi_MaC_Co + " Copper ingot " + Wi_MaC_Co_M + " Smelters<br>--- " + Wi_MaC_Co_Ore + " Copper ore<br>" 
    }
    //Check Thermal power plant
    if (ThP > 0) {
      output += ThP + " Thermal power plant " + ThP_M + " Assemblers<br>- " + ThP_Ir + " Iron ingot " + ThP_Ir_M + " Smelters <br>-- " + ThP_Ir_Ore + " Iron ore<br>- " + ThP_Br + " Brick " + ThP_Br_M + " Smelters <br>-- " + ThP_Br_Ore + " Stone<br>- " + ThP_Ge + " Gear " + ThP_Ge_M + " Assemblers<br>-- " + ThP_Ge_Ir + " Iron ingot" + ThP_Ge_Ir_M + " Smelters <br>--- " + ThP_Ge_Ir_Ore + " Iron ore<br>- " + ThP_MaC + " Magnetic coil " + ThP_MaC_M + " Assemblers<br>-- " + ThP_MaC_Ma + " Magnet " + ThP_MaC_Ma_M + " Smelters<br>--- " + ThP_MaC_Ma_Ore + " Iron ore<br>-- " + ThP_MaC_Co + " Copper ingot " + ThP_MaC_Co_M + " Smelters<br>--- " + ThP_MaC_Co_Ore + " Copper ore<br>" 
    }
    //Check Solar pannel
    if (Sol > 0) {
      output += Sol + " Solar pannel " + Sol_M + " Assemblers<br>- " + Sol_Co + " Copper ingot " + Sol_Co_M + " Smelters <br>-- "+ Sol_Co_Ore + " Copper ore<br>- " + Sol_Ir + " Iron ingot " + Sol_Ir_M + " Smelters <br>-- " + Sol_Ir_Ore + " Iron ore<br>- " + Sol_Ci + " Circuit board " + Sol_Ci_M + " Assemblers<br>-- " + Sol_Ci_Ir + " Iron ingot " + Sol_Ci_Ir_M + " Smelters<br>--- " + Sol_Ci_Ir_Ore + " Iron ore <br>-- " + Sol_Ci_Co + " Copper ingot " + Sol_Ci_Co_M + " Smelters <br>--- " + Sol_Ci_Co_Ore + " Copper ore <br>" 
    }
    //Check Accumulator
    if (Ac > 0) {
      output += Ac + " Accumulator " + Ac_M + " Assemblers<br>- " + Ac_Ir + " Iron ingot " + Ac_Ir_M + " Smelters <br>-- " + Ac_Ir_Ore + " Iron ore<br>- " + Ac_SiC + " Sillicon crystal " + Ac_SiC_M + " Smelters <br>-- " + Ac_SiC_Ore + " Fractionated sillicon<br>- " + Ac_El + " Electromagnetic coil " + Ac_El_M + " Assemblers<br>-- " + Ac_El_Ma + " Magnet " + Ac_El_Ma_M + " Smelters<br>--- " + Ac_El_Ma_Ore + " Iron ingot<br>-- " + Ac_El_GrR + " Graphene rod " + Ac_El_GrR_M + " Smelters<br>--- " + Ac_El_GrR_Ore + " Coal<br>-- " + Ac_El_Tu + " Turbine " + Ac_El_Tu_M + " Assemblers<br>--- " + Ac_El_Tu_MaC + " Magnetic coil " + Ac_El_Tu_MaC_M + " Assemblers<br>---- " + Ac_El_Tu_MaC_Co + " Copper ingot " + Ac_El_Tu_MaC_Co_M + " Smelters<br>----- " + Ac_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Ac_El_Tu_MaC_Ma + " Magnet " + Ac_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Ac_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Ac_El_Tu_Mo + " Motor " + Ac_El_Tu_Mo_M + " Assemblers<br>---- " + Ac_El_Tu_Mo_Ir + " Iron ingot " + Ac_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Ac_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Ac_El_Tu_Mo_Ge + " Gears " + Ac_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Ac_El_Tu_Mo_Ge_Ir + " Iron ingot " + Ac_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Ac_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Ac_El_Tu_Mo_MaC + " Magnetic coil " + Ac_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Ac_El_Tu_Mo_MaC_Co + " Copper ingot " + Ac_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Ac_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Ac_El_Tu_Mo_MaC_Ma + " Magnet " + Ac_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Ac_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"  
    }
    //Check Geothermal power station
    if (Geo > 0) {
      output += Geo + " Geothermal power station " + Geo_M + " Assemblers<br>- " + Geo_St + " Steel " + Geo_St_M + " Smelters <br>-- "+ Geo_St_Ir + " Iron ingot " + Geo_St_Ir_M + " Smelters <br>--- "+ Geo_St_Ir_Ore + " Iron ore<br>- " + Geo_Co + " Copper ingot " + Geo_Co_M + " Smelters <br>-- "+ Geo_Co_Ore + " Copper ore<br>- " + Geo_Ph + " Photon combiner " + Geo_Ph_M + " Assemblers<br>-- " + Geo_Ph_Opt + " Optical grading crystal<br>-- " + Geo_Ph_Ci + " Circuit board " + Geo_Ph_Ci_M + " Assemblers<br>--- " + Geo_Ph_Ci_Co + " Copper ingot " + Geo_Ph_Ci_Co_M + " Smelters<br>---- " + Geo_Ph_Ci_Co_Ore + " Copper ore<br>--- " + Geo_Ph_Ci_Ir + " Iron ingot " + Geo_Ph_Ci_Ir_M + " Smelting<br>---- "+ Geo_Ph_Ci_Ir_Ore + " Iron ore<br>- " + Geo_El + " Electromagnetic coil " + Geo_El_M + " Assemblers<br>-- " + Geo_El_Ma + " Magnet " + Geo_El_Ma_M + " Smelters<br>--- " + Geo_El_Ma_Ore + " Iron ingot<br>-- " + Geo_El_GrR + " Graphene rod " + Geo_El_GrR_M + " Smelters<br>--- " + Geo_El_GrR_Ore + " Coal<br>-- " + Geo_El_Tu + " Turbine " + Geo_El_Tu_M + " Assemblers<br>--- " + Geo_El_Tu_MaC + " Magnetic coil " + Geo_El_Tu_MaC_M + " Assemblers<br>---- " + Geo_El_Tu_MaC_Co + " Copper ingot " + Geo_El_Tu_MaC_Co_M + " Smelters<br>----- " + Geo_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Geo_El_Tu_MaC_Ma + " Magnet " + Geo_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Geo_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Geo_El_Tu_Mo + " Motor " + Geo_El_Tu_Mo_M + " Assemblers<br>---- " + Geo_El_Tu_Mo_Ir + " Iron ingot " + Geo_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Geo_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Geo_El_Tu_Mo_Ge + " Gears " + Geo_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Geo_El_Tu_Mo_Ge_Ir + " Iron ingot " + Geo_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Geo_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Geo_El_Tu_Mo_MaC + " Magnetic coil " + Geo_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Geo_El_Tu_Mo_MaC_Co + " Copper ingot " + Geo_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Geo_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Geo_El_Tu_Mo_MaC_Ma + " Magnet " + Geo_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Geo_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>"  
    }
    //Check Mini fusion reactor
    if (Mi > 0) {
      output += Mi + " Mini fusion reactor " + Mi_M + " Assemblers<br>- " + Mi_TiA + " Titanium alloy " + Mi_TiA_M + " Smelter<br>-- " + Mi_TiA_Su + " Sulfuric acid<br>-- " + Mi_TiA_St + " Steel " + Mi_TiA_St_M + " Smelters<br>--- " + Mi_TiA_St_Ir + " Iron ingot " + Mi_TiA_St_Ir_M + " Smelters<br>---- " + Mi_TiA_St_Ir_Ore + " Iron ore<br>-- " + Mi_TiA_Ti + " Titanium ingot " + Mi_TiA_Ti_M + " Smelters<br>--- " + Mi_TiA_Ti_Ore + " Titanium ore<br>- " + Mi_El + " Electromagnetic coil " + Mi_El_M + " Assemblers<br>-- " + Mi_El_Ma + " Magnet " + Mi_El_Ma_M + " Smelters<br>--- " + Mi_El_Ma_Ore + " Iron ingot<br>-- " + Mi_El_GrR + " Graphene rod " + Mi_El_GrR_M + " Smelters<br>--- " + Mi_El_GrR_Ore + " Coal<br>-- " + Mi_El_Tu + " Turbine " + Mi_El_Tu_M + " Assemblers<br>--- " + Mi_El_Tu_MaC + " Magnetic coil " + Mi_El_Tu_MaC_M + " Assemblers<br>---- " + Mi_El_Tu_MaC_Co + " Copper ingot " + Mi_El_Tu_MaC_Co_M + " Smelters<br>----- " + Mi_El_Tu_MaC_Co_Ore + " Copper ore<br>---- " + Mi_El_Tu_MaC_Ma + " Magnet " + Mi_El_Tu_MaC_Ma_M + " Smelters<br>----- " + Mi_El_Tu_MaC_Ma_Ore + " Iron ore<br>--- " + Mi_El_Tu_Mo + " Motor " + Mi_El_Tu_Mo_M + " Assemblers<br>---- " + Mi_El_Tu_Mo_Ir + " Iron ingot " + Mi_El_Tu_Mo_Ir_M + " Smelters<br>----- " + Mi_El_Tu_Mo_Ir_Ore + " Iron ore<br>---- " + Mi_El_Tu_Mo_Ge + " Gears " + Mi_El_Tu_Mo_Ge_M + " Assemblers<br>----- " + Mi_El_Tu_Mo_Ge_Ir + " Iron ingot " + Mi_El_Tu_Mo_Ge_Ir_M + " Smelters<br>------ " + Mi_El_Tu_Mo_Ge_Ir_Ore + " Iron ore<br>---- " + Mi_El_Tu_Mo_MaC + " Magnetic coil " + Mi_El_Tu_Mo_MaC_M + " Assemblers<br>----- " + Mi_El_Tu_Mo_MaC_Co + " Copper ingot " + Mi_El_Tu_Mo_MaC_Co_M + " Smelters<br>------ " + Mi_El_Tu_Mo_MaC_Co_Ore + " Copper ore<br>----- " + Mi_El_Tu_Mo_MaC_Ma + " Magnet " + Mi_El_Tu_Mo_MaC_Ma_M + " Smelters<br>------ " + Mi_El_Tu_Mo_MaC_Ma_Ore + " Iron ore<br>- " + Mi_Pro + " Processor " + Mi_Pro_M + " Assemblers<br>-- " + Mi_Pro_Ci + " Circuit board " + Mi_Pro_Ci_M + " Assemblers<br>--- " + Mi_Pro_Ci_Co + " Copper ingot " + Mi_Pro_Ci_Co_M + " Smelters<br>---- " + Mi_Pro_Ci_Co_Ore + " Copper ore<br>--- " + Mi_Pro_Ci_Ir + " Iron ingot " + Mi_Pro_Ci_Ir_M + " Smelters<br>---- " + Mi_Pro_Ci_Ir_Ore + " Iron ore<br>-- " + Mi_Pro_My + " Mycrocrystalline component " + Mi_Pro_My_M + " Assemblers<br>--- " + Mi_Pro_My_Co + " Copper ingot " + Mi_Pro_My_Co_M + " Smelters<br>---- " + Mi_Pro_My_Co_Ore + " Copper ore<br>--- " + Mi_Pro_My_Si + " Sillicon ingot " + Mi_Pro_My_Si_M + " Smelters<br>---- " + Mi_Pro_My_Si_Ore + " Sillicon ore<br>- " 
      + Mi_Ca + " Carbon nanotube " + Mi_Ca_M + " Chemical plants<br>-- " + Mi_Ca_Spi + " Spiniform crystal<br>" 
    }
    //Check Storage mk1
    if (St1 > 0) {
      output += St1 + " Storage mk1 " + St1_M + " Assemblers<br>- " + St1_Ir + " Iron ingot " + St1_Ir_M + " Smelters <br>-- " + St1_Ir_Ore + " Iron ore<br>- " + St1_Br + " Brick " + St1_Br_M + " Smelters <br>-- " + St1_Br_Ore + " Stone<br>"
    }
    //Check Storage mk2
    if (St2 > 0) {
      output += St2 + " Storage mk2 " + St2_M + " Assemblers<br>- " + St2_St + " Steel " + St2_St_M + " Smelters <br>-- "+ St2_St_Ir + " Iron ingot " + St2_St_Ir_M + " Smelters <br>--- "+ St2_St_Ir_Ore + " Iron ore<br>- " + St2_Br + " Brick " + St2_Br_M + " Smelters <br>-- " + St2_Br_Ore + " Stone<br>"
    }
    //Check Liquid storage
    if (StL > 0) {
      output += StL + " Liquid storage " + StL_M + " Assemblers<br>- " + StL_Ir + " Iron ingot " + StL_Ir_M + " Smelters <br>-- " + StL_Ir_Ore + " Iron ore<br>- " + StL_Br + " Brick " + StL_Br_M + " Smelters <br>-- " + StL_Br_Ore + " Stone<br>- " + StL_Gl + " Glass " + StL_Gl_M + " Smelters <br>-- " + StL_Gl_Ore + " Stone<br>"
    }
    

    // Display the grand total on the page
    document.getElementById("total").innerHTML = output;
    }
